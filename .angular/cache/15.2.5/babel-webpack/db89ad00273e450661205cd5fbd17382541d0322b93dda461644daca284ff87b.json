{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      this.albums = albums.filter(album => {\n        return album.id.toString() === this.artistId.toString();\n      });\n      console.log('Albums:', this.albums);\n    });\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,KAAK,IAAG;QAClC,OAAOA,KAAK,CAACC,EAAE,CAACC,QAAQ,EAAE,KAAK,IAAI,CAACX,QAAQ,CAACW,QAAQ,EAAE;MACzD,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACN,MAAM,CAAC;IACrC,CAAC,CAAC;EACN;;AAfWZ,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlCxB,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","filter","album","id","toString","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {Album, SpotifyService} from '../services/spotify.service';\r\n\r\n@Component({\r\n  selector: 'app-artist-albums',\r\n  templateUrl: './artist-albums.component.html',\r\n  styleUrls: ['./artist-albums.component.css']\r\n})\r\nexport class ArtistAlbumsComponent implements OnInit {\r\n  artistId: number = 0;\r\n  albums: Album[] = [];\r\n\r\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\r\n    this.albumService.getArtistAlbums(this.artistId)\r\n      .subscribe(albums => {\r\n        this.albums = albums.filter(album => {\r\n          return album.id.toString() === this.artistId.toString();\r\n        });\r\n        console.log('Albums:', this.albums);\r\n      });\r\n  }\r\n\r\n  /*ngOnInit() {\r\n    this.route.paramMap.subscribe(params => {\r\n      let artistId = parseInt(<string>params.get('id'));\r\n      this.apiService.getArtistDetails(artistId).subscribe(\r\n        (response: any) => {\r\n          this.artist = response;\r\n          this.albums = response.albums;\r\n          console.log('Albums:', this.albums);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    });\r\n  }*/\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}