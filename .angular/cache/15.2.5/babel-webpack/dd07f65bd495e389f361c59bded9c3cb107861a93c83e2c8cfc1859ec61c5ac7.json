{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction PlaylistComponent_tbody_11_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"td\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const song_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", song_r3.title, \" - \", song_r3.artist.name, \"\");\n  }\n}\nfunction PlaylistComponent_tbody_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\");\n    i0.ɵɵtemplate(1, PlaylistComponent_tbody_11_tr_1_Template, 4, 2, \"tr\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.playlist.songs);\n  }\n}\nfunction PlaylistComponent_div_14_li_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function PlaylistComponent_div_14_li_12_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const song_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.addSongToPlaylist(song_r5));\n    });\n    i0.ɵɵtext(3, \"Ajouter\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const song_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", song_r5.title, \" - \", song_r5.artist.name, \" \");\n  }\n}\nfunction PlaylistComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"div\", 10)(2, \"div\", 11)(3, \"h2\", 12);\n    i0.ɵɵtext(4, \"Ajouter une chanson \\u00E0 la playlist\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 13)(6, \"label\", 14);\n    i0.ɵɵtext(7, \"Rechercher une chanson\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function PlaylistComponent_div_14_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.searchQuery = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function PlaylistComponent_div_14_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.searchSongs());\n    });\n    i0.ɵɵtext(10, \"Rechercher\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"ul\");\n    i0.ɵɵtemplate(12, PlaylistComponent_div_14_li_12_Template, 4, 2, \"li\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 17)(14, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function PlaylistComponent_div_14_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.closeAddSongModal());\n    });\n    i0.ɵɵtext(15, \"Fermer\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.searchQuery);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.searchResults);\n  }\n}\nexport class PlaylistComponent {\n  constructor(spotifyService, route) {\n    this.spotifyService = spotifyService;\n    this.route = route;\n    this.showAddSongModal = false;\n    this.searchQuery = '';\n    this.searchResults = [];\n    this.selectedSongId = null;\n  }\n  ngOnInit() {\n    const playlistId = parseInt(this.route.snapshot.paramMap.get('id') || '0', 10);\n    this.loadPlaylist(playlistId);\n  }\n  loadPlaylist(playlistId) {\n    this.spotifyService.getPlaylist(playlistId).subscribe(response => {\n      this.playlist = response;\n    }, error => {\n      console.error('Error loading playlist:', error);\n    });\n  }\n  createPlaylist(name) {\n    this.spotifyService.createPlaylist(name).subscribe(response => {\n      console.log('Playlist created:', response);\n    }, error => {\n      console.error('Error creating playlist:', error);\n    });\n  }\n  openAddSongModal() {\n    this.showAddSongModal = true;\n  }\n  closeAddSongModal() {\n    this.showAddSongModal = false;\n  }\n  searchSongs() {\n    this.spotifyService.searchSongs(this.searchQuery).subscribe(results => {\n      this.searchResults = this.searchResults.concat(results);\n    });\n  }\n  addSongToPlaylist(song) {\n    if (!this.playlist || !this.playlist.id) {\n      console.error('Playlist ID not found');\n      return;\n    }\n    const playlistId = this.playlist.id;\n    const songId = song.id || song.song_id;\n    this.spotifyService.addSongToPlaylist(playlistId, songId).subscribe(response => {\n      console.log('Song added to playlist:', response);\n      this.closeAddSongModal();\n      // Rechargez la playlist après avoir ajouté la chanson avec succès.\n      this.loadPlaylist(playlistId);\n    }, error => {\n      console.error('Error adding song to playlist:', error);\n    });\n  }\n}\nPlaylistComponent.ɵfac = function PlaylistComponent_Factory(t) {\n  return new (t || PlaylistComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nPlaylistComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PlaylistComponent,\n  selectors: [[\"app-playlist\"]],\n  decls: 15,\n  vars: 2,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-3xl\", \"font-semibold\", \"text-green-500\", \"mb-4\"], [1, \"table-auto\", \"w-full\", \"mb-4\"], [1, \"border\", \"px-4\", \"py-2\"], [4, \"ngIf\"], [1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", 3, \"click\"], [\"class\", \"fixed z-10 inset-0 overflow-y-auto\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"fixed\", \"z-10\", \"inset-0\", \"overflow-y-auto\"], [1, \"flex\", \"items-center\", \"justify-center\", \"min-h-screen\"], [1, \"bg-white\", \"rounded\", \"p-8\", \"m-4\", \"max-w-xl\", \"mx-auto\"], [1, \"text-2xl\", \"font-semibold\", \"mb-4\"], [1, \"mb-4\"], [\"for\", \"searchQuery\", 1, \"block\", \"text-sm\", \"font-medium\", \"mb-2\"], [\"type\", \"text\", \"id\", \"searchQuery\", \"name\", \"searchQuery\", \"placeholder\", \"Rechercher une chanson\", 1, \"border\", \"border-gray-300\", \"p-2\", \"rounded\", \"w-full\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-blue-600\", \"transition\", \"duration-300\", 3, \"ngModel\", \"ngModelChange\"], [1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", \"mb-4\", 3, \"click\"], [1, \"flex\", \"justify-end\", \"mt-4\"], [1, \"bg-gray-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", 3, \"click\"]],\n  template: function PlaylistComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n      i0.ɵɵtext(3, \"Playlist\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"table\", 3)(5, \"thead\")(6, \"tr\")(7, \"th\", 4);\n      i0.ɵɵtext(8, \"Chanson\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\", 4);\n      i0.ɵɵtext(10, \"Action\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(11, PlaylistComponent_tbody_11_Template, 2, 1, \"tbody\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function PlaylistComponent_Template_button_click_12_listener() {\n        return ctx.openAddSongModal();\n      });\n      i0.ɵɵtext(13, \"Ajouter une nouvelle chanson \\u00E0 la playlist\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(14, PlaylistComponent_div_14_Template, 16, 2, \"div\", 7);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngIf\", ctx.playlist);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.showAddSongModal);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","PlaylistComponent","constructor","spotifyService","route","ngOnInit","playlistId","parseInt","snapshot","paramMap","get","loadPlaylist","getPlaylist","subscribe","response","playlist","error","console","createPlaylist","name","log","openAddSongModal","showAddSongModal","closeAddSongModal","searchSongs","searchQuery","results","searchResults","concat","addSongToPlaylist","song","id","songId","song_id","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\playlist\\playlist.component.html","C:\\IUT\\spotizer\\src\\app\\playlist\\playlist.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\r\n  <div class=\"container mx-auto p-4\">\r\n    <h2 class=\"text-3xl font-semibold text-green-500 mb-4\">Playlist</h2>\r\n    <table class=\"table-auto w-full mb-4\">\r\n      <thead>\r\n      <tr>\r\n        <th class=\"border px-4 py-2\">Chanson</th>\r\n        <th class=\"border px-4 py-2\">Action</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody *ngIf=\"playlist\">\r\n        <tr *ngFor=\"let song of playlist.songs\">\r\n          <td class=\"border px-4 py-2\">{{ song.title }} - {{ song.artist.name }}</td>\r\n          <td class=\"border px-4 py-2\">\r\n            <!-- Ajouter des actions si nécessaire -->\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <button class=\"bg-blue-600 text-white py-2 px-4 rounded\" (click)=\"openAddSongModal()\">Ajouter une nouvelle chanson à la playlist</button>\r\n  </div>\r\n</div>\r\n\r\n<!-- Ajoutez ceci après la balise de fermeture </div> du conteneur principal -->\r\n<div class=\"fixed z-10 inset-0 overflow-y-auto\" *ngIf=\"showAddSongModal\">\r\n  <div class=\"flex items-center justify-center min-h-screen\">\r\n    <div class=\"bg-white rounded p-8 m-4 max-w-xl mx-auto\">\r\n      <h2 class=\"text-2xl font-semibold mb-4\">Ajouter une chanson à la playlist</h2>\r\n      <div class=\"mb-4\">\r\n        <label for=\"searchQuery\" class=\"block text-sm font-medium mb-2\">Rechercher une chanson</label>\r\n        <input type=\"text\" id=\"searchQuery\" name=\"searchQuery\" [(ngModel)]=\"searchQuery\" class=\"border border-gray-300 p-2 rounded w-full focus:outline-none focus:ring-2 focus:ring-blue-600 transition duration-300\" placeholder=\"Rechercher une chanson\" />\r\n      </div>\r\n      <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" (click)=\"searchSongs()\">Rechercher</button>\r\n      <ul>\r\n        <li *ngFor=\"let song of searchResults\">\r\n          {{ song.title }} - {{ song.artist.name }} <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" (click)=\"addSongToPlaylist(song)\">Ajouter</button>\r\n        </li>\r\n      </ul>\r\n      <div class=\"flex justify-end mt-4\">\r\n        <button class=\"bg-gray-600 text-white py-2 px-4 rounded\" (click)=\"closeAddSongModal()\">Fermer</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SpotifyService } from '../services/spotify.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-playlist',\r\n  templateUrl: './playlist.component.html',\r\n  styleUrls: ['./playlist.component.css']\r\n})\r\nexport class PlaylistComponent implements OnInit {\r\n  showAddSongModal: boolean = false;\r\n  searchQuery: string = '';\r\n  searchResults: any[] = [];\r\n  playlist: any;\r\n  selectedSongId: number | null = null;\r\n  constructor(private spotifyService: SpotifyService, private route: ActivatedRoute) {}\r\n\r\n  ngOnInit() {\r\n    const playlistId = parseInt(this.route.snapshot.paramMap.get('id') || '0', 10);\r\n    this.loadPlaylist(playlistId);\r\n  }\r\n\r\n  loadPlaylist(playlistId: number): void {\r\n    this.spotifyService.getPlaylist(playlistId).subscribe(\r\n      response => {\r\n        this.playlist = response;\r\n      },\r\n      error => {\r\n        console.error('Error loading playlist:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  createPlaylist(name: string): void {\r\n    this.spotifyService.createPlaylist(name).subscribe(\r\n      response => {\r\n        console.log('Playlist created:', response);\r\n      },\r\n      error => {\r\n        console.error('Error creating playlist:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  openAddSongModal() {\r\n    this.showAddSongModal = true;\r\n  }\r\n\r\n  closeAddSongModal() {\r\n    this.showAddSongModal = false;\r\n  }\r\n\r\n  searchSongs() {\r\n    this.spotifyService.searchSongs(this.searchQuery).subscribe(results => {\r\n      this.searchResults = this.searchResults.concat(results);\r\n    });\r\n  }\r\n\r\n  addSongToPlaylist(song: any) {\r\n    if (!this.playlist || !this.playlist.id) {\r\n      console.error('Playlist ID not found');\r\n      return;\r\n    }\r\n\r\n    const playlistId = this.playlist.id;\r\n    const songId = song.id || song.song_id;\r\n\r\n    this.spotifyService.addSongToPlaylist(playlistId, songId).subscribe(response => {\r\n      console.log('Song added to playlist:', response);\r\n      this.closeAddSongModal();\r\n      // Rechargez la playlist après avoir ajouté la chanson avec succès.\r\n      this.loadPlaylist(playlistId);\r\n    }, error => {\r\n      console.error('Error adding song to playlist:', error);\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}