Index: src/app/artist-albums/artist-albums.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {Album, SpotifyService} from '../services/spotify.service';\r\n\r\n@Component({\r\n  selector: 'app-artist-albums',\r\n  templateUrl: './artist-albums.component.html',\r\n  styleUrls: ['./artist-albums.component.css']\r\n})\r\nexport class ArtistAlbumsComponent implements OnInit {\r\n  artistName = 'Liliana Collins';\r\n  albums: Album[] = [];\r\n\r\n\r\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {\r\n    this.albumService.getArtistAlbums(this.artistName)\r\n      .subscribe(albums => this.albums = albums);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    }\r\n\r\n\r\n  /*ngOnInit() {\r\n    this.route.paramMap.subscribe(params => {\r\n      let artistId = parseInt(<string>params.get('id'));\r\n      this.apiService.getArtistDetails(artistId).subscribe(\r\n        (response: any) => {\r\n          this.artist = response;\r\n          this.albums = response.albums;\r\n          console.log('Albums:', this.albums);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    });\r\n  }*/\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/artist-albums/artist-albums.component.ts b/src/app/artist-albums/artist-albums.component.ts
--- a/src/app/artist-albums/artist-albums.component.ts	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ b/src/app/artist-albums/artist-albums.component.ts	(date 1681118718518)
@@ -8,19 +8,19 @@
   styleUrls: ['./artist-albums.component.css']
 })
 export class ArtistAlbumsComponent implements OnInit {
-  artistName = 'Liliana Collins';
+  artistId: number = 0;
   albums: Album[] = [];
 
-
-  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {
-    this.albumService.getArtistAlbums(this.artistName)
-      .subscribe(albums => this.albums = albums);
-  }
+  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}
 
   ngOnInit(): void {
-    }
-
-
+    this.artistId = Number(this.route.snapshot.paramMap.get('id'));
+    this.albumService.getArtistAlbums(this.artistId)
+      .subscribe(albums => {
+        this.albums = albums.filter(album => album.artist.id === this.artistId);
+        console.log('Albums:', this.albums);
+      });
+  }
   /*ngOnInit() {
     this.route.paramMap.subscribe(params => {
       let artistId = parseInt(<string>params.get('id'));
Index: src/app/services/spotify.service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {catchError, from, map, Observable, takeWhile} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpotifyService {\r\n\r\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\r\n  private apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAlbums(): Observable<Object> {\r\n    return this.http.get(`${this.apiUrl}/albums`);\r\n  }\r\n\r\n  getAlbum(id: number): Observable<any> {\r\n    return from(\r\n      fetch(`${this.apiUrl}/albums/${id}`)\r\n        .then(response => response.json())\r\n    );\r\n  }\r\n  getSong(id: number): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\r\n  }\r\n\r\n\r\n  searchSongs(query: string): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\r\n      map((response: any) => {\r\n        if (Array.isArray(response)) {\r\n          return response;\r\n        } else {\r\n          return [response];\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  searchArtists(query: string): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\r\n      map((response: any) => {\r\n        if (Array.isArray(response)) {\r\n          return response;\r\n        } else {\r\n          return [response];\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  searchAlbums(query: string): Observable<any> {\r\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\r\n      map((response: any) => {\r\n          if (Array.isArray(response)) {\r\n            return response;\r\n          } else {\r\n            return [response];\r\n          }\r\n        }\r\n      ));\r\n  }\r\n\r\n/*  searchPlaylists(keyword: string): Observable<Playlist[]> {\r\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\r\n    return this.http.get<Playlist[]>(url);\r\n  }*/\r\n\r\n  getArtistAlbums(artistName: string, page?: number): Observable<Album[]> {\r\n    let params = new HttpParams()\r\n      .set('artist.name', artistName);\r\n    if (page) {\r\n      params = params.set('page', page.toString());\r\n    }\r\n    return this.http.get<Album[]>(this.apiUrls, { params });\r\n  }\r\n\r\n  getAllPlaylists(searchTerm?: string): Observable<any> {\r\n    let id = 1;\r\n    const playlists: any[] = [];\r\n\r\n    return new Observable(observer => {\r\n      const getPlaylist = () => {\r\n        let params = new HttpParams();\r\n        if (searchTerm) {\r\n          params = params.append('q', searchTerm);\r\n        }\r\n        this.http.get(`${this.apiUrl}/playlists/${id}`, { params }).pipe(\r\n          map((response: any) => {\r\n            if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n              playlists.push(response);\r\n            }\r\n            id++;\r\n            if (response.id) {\r\n              // continue the loop\r\n              getPlaylist();\r\n            } else {\r\n              observer.next(playlists);\r\n              observer.complete();\r\n            }\r\n          }),\r\n          catchError(error => {\r\n            // stop the loop and return the playlists that have been fetched so far\r\n            observer.next(playlists);\r\n            observer.complete();\r\n            return [];\r\n          }),\r\n          takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\r\n        ).subscribe();\r\n      };\r\n\r\n      getPlaylist();\r\n    });\r\n  }\r\n}\r\n\r\nexport interface Album {\r\n  id: number;\r\n  title: string;\r\n  image: string;\r\n}\r\n\r\nexport interface Playlist {\r\n  id: number;\r\n  name: string;\r\n  songs: Song[];\r\n}\r\n\r\nexport interface Song {\r\n  id: number;\r\n  title: string;\r\n  length: number;\r\n  youtube : string;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/services/spotify.service.ts b/src/app/services/spotify.service.ts
--- a/src/app/services/spotify.service.ts	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ b/src/app/services/spotify.service.ts	(date 1681116959870)
@@ -8,7 +8,6 @@
 export class SpotifyService {
 
   private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';
-  private apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';
 
   constructor(private http: HttpClient) {
   }
@@ -69,13 +68,12 @@
     return this.http.get<Playlist[]>(url);
   }*/
 
-  getArtistAlbums(artistName: string, page?: number): Observable<Album[]> {
-    let params = new HttpParams()
-      .set('artist.name', artistName);
+  getArtistAlbums(artistId: number, page?: number): Observable<Album[]> {
+    let params = new HttpParams().set('artistId', artistId.toString());
     if (page) {
       params = params.set('page', page.toString());
     }
-    return this.http.get<Album[]>(this.apiUrls, { params });
+    return this.http.get<Album[]>(`${this.apiUrl}/albums`, { params });
   }
 
   getAllPlaylists(searchTerm?: string): Observable<any> {
@@ -121,6 +119,7 @@
   id: number;
   title: string;
   image: string;
+  artist: Artist;
 }
 
 export interface Playlist {
@@ -135,3 +134,10 @@
   length: number;
   youtube : string;
 }
+
+export interface Artist {
+  id: number;
+  name: string;
+  songs: Song[];
+  albums: Album[];
+}
Index: .angular/cache/15.2.5/babel-webpack/12754761a1f3209036f03fb97de39d647b6186dbbc0a6d6937d33e77f4a512e6.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/12754761a1f3209036f03fb97de39d647b6186dbbc0a6d6937d33e77f4a512e6.json b/.angular/cache/15.2.5/babel-webpack/12754761a1f3209036f03fb97de39d647b6186dbbc0a6d6937d33e77f4a512e6.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/12754761a1f3209036f03fb97de39d647b6186dbbc0a6d6937d33e77f4a512e6.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = function (a1) {\n  return [\"/album\", a1];\n};\nfunction SearchComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Album\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"a\", 10);\n    i0.ɵɵelement(5, \"img\", 11);\n    i0.ɵɵelementStart(6, \"h5\", 12);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const album_r4 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, album_r4.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r4.title);\n    i0.ɵɵproperty(\"src\", album_r4.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r4.title);\n  }\n}\nfunction SearchComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"h5\", 12)(3, \"p\", 9);\n    i0.ɵɵtext(4, \"Artiste\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"a\", 10);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const artist_r5 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/artist-details/\", artist_r5.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(artist_r5.name);\n  }\n}\nfunction SearchComponent_div_11_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const artist_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(artist_r8.name);\n  }\n}\nfunction SearchComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Chanson\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h5\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, SearchComponent_div_11_div_6_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const song_r6 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(song_r6.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", song_r6.artists);\n  }\n}\nfunction SearchComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Playlist\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h5\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const playlist_r9 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(playlist_r9.name);\n  }\n}\nexport class SearchComponent {\n  constructor(spotifyService, http, router) {\n    this.spotifyService = spotifyService;\n    this.http = http;\n    this.router = router;\n    this.searchText = '';\n    this.searchQuery = 'title';\n    this.songs = [];\n    this.artists = [];\n    this.albums = [];\n    this.playlists = [];\n  }\n  ngOnInit() {\n    this.spotifyService.getAlbums().subscribe(data => {\n      this.albums = Object.values(data);\n    });\n  }\n  search() {\n    // Appel à la méthode de recherche de chansons\n    this.spotifyService.searchSongs(this.searchText).subscribe(response => {\n      this.songs = response;\n    });\n    // Appel à la méthode de recherche d'artistes\n    this.spotifyService.searchArtists(this.searchText).subscribe(response => {\n      this.artists = response;\n    });\n    // Appel à la méthode de recherche d'albums\n    this.spotifyService.searchAlbums(this.searchText).subscribe(response => {\n      this.albums = response;\n    });\n    // Appel à la méthode de recherche de playlists\n    this.spotifyService.searchPlaylists(this.searchText).subscribe(playlists => this.playlists = playlists);\n  }\n}\nSearchComponent.ɵfac = function SearchComponent_Factory(t) {\n  return new (t || SearchComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchComponent,\n  selectors: [[\"app-search\"]],\n  decls: 13,\n  vars: 5,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-3xl\", \"font-semibold\", \"text-green-500\", \"mb-4\"], [1, \"flex\", \"items-center\", \"mb-5\"], [\"type\", \"text\", \"placeholder\", \"Recherchez des chansons, artistes, albums ou playlists\", 1, \"bg-gray-200\", \"text-gray-800\", \"p-2\", \"rounded\", \"w-full\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-green-500\", \"transition\", \"duration-300\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [1, \"bg-green-500\", \"hover:bg-green-600\", \"text-white\", \"py-2\", \"px-4\", \"ml-2\", \"rounded\", \"transition\", \"duration-300\", 3, \"click\"], [1, \"grid\", \"grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"text-gray-400\"], [3, \"routerLink\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function SearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Spotify Clone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function SearchComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.searchText = $event;\n      })(\"input\", function SearchComponent_Template_input_input_5_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function SearchComponent_Template_button_click_6_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵtext(7, \"Rechercher \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵtemplate(9, SearchComponent_div_9_Template, 8, 6, \"div\", 7);\n      i0.ɵɵtemplate(10, SearchComponent_div_10_Template, 7, 2, \"div\", 7);\n      i0.ɵɵtemplate(11, SearchComponent_div_11_Template, 7, 2, \"div\", 7);\n      i0.ɵɵtemplate(12, SearchComponent_div_12_Template, 6, 1, \"div\", 7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchText);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.artists);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.songs);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.playlists);\n    }\n  },\n  dependencies: [i4.NgForOf, i3.RouterLink, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","SearchComponent","constructor","spotifyService","http","router","ngOnInit","getAlbums","subscribe","data","albums","Object","values","search","searchSongs","searchText","response","songs","searchArtists","artists","searchAlbums","searchPlaylists","playlists","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\search\\search.component.html","C:\\IUT\\spotizer\\src\\app\\search\\search.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\r\n  <div class=\"container mx-auto p-4\">\r\n    <h1 class=\"text-3xl font-semibold text-green-500 mb-4\">Spotify Clone</h1>\r\n    <div class=\"flex items-center mb-5\">\r\n      <input\r\n        class=\"bg-gray-200 text-gray-800 p-2 rounded w-full focus:outline-none focus:ring-2 focus:ring-green-500 transition duration-300\"\r\n        type=\"text\" [(ngModel)]=\"searchText\" (input)=\"search()\"\r\n        placeholder=\"Recherchez des chansons, artistes, albums ou playlists\"/>\r\n      <button class=\"bg-green-500 hover:bg-green-600 text-white py-2 px-4 ml-2 rounded transition duration-300\"\r\n              (click)=\"search()\">Rechercher\r\n      </button>\r\n    </div>\r\n    <div class=\"grid grid-cols-3 gap-4\">\r\n      <div *ngFor=\"let album of albums\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Album</p>\r\n          <a [routerLink]=\"['/album', album.id]\">\r\n            <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\r\n            <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let artist of artists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <h5 class=\"text-lg font-semibold text-green-500\">\r\n            <p class=\"text-gray-400\">Artiste</p>\r\n            <a routerLink=\"/artist-details/{{ artist.id }}\">{{ artist.name }}</a>\r\n          </h5>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngFor=\"let song of songs\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Chanson</p>\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ song.title }}</h5>\r\n          <div *ngFor=\"let artist of song.artists\">\r\n            <p class=\"text-gray-400\">{{ artist.name }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let playlist of playlists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Playlist</p>\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ playlist.name }}</h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {HttpClient} from '@angular/common/http';\r\nimport {Component} from '@angular/core';\r\nimport {Playlist, SpotifyService} from \"../services/spotify.service\";\r\nimport {Router} from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent {\r\n  searchText: string = '';\r\n  searchQuery: string = 'title';\r\n  songs: any[] = [];\r\n  artists: any[] = [];\r\n  albums: any[] = [];\r\n  playlists: Playlist[] = [];\r\n  constructor(private spotifyService: SpotifyService, private http: HttpClient, private router: Router) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.spotifyService.getAlbums().subscribe((data: any) => {\r\n      this.albums = Object.values(data);\r\n    });\r\n  }\r\n\r\n  search() {\r\n    // Appel à la méthode de recherche de chansons\r\n    this.spotifyService.searchSongs(this.searchText).subscribe((response: any) => {\r\n      this.songs = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'artistes\r\n    this.spotifyService.searchArtists(this.searchText).subscribe((response: any) => {\r\n      this.artists = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'albums\r\n    this.spotifyService.searchAlbums(this.searchText).subscribe((response: any) => {\r\n      this.albums = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche de playlists\r\n    this.spotifyService.searchPlaylists(this.searchText).subscribe((playlists => this.playlists = playlists)\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/28a86d8be1635013851b14872a504c78f9eb8a91462514d09d7b28f58a4bee52.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/28a86d8be1635013851b14872a504c78f9eb8a91462514d09d7b28f58a4bee52.json b/.angular/cache/15.2.5/babel-webpack/28a86d8be1635013851b14872a504c78f9eb8a91462514d09d7b28f58a4bee52.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/28a86d8be1635013851b14872a504c78f9eb8a91462514d09d7b28f58a4bee52.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { from, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n    this.apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    console.log('Search query:', query); // Ajout de l'instruction console.log\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(query: string): Observable<any> {\r\n      return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(\r\n        map((response: any) => {\r\n            if (Array.isArray(response)) {\r\n              return response;\r\n            } else {\r\n              return [response];\r\n            }\r\n          }\r\n        ));\r\n    }*/\n  searchPlaylists(keyword) {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get(url);\n  }\n  getArtistAlbums(artistName, page) {\n    let params = new HttpParams().set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get(this.apiUrls, {\n      params\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","from","map","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","console","log","searchPlaylists","keyword","url","getArtistAlbums","artistName","page","params","set","toString","apiUrls","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {from, map, Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  private apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n\n  searchAlbums(query: string): Observable<any> {\n    console.log('Search query:', query); // Ajout de l'instruction console.log\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n/*  searchPlaylists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }*/\n  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }\n\n  getArtistAlbums(artistName: string, page?: number): Observable<Album[]> {\n    let params = new HttpParams()\n      .set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get<Album[]>(this.apiUrls, { params });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/6154a23de5d7521ebe0179a904ca4ed4d85f127e8850de74e48eae9da7795edd.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/6154a23de5d7521ebe0179a904ca4ed4d85f127e8850de74e48eae9da7795edd.json b/.angular/cache/15.2.5/babel-webpack/6154a23de5d7521ebe0179a904ca4ed4d85f127e8850de74e48eae9da7795edd.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/6154a23de5d7521ebe0179a904ca4ed4d85f127e8850de74e48eae9da7795edd.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/spotify.service\";\nimport * as i3 from \"@angular/platform-browser\";\nexport class VideoPlayerComponent {\n  constructor(route, spotifyService, sanitizer) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n    this.sanitizer = sanitizer;\n    this.videoUrl = '';\n  }\n  ngOnInit() {\n    // @ts-ignore\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.spotifyService.getSong(id).subscribe(data => {\n      this.song = data;\n      if (this.song && this.song.youtube) {\n        this.videoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.song.youtube.replace(\"watch?v=\", \"embed/\"));\n      }\n    });\n  }\n}\nVideoPlayerComponent.ɵfac = function VideoPlayerComponent_Factory(t) {\n  return new (t || VideoPlayerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService), i0.ɵɵdirectiveInject(i3.DomSanitizer));\n};\nVideoPlayerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VideoPlayerComponent,\n  selectors: [[\"app-video-player\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [\"routerLink\", \"/\", 1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", \"mb-4\"], [1, \"bg-black\", \"rounded\", \"p-4\"], [\"width\", \"100%\", \"height\", \"100%\", \"frameborder\", \"0\", \"allow\", \"autoplay; encrypted-media\", \"allowfullscreen\", \"\", 3, \"src\"]],\n  template: function VideoPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵtext(2, \"Retour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelement(4, \"iframe\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"src\", ctx.videoUrl, i0.ɵɵsanitizeResourceUrl);\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAWA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,KAAqB,EACrBC,cAA8B,EAC9BC,SAAuB;IAFvB,UAAK,GAALF,KAAK;IACL,mBAAc,GAAdC,cAAc;IACd,cAAS,GAATC,SAAS;IALnB,aAAQ,GAAoB,EAAE;EAM1B;EAEJC,QAAQ;IACN;IACA,MAAMC,EAAE,GAAG,CAAC,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAClD,IAAI,CAACN,cAAc,CAACO,OAAO,CAACJ,EAAE,CAAC,CAACK,SAAS,CAAEC,IAAS,IAAI;MACtD,IAAI,CAACC,IAAI,GAAGD,IAAI;MAChB,IAAI,IAAI,CAACC,IAAI,IAAI,IAAI,CAACA,IAAI,CAACC,OAAO,EAAE;QAClC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACX,SAAS,CAACY,8BAA8B,CAAC,IAAI,CAACH,IAAI,CAACC,OAAO,CAACG,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;;IAElH,CAAC,CAAC;EACJ;;AAnBWjB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXjCC,8BAAmC;MAC4CA,sBAAM;MAAAA,iBAAS;MAC5FA,8BAAkC;MAChCA,4BAA+H;MACjIA,iBAAM;;;MAD+BA,eAAgB;MAAhBA,4DAAgB","names":["VideoPlayerComponent","constructor","route","spotifyService","sanitizer","ngOnInit","id","snapshot","paramMap","get","getSong","subscribe","data","song","youtube","videoUrl","bypassSecurityTrustResourceUrl","replace","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.ts","C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\nimport {DomSanitizer, SafeResourceUrl} from \"@angular/platform-browser\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-video-player',\r\n  templateUrl: './video-player.component.html',\r\n  styleUrls: ['./video-player.component.css']\r\n})\r\nexport class VideoPlayerComponent {\r\n  song: any;\r\n  videoUrl: SafeResourceUrl = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService,\r\n    private sanitizer: DomSanitizer\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // @ts-ignore\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.spotifyService.getSong(id).subscribe((data: any) => {\r\n      this.song = data;\r\n      if (this.song && this.song.youtube) {\r\n        this.videoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.song.youtube.replace(\"watch?v=\", \"embed/\"));\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <iframe width=\"100%\" height=\"100%\" [src]=\"videoUrl\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/26b4f794eb21973362369da062635ecfde7b27382ccb7ee3790efa4095f6ea90.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/26b4f794eb21973362369da062635ecfde7b27382ccb7ee3790efa4095f6ea90.json b/.angular/cache/15.2.5/babel-webpack/26b4f794eb21973362369da062635ecfde7b27382ccb7ee3790efa4095f6ea90.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/26b4f794eb21973362369da062635ecfde7b27382ccb7ee3790efa4095f6ea90.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/spotify.service\";\nimport * as i3 from \"@angular/platform-browser\";\nexport class VideoPlayerComponent {\n  constructor(route, spotifyService, sanitizer) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n    this.sanitizer = sanitizer;\n    this.videoUrl = '';\n  }\n  ngOnInit() {\n    // @ts-ignore\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.spotifyService.getSong(id).subscribe(data => {\n      this.song = data;\n      if (this.song && this.song.youtube) {\n        this.videoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.song.youtube.replace(\"watch?v=\", \"embed/\"));\n      }\n    });\n  }\n}\nVideoPlayerComponent.ɵfac = function VideoPlayerComponent_Factory(t) {\n  return new (t || VideoPlayerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService), i0.ɵɵdirectiveInject(i3.DomSanitizer));\n};\nVideoPlayerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VideoPlayerComponent,\n  selectors: [[\"app-video-player\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [\"routerLink\", \"/\", 1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", \"mb-4\"], [1, \"bg-black\", \"rounded\", \"p-4\"], [\"width\", \"100%\", \"height\", \"700\", \"frameborder\", \"0\", \"allow\", \"autoplay; encrypted-media\", \"allowfullscreen\", \"\", 3, \"src\"]],\n  template: function VideoPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵtext(2, \"Retour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelement(4, \"iframe\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"src\", ctx.videoUrl, i0.ɵɵsanitizeResourceUrl);\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAWA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,KAAqB,EACrBC,cAA8B,EAC9BC,SAAuB;IAFvB,UAAK,GAALF,KAAK;IACL,mBAAc,GAAdC,cAAc;IACd,cAAS,GAATC,SAAS;IALnB,aAAQ,GAAoB,EAAE;EAM1B;EAEJC,QAAQ;IACN;IACA,MAAMC,EAAE,GAAG,CAAC,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAClD,IAAI,CAACN,cAAc,CAACO,OAAO,CAACJ,EAAE,CAAC,CAACK,SAAS,CAAEC,IAAS,IAAI;MACtD,IAAI,CAACC,IAAI,GAAGD,IAAI;MAChB,IAAI,IAAI,CAACC,IAAI,IAAI,IAAI,CAACA,IAAI,CAACC,OAAO,EAAE;QAClC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACX,SAAS,CAACY,8BAA8B,CAAC,IAAI,CAACH,IAAI,CAACC,OAAO,CAACG,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;;IAElH,CAAC,CAAC;EACJ;;AAnBWjB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXjCC,8BAAmC;MAC4CA,sBAAM;MAAAA,iBAAS;MAC5FA,8BAAkC;MAChCA,4BAA8H;MAChIA,iBAAM;;;MAD8BA,eAAgB;MAAhBA,4DAAgB","names":["VideoPlayerComponent","constructor","route","spotifyService","sanitizer","ngOnInit","id","snapshot","paramMap","get","getSong","subscribe","data","song","youtube","videoUrl","bypassSecurityTrustResourceUrl","replace","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.ts","C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\nimport {DomSanitizer, SafeResourceUrl} from \"@angular/platform-browser\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-video-player',\r\n  templateUrl: './video-player.component.html',\r\n  styleUrls: ['./video-player.component.css']\r\n})\r\nexport class VideoPlayerComponent {\r\n  song: any;\r\n  videoUrl: SafeResourceUrl = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService,\r\n    private sanitizer: DomSanitizer\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // @ts-ignore\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.spotifyService.getSong(id).subscribe((data: any) => {\r\n      this.song = data;\r\n      if (this.song && this.song.youtube) {\r\n        this.videoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.song.youtube.replace(\"watch?v=\", \"embed/\"));\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <iframe width=\"100%\" height=\"700\" [src]=\"videoUrl\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/063f99f8b2e16d9d8048f2906f508ebf121b73c6597c4bed209c42a1f7eb277e.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/063f99f8b2e16d9d8048f2906f508ebf121b73c6597c4bed209c42a1f7eb277e.json b/.angular/cache/15.2.5/babel-webpack/063f99f8b2e16d9d8048f2906f508ebf121b73c6597c4bed209c42a1f7eb277e.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/063f99f8b2e16d9d8048f2906f508ebf121b73c6597c4bed209c42a1f7eb277e.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/spotify.service\";\nimport * as i3 from \"@angular/platform-browser\";\nexport class VideoPlayerComponent {\n  constructor(route, spotifyService, sanitizer) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n    this.sanitizer = sanitizer;\n    this.videoUrl = '';\n  }\n  ngOnInit() {\n    // @ts-ignore\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.spotifyService.getSong(id).subscribe(data => {\n      this.song = data;\n      if (this.song && this.song.youtube) {\n        this.videoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.song.youtube.replace(\"watch?v=\", \"embed/\"));\n      }\n    });\n  }\n}\nVideoPlayerComponent.ɵfac = function VideoPlayerComponent_Factory(t) {\n  return new (t || VideoPlayerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService), i0.ɵɵdirectiveInject(i3.DomSanitizer));\n};\nVideoPlayerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VideoPlayerComponent,\n  selectors: [[\"app-video-player\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [\"routerLink\", \"/\", 1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", \"mb-4\"], [1, \"bg-black\", \"rounded\", \"p-4\"], [\"width\", \"100%\", \"height\", \"800\", \"frameborder\", \"0\", \"allow\", \"autoplay; encrypted-media\", \"allowfullscreen\", \"\", 3, \"src\"]],\n  template: function VideoPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵtext(2, \"Retour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelement(4, \"iframe\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"src\", ctx.videoUrl, i0.ɵɵsanitizeResourceUrl);\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAWA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,KAAqB,EACrBC,cAA8B,EAC9BC,SAAuB;IAFvB,UAAK,GAALF,KAAK;IACL,mBAAc,GAAdC,cAAc;IACd,cAAS,GAATC,SAAS;IALnB,aAAQ,GAAoB,EAAE;EAM1B;EAEJC,QAAQ;IACN;IACA,MAAMC,EAAE,GAAG,CAAC,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAClD,IAAI,CAACN,cAAc,CAACO,OAAO,CAACJ,EAAE,CAAC,CAACK,SAAS,CAAEC,IAAS,IAAI;MACtD,IAAI,CAACC,IAAI,GAAGD,IAAI;MAChB,IAAI,IAAI,CAACC,IAAI,IAAI,IAAI,CAACA,IAAI,CAACC,OAAO,EAAE;QAClC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACX,SAAS,CAACY,8BAA8B,CAAC,IAAI,CAACH,IAAI,CAACC,OAAO,CAACG,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;;IAElH,CAAC,CAAC;EACJ;;AAnBWjB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXjCC,8BAAmC;MAC4CA,sBAAM;MAAAA,iBAAS;MAC5FA,8BAAkC;MAChCA,4BAA8H;MAChIA,iBAAM;;;MAD8BA,eAAgB;MAAhBA,4DAAgB","names":["VideoPlayerComponent","constructor","route","spotifyService","sanitizer","ngOnInit","id","snapshot","paramMap","get","getSong","subscribe","data","song","youtube","videoUrl","bypassSecurityTrustResourceUrl","replace","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.ts","C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\nimport {DomSanitizer, SafeResourceUrl} from \"@angular/platform-browser\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-video-player',\r\n  templateUrl: './video-player.component.html',\r\n  styleUrls: ['./video-player.component.css']\r\n})\r\nexport class VideoPlayerComponent {\r\n  song: any;\r\n  videoUrl: SafeResourceUrl = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService,\r\n    private sanitizer: DomSanitizer\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // @ts-ignore\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.spotifyService.getSong(id).subscribe((data: any) => {\r\n      this.song = data;\r\n      if (this.song && this.song.youtube) {\r\n        this.videoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.song.youtube.replace(\"watch?v=\", \"embed/\"));\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <iframe width=\"100%\" height=\"800\" [src]=\"videoUrl\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/ebdea5782df97abebc6a3cce4bca13b570206a7d52a0f47838b86719d033c7d8.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/ebdea5782df97abebc6a3cce4bca13b570206a7d52a0f47838b86719d033c7d8.json b/.angular/cache/15.2.5/babel-webpack/ebdea5782df97abebc6a3cce4bca13b570206a7d52a0f47838b86719d033c7d8.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/ebdea5782df97abebc6a3cce4bca13b570206a7d52a0f47838b86719d033c7d8.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = function (a1) {\n  return [\"/album\", a1];\n};\nfunction SearchComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Chanson\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"a\", 10);\n    i0.ɵɵelement(5, \"img\", 11);\n    i0.ɵɵelementStart(6, \"h5\", 12);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const album_r4 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, album_r4.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r4.title);\n    i0.ɵɵproperty(\"src\", album_r4.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r4.title);\n  }\n}\nfunction SearchComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"h5\", 12)(3, \"p\", 9);\n    i0.ɵɵtext(4, \"Artiste\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"a\", 10);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const artist_r5 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/artist-details/\", artist_r5.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(artist_r5.name);\n  }\n}\nfunction SearchComponent_div_11_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const artist_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(artist_r8.name);\n  }\n}\nfunction SearchComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Chanson\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h5\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, SearchComponent_div_11_div_6_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const song_r6 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(song_r6.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", song_r6.artists);\n  }\n}\nfunction SearchComponent_div_12_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const song_r11 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(song_r11.title);\n  }\n}\nfunction SearchComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Playlist\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h5\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, SearchComponent_div_12_div_6_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const playlist_r9 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(playlist_r9.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", playlist_r9.songs);\n  }\n}\nexport class SearchComponent {\n  constructor(spotifyService, http, router) {\n    this.spotifyService = spotifyService;\n    this.http = http;\n    this.router = router;\n    this.searchText = '';\n    this.searchQuery = 'title';\n    this.songs = [];\n    this.artists = [];\n    this.albums = [];\n    this.playlists = [];\n  }\n  ngOnInit() {\n    this.spotifyService.getAlbums().subscribe(data => {\n      this.albums = Object.values(data);\n    });\n  }\n  search() {\n    // Appel à la méthode de recherche de chansons\n    this.spotifyService.searchSongs(this.searchText).subscribe(response => {\n      console.log('Search response (songs):', response);\n      this.songs = response;\n    });\n    // Appel à la méthode de recherche d'artistes\n    this.spotifyService.searchArtists(this.searchText).subscribe(response => {\n      console.log('Search response (artists):', response);\n      this.artists = response;\n    });\n    // Appel à la méthode de recherche d'albums\n    this.spotifyService.searchAlbums(this.searchText).subscribe(response => {\n      console.log('Search response (albums):', response);\n      this.albums = response;\n    });\n    // Appel à la méthode de recherche de playlists\n    this.spotifyService.searchPlaylists(this.searchText).subscribe(response => {\n      console.log('Search response (playlists):', response);\n      this.playlists = response;\n    });\n  }\n}\nSearchComponent.ɵfac = function SearchComponent_Factory(t) {\n  return new (t || SearchComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchComponent,\n  selectors: [[\"app-search\"]],\n  decls: 13,\n  vars: 5,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-3xl\", \"font-semibold\", \"text-green-500\", \"mb-4\"], [1, \"flex\", \"items-center\", \"mb-5\"], [\"type\", \"text\", \"placeholder\", \"Recherchez des chansons, artistes, albums ou playlists\", 1, \"bg-gray-200\", \"text-gray-800\", \"p-2\", \"rounded\", \"w-full\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-green-500\", \"transition\", \"duration-300\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [1, \"bg-green-500\", \"hover:bg-green-600\", \"text-white\", \"py-2\", \"px-4\", \"ml-2\", \"rounded\", \"transition\", \"duration-300\", 3, \"click\"], [1, \"grid\", \"grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"text-gray-400\"], [3, \"routerLink\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function SearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Spotify Clone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function SearchComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.searchText = $event;\n      })(\"input\", function SearchComponent_Template_input_input_5_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function SearchComponent_Template_button_click_6_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵtext(7, \"Rechercher \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵtemplate(9, SearchComponent_div_9_Template, 8, 6, \"div\", 7);\n      i0.ɵɵtemplate(10, SearchComponent_div_10_Template, 7, 2, \"div\", 7);\n      i0.ɵɵtemplate(11, SearchComponent_div_11_Template, 7, 2, \"div\", 7);\n      i0.ɵɵtemplate(12, SearchComponent_div_12_Template, 7, 2, \"div\", 7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchText);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.artists);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.songs);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.playlists);\n    }\n  },\n  dependencies: [i4.NgForOf, i3.RouterLink, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","SearchComponent","constructor","spotifyService","http","router","ngOnInit","getAlbums","subscribe","data","albums","Object","values","search","searchSongs","searchText","response","console","log","songs","searchArtists","artists","searchAlbums","searchPlaylists","playlists","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\search\\search.component.html","C:\\IUT\\spotizer\\src\\app\\search\\search.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\r\n  <div class=\"container mx-auto p-4\">\r\n    <h1 class=\"text-3xl font-semibold text-green-500 mb-4\">Spotify Clone</h1>\r\n    <div class=\"flex items-center mb-5\">\r\n      <input\r\n        class=\"bg-gray-200 text-gray-800 p-2 rounded w-full focus:outline-none focus:ring-2 focus:ring-green-500 transition duration-300\"\r\n        type=\"text\" [(ngModel)]=\"searchText\" (input)=\"search()\"\r\n        placeholder=\"Recherchez des chansons, artistes, albums ou playlists\"/>\r\n      <button class=\"bg-green-500 hover:bg-green-600 text-white py-2 px-4 ml-2 rounded transition duration-300\"\r\n              (click)=\"search()\">Rechercher\r\n      </button>\r\n    </div>\r\n    <div class=\"grid grid-cols-3 gap-4\">\r\n      <div *ngFor=\"let album of albums\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Chanson</p>\r\n          <a [routerLink]=\"['/album', album.id]\">\r\n            <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\r\n            <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let artist of artists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <h5 class=\"text-lg font-semibold text-green-500\">\r\n            <p class=\"text-gray-400\">Artiste</p>\r\n            <a routerLink=\"/artist-details/{{ artist.id }}\">{{ artist.name }}</a>\r\n          </h5>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngFor=\"let song of songs\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Chanson</p>\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ song.title }}</h5>\r\n          <div *ngFor=\"let artist of song.artists\">\r\n            <p class=\"text-gray-400\">{{ artist.name }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let playlist of playlists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Playlist</p>\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ playlist.title }}</h5>\r\n          <div *ngFor=\"let song of playlist.songs\">\r\n            <p class=\"text-gray-400\">{{ song.title }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {HttpClient} from '@angular/common/http';\r\nimport {Component} from '@angular/core';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\nimport {Router} from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent {\r\n  searchText: string = '';\r\n  searchQuery: string = 'title';\r\n  songs: any[] = [];\r\n  artists: any[] = [];\r\n  albums: any[] = [];\r\n  playlists: any[] = [];\r\n\r\n  constructor(private spotifyService: SpotifyService, private http: HttpClient, private router: Router) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.spotifyService.getAlbums().subscribe((data: any) => {\r\n      this.albums = Object.values(data);\r\n    });\r\n  }\r\n\r\n  search() {\r\n    // Appel à la méthode de recherche de chansons\r\n    this.spotifyService.searchSongs(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (songs):', response);\r\n      this.songs = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'artistes\r\n    this.spotifyService.searchArtists(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (artists):', response);\r\n      this.artists = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'albums\r\n    this.spotifyService.searchAlbums(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (albums):', response);\r\n      this.albums = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche de playlists\r\n    this.spotifyService.searchPlaylists(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (playlists):', response);\r\n      this.playlists = response;\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/e8373c9fa3a6be253a3e48bc8bc04fe173d822506441375a7ebceee37bd65c15.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/e8373c9fa3a6be253a3e48bc8bc04fe173d822506441375a7ebceee37bd65c15.json b/.angular/cache/15.2.5/babel-webpack/e8373c9fa3a6be253a3e48bc8bc04fe173d822506441375a7ebceee37bd65c15.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/e8373c9fa3a6be253a3e48bc8bc04fe173d822506441375a7ebceee37bd65c15.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/spotify.service\";\nimport * as i3 from \"@angular/platform-browser\";\nexport class VideoPlayerComponent {\n  constructor(route, spotifyService, sanitizer) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n    this.sanitizer = sanitizer;\n    this.videoUrl = '';\n  }\n  ngOnInit() {\n    // @ts-ignore\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.spotifyService.getSong(id).subscribe(data => {\n      this.song = data;\n      if (this.song && this.song.youtube) {\n        this.videoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.song.youtube.replace(\"watch?v=\", \"embed/\"));\n      }\n    });\n  }\n}\nVideoPlayerComponent.ɵfac = function VideoPlayerComponent_Factory(t) {\n  return new (t || VideoPlayerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService), i0.ɵɵdirectiveInject(i3.DomSanitizer));\n};\nVideoPlayerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VideoPlayerComponent,\n  selectors: [[\"app-video-player\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [\"routerLink\", \"/\", 1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", \"mb-4\"], [1, \"bg-black\", \"rounded\", \"p-4\"], [\"width\", \"100%\", \"height\", \"500\", \"frameborder\", \"0\", \"allow\", \"autoplay; encrypted-media\", \"allowfullscreen\", \"\", 3, \"src\"]],\n  template: function VideoPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵtext(2, \"Retour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelement(4, \"iframe\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"src\", ctx.videoUrl, i0.ɵɵsanitizeResourceUrl);\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAWA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,KAAqB,EACrBC,cAA8B,EAC9BC,SAAuB;IAFvB,UAAK,GAALF,KAAK;IACL,mBAAc,GAAdC,cAAc;IACd,cAAS,GAATC,SAAS;IALnB,aAAQ,GAAoB,EAAE;EAM1B;EAEJC,QAAQ;IACN;IACA,MAAMC,EAAE,GAAG,CAAC,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAClD,IAAI,CAACN,cAAc,CAACO,OAAO,CAACJ,EAAE,CAAC,CAACK,SAAS,CAAEC,IAAS,IAAI;MACtD,IAAI,CAACC,IAAI,GAAGD,IAAI;MAChB,IAAI,IAAI,CAACC,IAAI,IAAI,IAAI,CAACA,IAAI,CAACC,OAAO,EAAE;QAClC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACX,SAAS,CAACY,8BAA8B,CAAC,IAAI,CAACH,IAAI,CAACC,OAAO,CAACG,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;;IAElH,CAAC,CAAC;EACJ;;AAnBWjB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXjCC,8BAAmC;MAC4CA,sBAAM;MAAAA,iBAAS;MAC5FA,8BAAkC;MAChCA,4BAA8H;MAChIA,iBAAM;;;MAD8BA,eAAgB;MAAhBA,4DAAgB","names":["VideoPlayerComponent","constructor","route","spotifyService","sanitizer","ngOnInit","id","snapshot","paramMap","get","getSong","subscribe","data","song","youtube","videoUrl","bypassSecurityTrustResourceUrl","replace","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.ts","C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\nimport {DomSanitizer} from \"@angular/platform-browser\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-video-player',\r\n  templateUrl: './video-player.component.html',\r\n  styleUrls: ['./video-player.component.css']\r\n})\r\nexport class VideoPlayerComponent {\r\n  song: any;\r\n  videoUrl: SafeResourceUrl = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService,\r\n    private sanitizer: DomSanitizer\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // @ts-ignore\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.spotifyService.getSong(id).subscribe((data: any) => {\r\n      this.song = data;\r\n      if (this.song && this.song.youtube) {\r\n        this.videoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.song.youtube.replace(\"watch?v=\", \"embed/\"));\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <iframe width=\"100%\" height=\"500\" [src]=\"videoUrl\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/b9dbf26c6165e5412d94a04881051d38a3927b9162ce5a3b9b5ad1ed6240824a.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/b9dbf26c6165e5412d94a04881051d38a3927b9162ce5a3b9b5ad1ed6240824a.json b/.angular/cache/15.2.5/babel-webpack/b9dbf26c6165e5412d94a04881051d38a3927b9162ce5a3b9b5ad1ed6240824a.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/b9dbf26c6165e5412d94a04881051d38a3927b9162ce5a3b9b5ad1ed6240824a.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { from, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n    this.apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    console.log('Search query:', query); // Ajout de l'instruction console.log\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchPlaylists(query) {\n    return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(keyword: string): Observable<Playlist[]> {\r\n      const url = `${this.apiUrl}/playlists?q=${keyword}`;\r\n      return this.http.get<Playlist[]>(url);\r\n    }*/\n  getArtistAlbums(artistName, page) {\n    let params = new HttpParams().set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get(this.apiUrls, {\n      params\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","from","map","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","console","log","searchPlaylists","getArtistAlbums","artistName","page","params","set","toString","apiUrls","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {from, map, Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  private apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n\n  searchAlbums(query: string): Observable<any> {\n    console.log('Search query:', query); // Ajout de l'instruction console.log\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n  searchPlaylists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n/*  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }*/\n\n  getArtistAlbums(artistName: string, page?: number): Observable<Album[]> {\n    let params = new HttpParams()\n      .set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get<Album[]>(this.apiUrls, { params });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/946360f2949c37a9aeb715a46e9d550052c945a2636299888361a5fb0710810b.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/946360f2949c37a9aeb715a46e9d550052c945a2636299888361a5fb0710810b.json b/.angular/cache/15.2.5/babel-webpack/946360f2949c37a9aeb715a46e9d550052c945a2636299888361a5fb0710810b.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/946360f2949c37a9aeb715a46e9d550052c945a2636299888361a5fb0710810b.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/spotify.service\";\nexport class VideoPlayerComponent {\n  constructor(route, spotifyService) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n    this.videoUrl = '';\n  }\n  ngOnInit() {\n    // @ts-ignore\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.spotifyService.getSong(id).subscribe(data => {\n      this.song = data;\n      if (this.song) {\n        if (this.song.youtube) {\n          this.videoUrl = this.song.youtube.replace(\"watch?v=\", \"embed/\");\n        }\n      }\n    });\n  }\n}\nVideoPlayerComponent.ɵfac = function VideoPlayerComponent_Factory(t) {\n  return new (t || VideoPlayerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService));\n};\nVideoPlayerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VideoPlayerComponent,\n  selectors: [[\"app-video-player\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [\"routerLink\", \"/\", 1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", \"mb-4\"], [1, \"bg-black\", \"rounded\", \"p-4\"], [\"width\", \"100%\", \"height\", \"500\", \"frameborder\", \"0\", \"allow\", \"autoplay; encrypted-media\", \"allowfullscreen\", \"\", 3, \"src\"]],\n  template: function VideoPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵtext(2, \"Retour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelement(4, \"iframe\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"src\", ctx.videoUrl, i0.ɵɵsanitizeResourceUrl);\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,KAAqB,EACrBC,cAA8B;IAD9B,UAAK,GAALD,KAAK;IACL,mBAAc,GAAdC,cAAc;IAJxB,aAAQ,GAAW,EAAE;EAMrB;EAEAC,QAAQ;IACN;IACA,MAAMC,EAAE,GAAG,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAClD,IAAI,CAACL,cAAc,CAACM,OAAO,CAACJ,EAAE,CAAC,CAACK,SAAS,CAAEC,IAAS,IAAI;MACtD,IAAI,CAACC,IAAI,GAAGD,IAAI;MAChB,IAAI,IAAI,CAACC,IAAI,EAAE;QACb,IAAI,IAAI,CAACA,IAAI,CAACC,OAAO,EAAE;UACrB,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACF,IAAI,CAACC,OAAO,CAACE,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC;;;IAGrE,CAAC,CAAC;EACJ;;AArBWf,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVjCC,8BAAmC;MAC4CA,sBAAM;MAAAA,iBAAS;MAC5FA,8BAAkC;MAChCA,4BAA8H;MAChIA,iBAAM;;;MAD8BA,eAAgB;MAAhBA,4DAAgB","names":["VideoPlayerComponent","constructor","route","spotifyService","ngOnInit","id","snapshot","paramMap","get","getSong","subscribe","data","song","youtube","videoUrl","replace","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.ts","C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-video-player',\r\n  templateUrl: './video-player.component.html',\r\n  styleUrls: ['./video-player.component.css']\r\n})\r\nexport class VideoPlayerComponent {\r\n  song: any;\r\n  videoUrl: string = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // @ts-ignore\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.spotifyService.getSong(id).subscribe((data: any) => {\r\n      this.song = data;\r\n      if (this.song) {\r\n        if (this.song.youtube) {\r\n          this.videoUrl = this.song.youtube.replace(\"watch?v=\", \"embed/\");\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <iframe width=\"100%\" height=\"500\" [src]=\"videoUrl\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/2aa299b7d8cb213a016ba6ca0e287d30f5223c5ab80350e5b3f3449bc1524c45.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/2aa299b7d8cb213a016ba6ca0e287d30f5223c5ab80350e5b3f3449bc1524c45.json b/.angular/cache/15.2.5/babel-webpack/2aa299b7d8cb213a016ba6ca0e287d30f5223c5ab80350e5b3f3449bc1524c45.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/2aa299b7d8cb213a016ba6ca0e287d30f5223c5ab80350e5b3f3449bc1524c45.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { from, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n    this.apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchPlaylists(query) {\n    return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(keyword: string): Observable<Playlist[]> {\r\n      const url = `${this.apiUrl}/playlists?q=${keyword}`;\r\n      return this.http.get<Playlist[]>(url);\r\n    }*/\n  getArtistAlbums(artistName, page) {\n    let params = new HttpParams().set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get(this.apiUrls, {\n      params\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","from","map","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","searchPlaylists","getArtistAlbums","artistName","page","params","set","toString","apiUrls","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {from, map, Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  private apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n  \n  searchAlbums(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n  searchPlaylists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n/*  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }*/\n\n  getArtistAlbums(artistName: string, page?: number): Observable<Album[]> {\n    let params = new HttpParams()\n      .set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get<Album[]>(this.apiUrls, { params });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/6ba48d43a28d58e4e0a1b34173c15d555a932a08ec13dc7abd2fef9b65627ba6.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/6ba48d43a28d58e4e0a1b34173c15d555a932a08ec13dc7abd2fef9b65627ba6.json b/.angular/cache/15.2.5/babel-webpack/6ba48d43a28d58e4e0a1b34173c15d555a932a08ec13dc7abd2fef9b65627ba6.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/6ba48d43a28d58e4e0a1b34173c15d555a932a08ec13dc7abd2fef9b65627ba6.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/spotify.service\";\nexport class VideoPlayerComponent {\n  constructor(route, spotifyService) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n    this.videoUrl = '';\n  }\n  ngOnInit() {\n    // @ts-ignore\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.videoUrl = `https://www.youtube.com/embed/${id}`;\n  }\n}\nVideoPlayerComponent.ɵfac = function VideoPlayerComponent_Factory(t) {\n  return new (t || VideoPlayerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService));\n};\nVideoPlayerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VideoPlayerComponent,\n  selectors: [[\"app-video-player\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [\"routerLink\", \"/\", 1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", \"mb-4\"], [1, \"bg-black\", \"rounded\", \"p-4\"], [\"width\", \"100%\", \"height\", \"315\", \"frameborder\", \"0\", \"allowfullscreen\", \"\", 3, \"src\"]],\n  template: function VideoPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵtext(2, \"Retour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelement(4, \"iframe\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"src\", ctx.videoUrl, i0.ɵɵsanitizeResourceUrl);\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,KAAqB,EACrBC,cAA8B;IAD9B,UAAK,GAALD,KAAK;IACL,mBAAc,GAAdC,cAAc;IAJxB,aAAQ,GAAW,EAAE;EAKlB;EAEHC,QAAQ;IACN;IACA,MAAMC,EAAE,GAAG,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAClD,IAAI,CAACC,QAAQ,GAAG,iCAAiCJ,EAAE,EAAE;EACvD;;AAbWL,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVjCC,8BAAmC;MAC4CA,sBAAM;MAAAA,iBAAS;MAC5FA,8BAAkC;MAChCA,4BAA4F;MAC9FA,iBAAM;;;MAD8BA,eAAgB;MAAhBA,4DAAgB","names":["VideoPlayerComponent","constructor","route","spotifyService","ngOnInit","id","snapshot","paramMap","get","videoUrl","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.ts","C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-video-player',\r\n  templateUrl: './video-player.component.html',\r\n  styleUrls: ['./video-player.component.css']\r\n})\r\nexport class VideoPlayerComponent {\r\n  song: any;\r\n  videoUrl: string = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // @ts-ignore\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.videoUrl = `https://www.youtube.com/embed/${id}`;\r\n  }\r\n}\r\n","<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <iframe width=\"100%\" height=\"315\" [src]=\"videoUrl\" frameborder=\"0\" allowfullscreen></iframe>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/261e1d888a166b0f9f1e76f3dc89821cd1a1b801ce62968a7408c45a9bf2cd69.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/261e1d888a166b0f9f1e76f3dc89821cd1a1b801ce62968a7408c45a9bf2cd69.json b/.angular/cache/15.2.5/babel-webpack/261e1d888a166b0f9f1e76f3dc89821cd1a1b801ce62968a7408c45a9bf2cd69.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/261e1d888a166b0f9f1e76f3dc89821cd1a1b801ce62968a7408c45a9bf2cd69.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { from, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n    this.apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    console.log('Search query:', query); // Ajout de l'instruction console.log\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchPlaylists(query) {\n    return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  getArtistAlbums(artistName, page) {\n    let params = new HttpParams().set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get(this.apiUrls, {\n      params\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","from","map","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","console","log","searchPlaylists","getArtistAlbums","artistName","page","params","set","toString","apiUrls","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {from, map, Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  private apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n\n  searchAlbums(query: string): Observable<any> {\n    console.log('Search query:', query); // Ajout de l'instruction console.log\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n  searchPlaylists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n  getArtistAlbums(artistName: string, page?: number): Observable<Album[]> {\n    let params = new HttpParams()\n      .set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get<Album[]>(this.apiUrls, { params });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/24037dfa0ad31f7da519e3c3c33e1c909bf454e10fddd49f6b9b2ff1ad3b424d.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/24037dfa0ad31f7da519e3c3c33e1c909bf454e10fddd49f6b9b2ff1ad3b424d.json b/.angular/cache/15.2.5/babel-webpack/24037dfa0ad31f7da519e3c3c33e1c909bf454e10fddd49f6b9b2ff1ad3b424d.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/24037dfa0ad31f7da519e3c3c33e1c909bf454e10fddd49f6b9b2ff1ad3b424d.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/spotify.service\";\nimport * as i2 from \"@angular/common\";\nfunction AppComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const playlist_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(playlist_r1.name);\n  }\n}\nexport class AppComponent {\n  constructor(playlistService) {\n    this.playlistService = playlistService;\n    this.playlists = [];\n  }\n  ngOnInit() {\n    this.playlistService.getAllPlaylists().subscribe(playlists => {\n      this.playlists = playlists;\n    }, error => {\n      console.log('Error fetching playlists', error);\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 4,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"All Playlists\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"ul\");\n      i0.ɵɵtemplate(3, AppComponent_li_3_Template, 2, 1, \"li\", 0);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.playlists);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IAMEA,0BAAuC;IAAAA,YAAmB;IAAAA,iBAAK;;;;IAAxBA,eAAmB;IAAnBA,sCAAmB;;;ACE5D,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,eAA+B;IAA/B,oBAAe,GAAfA,eAAe;IAFnC,cAAS,GAAU,EAAE;EAEiC;EAEtDC,QAAQ;IACN,IAAI,CAACD,eAAe,CAACE,eAAe,EAAE,CAACC,SAAS,CAC7CC,SAAgB,IAAI;MACnB,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC5B,CAAC,EACAC,KAAU,IAAI;MACbC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,KAAK,CAAC;IAChD,CAAC,CACF;EACH;;AAdWP,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDJzBf,0BAAI;MAAAA,6BAAa;MAAAA,iBAAK;MACtBA,0BAAI;MACFA,2DAA+D;MACjEA,iBAAK;;;MADsBA,eAAY;MAAZA,uCAAY","names":["i0","AppComponent","constructor","playlistService","ngOnInit","getAllPlaylists","subscribe","playlists","error","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\app.component.html","C:\\IUT\\spotizer\\src\\app\\app.component.ts"],"sourcesContent":["<!--\r\n<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n-->\r\n<h1>All Playlists</h1>\r\n<ul>\r\n  <li *ngFor=\"let playlist of playlists\">{{ playlist.name }}</li>\r\n</ul>\r\n","import { Component } from '@angular/core';\r\nimport {SpotifyService} from \"./services/spotify.service\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  playlists: any[] = [];\r\n\r\n  constructor(private playlistService: SpotifyService) {}\r\n\r\n  ngOnInit() {\r\n    this.playlistService.getAllPlaylists().subscribe(\r\n      (playlists: any[]) => {\r\n        this.playlists = playlists;\r\n      },\r\n      (error: any) => {\r\n        console.log('Error fetching playlists', error);\r\n      }\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/3c441f5474aef912adbc2be0bfe0cec4cbf4ae1bdcadfc0b4377fde0cf468f39.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/3c441f5474aef912adbc2be0bfe0cec4cbf4ae1bdcadfc0b4377fde0cf468f39.json b/.angular/cache/15.2.5/babel-webpack/3c441f5474aef912adbc2be0bfe0cec4cbf4ae1bdcadfc0b4377fde0cf468f39.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/3c441f5474aef912adbc2be0bfe0cec4cbf4ae1bdcadfc0b4377fde0cf468f39.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = function (a1) {\n  return [\"/album\", a1];\n};\nfunction SearchComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"a\", 9);\n    i0.ɵɵelement(3, \"img\", 10);\n    i0.ɵɵelementStart(4, \"h5\", 11);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const album_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, album_r4.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r4.title);\n    i0.ɵɵproperty(\"src\", album_r4.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r4.title);\n  }\n}\nfunction SearchComponent_div_10_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const album_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r7.title);\n  }\n}\nfunction SearchComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"h5\", 11)(3, \"a\", 9);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(5, SearchComponent_div_10_div_5_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const artist_r5 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/artist-details/\", artist_r5.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(artist_r5.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", artist_r5.albums);\n  }\n}\nfunction SearchComponent_div_11_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const artist_r10 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(artist_r10.name);\n  }\n}\nfunction SearchComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"h5\", 11);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, SearchComponent_div_11_div_4_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const song_r8 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(song_r8.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", song_r8.artists);\n  }\n}\nfunction SearchComponent_div_12_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const song_r13 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(song_r13.title);\n  }\n}\nfunction SearchComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"h5\", 11);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, SearchComponent_div_12_div_4_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const playlist_r11 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(playlist_r11.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", playlist_r11.songs);\n  }\n}\nexport class SearchComponent {\n  constructor(spotifyService, http, router) {\n    this.spotifyService = spotifyService;\n    this.http = http;\n    this.router = router;\n    this.searchText = '';\n    this.searchQuery = 'title';\n    this.songs = [];\n    this.artists = [];\n    this.albums = [];\n    this.playlists = [];\n  }\n  ngOnInit() {\n    this.spotifyService.getAlbums().subscribe(data => {\n      this.albums = Object.values(data);\n    });\n  }\n  search() {\n    // Appel à la méthode de recherche de chansons\n    this.spotifyService.searchSongs(this.searchText).subscribe(response => {\n      console.log('Search response (songs):', response);\n      this.songs = response;\n    });\n    // Appel à la méthode de recherche d'artistes\n    this.spotifyService.searchArtists(this.searchText).subscribe(response => {\n      console.log('Search response (artists):', response);\n      this.artists = response;\n    });\n    // Appel à la méthode de recherche d'albums\n    this.spotifyService.searchAlbums(this.searchText).subscribe(response => {\n      console.log('Search response (albums):', response);\n      this.albums = response;\n    });\n    // Appel à la méthode de recherche de playlists\n    this.spotifyService.searchPlaylists(this.searchText).subscribe(response => {\n      console.log('Search response (playlists):', response);\n      this.playlists = response;\n    });\n  }\n}\nSearchComponent.ɵfac = function SearchComponent_Factory(t) {\n  return new (t || SearchComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchComponent,\n  selectors: [[\"app-search\"]],\n  decls: 13,\n  vars: 5,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-3xl\", \"font-semibold\", \"text-green-500\", \"mb-4\"], [1, \"flex\", \"items-center\", \"mb-5\"], [\"type\", \"text\", \"placeholder\", \"Recherchez des chansons, artistes, albums ou playlists\", 1, \"bg-gray-200\", \"text-gray-800\", \"p-2\", \"rounded\", \"w-full\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-green-500\", \"transition\", \"duration-300\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [1, \"bg-green-500\", \"hover:bg-green-600\", \"text-white\", \"py-2\", \"px-4\", \"ml-2\", \"rounded\", \"transition\", \"duration-300\", 3, \"click\"], [1, \"grid\", \"grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [3, \"routerLink\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"], [1, \"text-gray-400\"]],\n  template: function SearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Spotify Clone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function SearchComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.searchText = $event;\n      })(\"input\", function SearchComponent_Template_input_input_5_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function SearchComponent_Template_button_click_6_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵtext(7, \"Rechercher \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵtemplate(9, SearchComponent_div_9_Template, 6, 6, \"div\", 7);\n      i0.ɵɵtemplate(10, SearchComponent_div_10_Template, 6, 3, \"div\", 7);\n      i0.ɵɵtemplate(11, SearchComponent_div_11_Template, 5, 2, \"div\", 7);\n      i0.ɵɵtemplate(12, SearchComponent_div_12_Template, 5, 2, \"div\", 7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchText);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.artists);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.songs);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.playlists);\n    }\n  },\n  dependencies: [i4.NgForOf, i3.RouterLink, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","SearchComponent","constructor","spotifyService","http","router","ngOnInit","getAlbums","subscribe","data","albums","Object","values","search","searchSongs","searchText","response","console","log","songs","searchArtists","artists","searchAlbums","searchPlaylists","playlists","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\search\\search.component.html","C:\\IUT\\spotizer\\src\\app\\search\\search.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\r\n  <div class=\"container mx-auto p-4\">\r\n    <h1 class=\"text-3xl font-semibold text-green-500 mb-4\">Spotify Clone</h1>\r\n    <div class=\"flex items-center mb-5\">\r\n      <input\r\n        class=\"bg-gray-200 text-gray-800 p-2 rounded w-full focus:outline-none focus:ring-2 focus:ring-green-500 transition duration-300\"\r\n        type=\"text\" [(ngModel)]=\"searchText\" (input)=\"search()\"\r\n        placeholder=\"Recherchez des chansons, artistes, albums ou playlists\"/>\r\n      <button class=\"bg-green-500 hover:bg-green-600 text-white py-2 px-4 ml-2 rounded transition duration-300\"\r\n              (click)=\"search()\">Rechercher\r\n      </button>\r\n    </div>\r\n    <div class=\"grid grid-cols-3 gap-4\">\r\n      <div *ngFor=\"let album of albums\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <a [routerLink]=\"['/album', album.id]\">\r\n            <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\r\n            <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let artist of artists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <h5 class=\"text-lg font-semibold text-green-500\">\r\n            <a routerLink=\"/artist-details/{{ artist.id }}\">{{ artist.name }}</a>\r\n          </h5>\r\n          <div *ngFor=\"let album of artist.albums\">\r\n            <p class=\"text-gray-400\">{{ album.title }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngFor=\"let song of songs\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ song.title }}</h5>\r\n          <div *ngFor=\"let artist of song.artists\">\r\n            <p class=\"text-gray-400\">{{ artist.name }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let playlist of playlists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ playlist.title }}</h5>\r\n          <div *ngFor=\"let song of playlist.songs\">\r\n            <p class=\"text-gray-400\">{{ song.title }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {HttpClient} from '@angular/common/http';\r\nimport {Component} from '@angular/core';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\nimport {Router} from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent {\r\n  searchText: string = '';\r\n  searchQuery: string = 'title';\r\n  songs: any[] = [];\r\n  artists: any[] = [];\r\n  albums: any[] = [];\r\n  playlists: any[] = [];\r\n\r\n  constructor(private spotifyService: SpotifyService, private http: HttpClient, private router: Router) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.spotifyService.getAlbums().subscribe((data: any) => {\r\n      this.albums = Object.values(data);\r\n    });\r\n  }\r\n\r\n  search() {\r\n    // Appel à la méthode de recherche de chansons\r\n    this.spotifyService.searchSongs(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (songs):', response);\r\n      this.songs = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'artistes\r\n    this.spotifyService.searchArtists(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (artists):', response);\r\n      this.artists = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'albums\r\n    this.spotifyService.searchAlbums(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (albums):', response);\r\n      this.albums = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche de playlists\r\n    this.spotifyService.searchPlaylists(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (playlists):', response);\r\n      this.playlists = response;\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/6cd47fe30b17ea5e4eb07c7f168132362f05615abbda6ad461b7c9907f7d34c0.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/6cd47fe30b17ea5e4eb07c7f168132362f05615abbda6ad461b7c9907f7d34c0.json b/.angular/cache/15.2.5/babel-webpack/6cd47fe30b17ea5e4eb07c7f168132362f05615abbda6ad461b7c9907f7d34c0.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/6cd47fe30b17ea5e4eb07c7f168132362f05615abbda6ad461b7c9907f7d34c0.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/spotify.service\";\nexport class VideoPlayerComponent {\n  constructor(route, spotifyService) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n    this.videoUrl = '';\n  }\n  ngOnInit() {\n    // @ts-ignore\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.videoUrl = 'https://www.youtube.com/embed/1hLIXrlpRe8';\n    this.spotifyService.getSong(id).subscribe(song => {\n      this.song = song;\n      this.videoUrl = 'https://www.youtube.com/embed/' + this.song.videoId;\n    });\n  }\n}\nVideoPlayerComponent.ɵfac = function VideoPlayerComponent_Factory(t) {\n  return new (t || VideoPlayerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService));\n};\nVideoPlayerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VideoPlayerComponent,\n  selectors: [[\"app-video-player\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [\"routerLink\", \"/\", 1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", \"mb-4\"], [1, \"bg-black\", \"rounded\", \"p-4\"], [\"width\", \"100%\", \"height\", \"315\", \"frameborder\", \"0\", \"allowfullscreen\", \"\", 3, \"src\"]],\n  template: function VideoPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵtext(2, \"Retour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelement(4, \"iframe\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"src\", ctx.videoUrl, i0.ɵɵsanitizeResourceUrl);\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,KAAqB,EACrBC,cAA8B;IAD9B,UAAK,GAALD,KAAK;IACL,mBAAc,GAAdC,cAAc;IAJxB,aAAQ,GAAW,EAAE;EAKlB;EAEHC,QAAQ;IACN;IACA,MAAMC,EAAE,GAAG,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAClD,IAAI,CAACC,QAAQ,GAAG,2CAA2C;IAC3D,IAAI,CAACN,cAAc,CAACO,OAAO,CAACL,EAAE,CAAC,CAACM,SAAS,CAACC,IAAI,IAAG;MAC/C,IAAI,CAACA,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACH,QAAQ,GAAG,gCAAgC,GAAG,IAAI,CAACG,IAAI,CAACC,OAAO;IACtE,CAAC,CAAC;EACJ;;AAjBWb,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVjCC,8BAAmC;MAC4CA,sBAAM;MAAAA,iBAAS;MAC5FA,8BAAkC;MAChCA,4BAA4F;MAC9FA,iBAAM;;;MAD8BA,eAAgB;MAAhBA,4DAAgB","names":["VideoPlayerComponent","constructor","route","spotifyService","ngOnInit","id","snapshot","paramMap","get","videoUrl","getSong","subscribe","song","videoId","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.ts","C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-video-player',\r\n  templateUrl: './video-player.component.html',\r\n  styleUrls: ['./video-player.component.css']\r\n})\r\nexport class VideoPlayerComponent {\r\n  song: any;\r\n  videoUrl: string = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // @ts-ignore\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.videoUrl = 'https://www.youtube.com/embed/1hLIXrlpRe8';\r\n    this.spotifyService.getSong(id).subscribe(song => {\r\n      this.song = song;\r\n      this.videoUrl = 'https://www.youtube.com/embed/' + this.song.videoId;\r\n    });\r\n  }\r\n}\r\n","<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <iframe width=\"100%\" height=\"315\" [src]=\"videoUrl\" frameborder=\"0\" allowfullscreen></iframe>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/7ea5bf33a7c4fb2a832f48cc27f7128cd7853f8269faa58287d833ba1b21ca5a.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/7ea5bf33a7c4fb2a832f48cc27f7128cd7853f8269faa58287d833ba1b21ca5a.json b/.angular/cache/15.2.5/babel-webpack/7ea5bf33a7c4fb2a832f48cc27f7128cd7853f8269faa58287d833ba1b21ca5a.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/7ea5bf33a7c4fb2a832f48cc27f7128cd7853f8269faa58287d833ba1b21ca5a.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { catchError, from, map, Observable, takeWhile } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n    this.apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(query: string): Observable<any> {\r\n      return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(\r\n        map((response: any) => {\r\n            if (Array.isArray(response)) {\r\n              return response;\r\n            } else {\r\n              return [response];\r\n            }\r\n          }\r\n        ));\r\n    }*/\n  searchPlaylists(query) {\n    let id = 1;\n    const playlists = [];\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        this.http.get(`${this.apiUrl}/playlists/${id}`).pipe(map(response => {\n          if (response.name.toLowerCase().includes(query.toLowerCase())) {\n            playlists.push(response);\n          }\n          id++;\n          if (response.id) {\n            // continue the loop\n            getPlaylist();\n          } else {\n            observer.next(playlists);\n            observer.complete();\n          }\n        }), catchError(error => {\n          // stop the loop and return the playlists that have been fetched so far\n          observer.next(playlists);\n          observer.complete();\n          return [];\n        }), takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n      getPlaylist();\n    });\n  }\n  getArtistAlbums(artistName, page) {\n    let params = new HttpParams().set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get(this.apiUrls, {\n      params\n    });\n  }\n  getAllPlaylists(searchTerm) {\n    let id = 1;\n    const playlists = [];\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, {\n          params\n        }).pipe(map(response => {\n          if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n            playlists.push(response);\n          }\n          id++;\n          if (response.id) {\n            // continue the loop\n            getPlaylist();\n          } else {\n            observer.next(playlists);\n            observer.complete();\n          }\n        }), catchError(error => {\n          // stop the loop and return the playlists that have been fetched so far\n          observer.next(playlists);\n          observer.complete();\n          return [];\n        }), takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n      getPlaylist();\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","catchError","from","map","Observable","takeWhile","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","searchPlaylists","playlists","observer","getPlaylist","name","toLowerCase","includes","push","next","complete","error","subscribe","getArtistAlbums","artistName","page","params","set","toString","apiUrls","getAllPlaylists","searchTerm","append","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {catchError, from, map, Observable, takeWhile} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  private apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchAlbums(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n/*  searchPlaylists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }*/\n  searchPlaylists(query: string): Observable<any> {\n    let id = 1;\n    const playlists: any[] = [];\n\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        this.http.get(`${this.apiUrl}/playlists/${id}`).pipe(\n          map((response: any) => {\n            if (response.name.toLowerCase().includes(query.toLowerCase())) {\n              playlists.push(response);\n            }\n            id++;\n            if (response.id) {\n              // continue the loop\n              getPlaylist();\n            } else {\n              observer.next(playlists);\n              observer.complete();\n            }\n          }),\n          catchError(error => {\n            // stop the loop and return the playlists that have been fetched so far\n            observer.next(playlists);\n            observer.complete();\n            return [];\n          }),\n          takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n\n      getPlaylist();\n    });\n  }\n\n  getArtistAlbums(artistName: string, page?: number): Observable<Album[]> {\n    let params = new HttpParams()\n      .set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get<Album[]>(this.apiUrls, { params });\n  }\n\n  getAllPlaylists(searchTerm?: string): Observable<any> {\n    let id = 1;\n    const playlists: any[] = [];\n\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, { params }).pipe(\n          map((response: any) => {\n            if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n              playlists.push(response);\n            }\n            id++;\n            if (response.id) {\n              // continue the loop\n              getPlaylist();\n            } else {\n              observer.next(playlists);\n              observer.complete();\n            }\n          }),\n          catchError(error => {\n            // stop the loop and return the playlists that have been fetched so far\n            observer.next(playlists);\n            observer.complete();\n            return [];\n          }),\n          takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n\n      getPlaylist();\n    });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/0c7f8971f23a7a265ea0f5111adbae3a124c8a78d8a285a30bd2fdd6779d0ee2.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/0c7f8971f23a7a265ea0f5111adbae3a124c8a78d8a285a30bd2fdd6779d0ee2.json b/.angular/cache/15.2.5/babel-webpack/0c7f8971f23a7a265ea0f5111adbae3a124c8a78d8a285a30bd2fdd6779d0ee2.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/0c7f8971f23a7a265ea0f5111adbae3a124c8a78d8a285a30bd2fdd6779d0ee2.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { from, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n    this.apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    console.log('Search query:', query); // Ajout de l'instruction console.log\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(query: string): Observable<any> {\r\n      return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(\r\n        map((response: any) => {\r\n            if (Array.isArray(response)) {\r\n              return response;\r\n            } else {\r\n              return [response];\r\n            }\r\n          }\r\n        ));\r\n    }*/\n  searchPlaylists(keyword) {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get(url);\n  }\n  getArtistAlbums(artistName, page) {\n    let params = new HttpParams().set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get(this.apiUrls, {\n      params\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","from","map","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","console","log","searchPlaylists","keyword","url","getArtistAlbums","artistName","page","params","set","toString","apiUrls","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {from, map, Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  private apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n\n  searchAlbums(query: string): Observable<any> {\n    console.log('Search query:', query); // Ajout de l'instruction console.log\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n/*  searchPlaylists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }*/\n  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }\n\n  getArtistAlbums(artistName: string, page?: number): Observable<Album[]> {\n    let params = new HttpParams()\n      .set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get<Album[]>(this.apiUrls, { params });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/f49d4606c611b186cdb4d3c3d62709f4f94b0ad9de57eaccbb62095ce19ffc80.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/f49d4606c611b186cdb4d3c3d62709f4f94b0ad9de57eaccbb62095ce19ffc80.json b/.angular/cache/15.2.5/babel-webpack/f49d4606c611b186cdb4d3c3d62709f4f94b0ad9de57eaccbb62095ce19ffc80.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/f49d4606c611b186cdb4d3c3d62709f4f94b0ad9de57eaccbb62095ce19ffc80.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { from, map, Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n    this.apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchPlaylists(query) {\n    return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(keyword: string): Observable<Playlist[]> {\r\n      const url = `${this.apiUrl}/playlists?q=${keyword}`;\r\n      return this.http.get<Playlist[]>(url);\r\n    }*/\n  getArtistAlbums(artistName, page) {\n    let params = new HttpParams().set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get(this.apiUrls, {\n      params\n    });\n  }\n  getAllPlaylists() {\n    let id = 1;\n    const playlists = [];\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        this.http.get(`${this.apiUrl}/playlists/${id}`).pipe(map(response => {\n          playlists.push(response);\n          id++;\n          if (response.id) {\n            // continue the loop\n            getPlaylist();\n          } else {\n            observer.next(playlists);\n            observer.complete();\n          }\n        }), catchError(error => {\n          // stop the loop and return the playlists that have been fetched so far\n          observer.next(playlists);\n          observer.complete();\n          return [];\n        }), takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n      getPlaylist();\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","from","map","Observable","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","searchPlaylists","getArtistAlbums","artistName","page","params","set","toString","apiUrls","getAllPlaylists","playlists","observer","getPlaylist","push","next","complete","catchError","error","takeWhile","subscribe","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {from, map, Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  private apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchAlbums(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n  searchPlaylists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n/*  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }*/\n\n  getArtistAlbums(artistName: string, page?: number): Observable<Album[]> {\n    let params = new HttpParams()\n      .set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get<Album[]>(this.apiUrls, { params });\n  }\n\n  getAllPlaylists(): Observable<any> {\n    let id = 1;\n    const playlists = [];\n\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        this.http.get(`${this.apiUrl}/playlists/${id}`).pipe(\n          map((response: any) => {\n            playlists.push(response);\n            id++;\n            if (response.id) {\n              // continue the loop\n              getPlaylist();\n            } else {\n              observer.next(playlists);\n              observer.complete();\n            }\n          }),\n          catchError(error => {\n            // stop the loop and return the playlists that have been fetched so far\n            observer.next(playlists);\n            observer.complete();\n            return [];\n          }),\n          takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n\n      getPlaylist();\n    });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/9b9b4d6765f69e4f937afcd92625913dd7fea4058b4b71a36b09058ac820d99d.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/9b9b4d6765f69e4f937afcd92625913dd7fea4058b4b71a36b09058ac820d99d.json b/.angular/cache/15.2.5/babel-webpack/9b9b4d6765f69e4f937afcd92625913dd7fea4058b4b71a36b09058ac820d99d.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/9b9b4d6765f69e4f937afcd92625913dd7fea4058b4b71a36b09058ac820d99d.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/spotify.service\";\nexport class VideoPlayerComponent {\n  constructor(route, spotifyService) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n    this.videoUrl = '';\n  }\n  ngOnInit() {\n    // @ts-ignore\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.spotifyService.getSong(id).subscribe(data => {\n      this.song = data;\n      if (this.song) {\n        if (this.song.youtube) {\n          this.videoUrl = this.song.youtube.replace(\"watch?v=\", \"embed/\");\n          console.log(this.videoUrl);\n        }\n      }\n    });\n  }\n}\nVideoPlayerComponent.ɵfac = function VideoPlayerComponent_Factory(t) {\n  return new (t || VideoPlayerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService));\n};\nVideoPlayerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VideoPlayerComponent,\n  selectors: [[\"app-video-player\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [\"routerLink\", \"/\", 1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", \"mb-4\"], [1, \"bg-black\", \"rounded\", \"p-4\"], [\"width\", \"100%\", \"height\", \"500\", \"frameborder\", \"0\", \"allow\", \"autoplay; encrypted-media\", \"allowfullscreen\", \"\", 3, \"src\"]],\n  template: function VideoPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵtext(2, \"Retour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelement(4, \"iframe\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"src\", ctx.videoUrl, i0.ɵɵsanitizeResourceUrl);\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,KAAqB,EACrBC,cAA8B;IAD9B,UAAK,GAALD,KAAK;IACL,mBAAc,GAAdC,cAAc;IAJxB,aAAQ,GAAW,EAAE;EAMrB;EAEAC,QAAQ;IACN;IACA,MAAMC,EAAE,GAAG,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAClD,IAAI,CAACL,cAAc,CAACM,OAAO,CAACJ,EAAE,CAAC,CAACK,SAAS,CAAEC,IAAS,IAAI;MACtD,IAAI,CAACC,IAAI,GAAGD,IAAI;MAChB,IAAI,IAAI,CAACC,IAAI,EAAE;QACb,IAAI,IAAI,CAACA,IAAI,CAACC,OAAO,EAAE;UACrB,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACF,IAAI,CAACC,OAAO,CAACE,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC;UAC/DC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,QAAQ,CAAC;;;IAGhC,CAAC,CAAC;EACJ;;AAtBWd,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVjCC,8BAAmC;MAC4CA,sBAAM;MAAAA,iBAAS;MAC5FA,8BAAkC;MAChCA,4BAA8H;MAChIA,iBAAM;;;MAD8BA,eAAgB;MAAhBA,4DAAgB","names":["VideoPlayerComponent","constructor","route","spotifyService","ngOnInit","id","snapshot","paramMap","get","getSong","subscribe","data","song","youtube","videoUrl","replace","console","log","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.ts","C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-video-player',\r\n  templateUrl: './video-player.component.html',\r\n  styleUrls: ['./video-player.component.css']\r\n})\r\nexport class VideoPlayerComponent {\r\n  song: any;\r\n  videoUrl: string = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // @ts-ignore\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.spotifyService.getSong(id).subscribe((data: any) => {\r\n      this.song = data;\r\n      if (this.song) {\r\n        if (this.song.youtube) {\r\n          this.videoUrl = this.song.youtube.replace(\"watch?v=\", \"embed/\");\r\n          console.log(this.videoUrl);\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <iframe width=\"100%\" height=\"500\" [src]=\"videoUrl\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/c051297ae5eeb8df39ccc3859a36fab018e026b865919420484fa68daa97c433.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/c051297ae5eeb8df39ccc3859a36fab018e026b865919420484fa68daa97c433.json b/.angular/cache/15.2.5/babel-webpack/c051297ae5eeb8df39ccc3859a36fab018e026b865919420484fa68daa97c433.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/c051297ae5eeb8df39ccc3859a36fab018e026b865919420484fa68daa97c433.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./header/header.component\";\nexport class AppComponent {\n  constructor(playlistService) {\n    this.playlistService = playlistService;\n    this.playlists = [];\n  }\n  ngOnInit() {\n    this.playlistService.getAllPlaylists().subscribe(playlists => {\n      this.playlists = playlists;\n      console.log('Playlists', playlists);\n    }, error => {\n      console.log('Error fetching playlists', error);\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 2,\n  vars: 0,\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-header\")(1, \"router-outlet\");\n    }\n  },\n  dependencies: [i2.RouterOutlet, i3.HeaderComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAQA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,eAA+B;IAA/B,oBAAe,GAAfA,eAAe;IAFnC,cAAS,GAAU,EAAE;EAEiC;EAEtDC,QAAQ;IACN,IAAI,CAACD,eAAe,CAACE,eAAe,EAAE,CAACC,SAAS,CAC7CC,SAAgB,IAAI;MACnB,IAAI,CAACA,SAAS,GAAGA,SAAS;MAC1BC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,SAAS,CAAC;IACrC,CAAC,EACAG,KAAU,IAAI;MACbF,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEC,KAAK,CAAC;IAChD,CAAC,CACF;EACH;;AAfWT,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAU;EAAAC;EAAAC;EAAAC;IAAA;MCRzBC,6BAAyB","names":["AppComponent","constructor","playlistService","ngOnInit","getAllPlaylists","subscribe","playlists","console","log","error","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\app.component.ts","C:\\IUT\\spotizer\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport {SpotifyService} from \"./services/spotify.service\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  playlists: any[] = [];\r\n\r\n  constructor(private playlistService: SpotifyService) {}\r\n\r\n  ngOnInit() {\r\n    this.playlistService.getAllPlaylists().subscribe(\r\n      (playlists: any[]) => {\r\n        this.playlists = playlists;\r\n        console.log('Playlists', playlists);\r\n      },\r\n      (error: any) => {\r\n        console.log('Error fetching playlists', error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n<!--<h1>All Playlists</h1>\r\n<ul>\r\n  <li *ngFor=\"let playlist of playlists\">{{ playlist.name }}</li>\r\n</ul>-->\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/339b3bcca944e735dd142f1ac1edc1c904e642c3d437d9d9aae1b3fd24ed5952.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/339b3bcca944e735dd142f1ac1edc1c904e642c3d437d9d9aae1b3fd24ed5952.json b/.angular/cache/15.2.5/babel-webpack/339b3bcca944e735dd142f1ac1edc1c904e642c3d437d9d9aae1b3fd24ed5952.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/339b3bcca944e735dd142f1ac1edc1c904e642c3d437d9d9aae1b3fd24ed5952.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/spotify.service\";\nimport * as i3 from \"@angular/platform-browser\";\nexport class VideoPlayerComponent {\n  constructor(route, spotifyService, sanitizer) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n    this.sanitizer = sanitizer;\n    this.videoUrl = '';\n  }\n  ngOnInit() {\n    // @ts-ignore\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.spotifyService.getSong(id).subscribe(data => {\n      this.song = data;\n      if (this.song && this.song.youtube) {\n        this.videoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.song.youtube.replace(\"watch?v=\", \"embed/\"));\n      }\n    });\n  }\n}\nVideoPlayerComponent.ɵfac = function VideoPlayerComponent_Factory(t) {\n  return new (t || VideoPlayerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService), i0.ɵɵdirectiveInject(i3.DomSanitizer));\n};\nVideoPlayerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VideoPlayerComponent,\n  selectors: [[\"app-video-player\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [\"routerLink\", \"/\", 1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", \"mb-4\"], [1, \"bg-black\", \"rounded\", \"p-4\"], [\"width\", \"100%\", \"height\", \"500\", \"frameborder\", \"0\", \"allow\", \"autoplay; encrypted-media\", \"allowfullscreen\", \"\", 3, \"src\"]],\n  template: function VideoPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵtext(2, \"Retour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelement(4, \"iframe\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"src\", ctx.videoUrl, i0.ɵɵsanitizeResourceUrl);\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAWA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,KAAqB,EACrBC,cAA8B,EAC9BC,SAAuB;IAFvB,UAAK,GAALF,KAAK;IACL,mBAAc,GAAdC,cAAc;IACd,cAAS,GAATC,SAAS;IALnB,aAAQ,GAAW,EAAE;EAMjB;EAEJC,QAAQ;IACN;IACA,MAAMC,EAAE,GAAG,CAAC,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAClD,IAAI,CAACN,cAAc,CAACO,OAAO,CAACJ,EAAE,CAAC,CAACK,SAAS,CAAEC,IAAS,IAAI;MACtD,IAAI,CAACC,IAAI,GAAGD,IAAI;MAChB,IAAI,IAAI,CAACC,IAAI,IAAI,IAAI,CAACA,IAAI,CAACC,OAAO,EAAE;QAClC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACX,SAAS,CAACY,8BAA8B,CAAC,IAAI,CAACH,IAAI,CAACC,OAAO,CAACG,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;;IAElH,CAAC,CAAC;EACJ;;AAnBWjB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXjCC,8BAAmC;MAC4CA,sBAAM;MAAAA,iBAAS;MAC5FA,8BAAkC;MAChCA,4BAA8H;MAChIA,iBAAM;;;MAD8BA,eAAgB;MAAhBA,4DAAgB","names":["VideoPlayerComponent","constructor","route","spotifyService","sanitizer","ngOnInit","id","snapshot","paramMap","get","getSong","subscribe","data","song","youtube","videoUrl","bypassSecurityTrustResourceUrl","replace","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.ts","C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\nimport {DomSanitizer} from \"@angular/platform-browser\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-video-player',\r\n  templateUrl: './video-player.component.html',\r\n  styleUrls: ['./video-player.component.css']\r\n})\r\nexport class VideoPlayerComponent {\r\n  song: any;\r\n  videoUrl: string = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService,\r\n    private sanitizer: DomSanitizer\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // @ts-ignore\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.spotifyService.getSong(id).subscribe((data: any) => {\r\n      this.song = data;\r\n      if (this.song && this.song.youtube) {\r\n        this.videoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.song.youtube.replace(\"watch?v=\", \"embed/\"));\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <iframe width=\"100%\" height=\"500\" [src]=\"videoUrl\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/9d62b8ed06c69030587dc5bf548db8fc95b6cce4a53ce66a10be5c5ed6a39da9.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/9d62b8ed06c69030587dc5bf548db8fc95b6cce4a53ce66a10be5c5ed6a39da9.json b/.angular/cache/15.2.5/babel-webpack/9d62b8ed06c69030587dc5bf548db8fc95b6cce4a53ce66a10be5c5ed6a39da9.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/9d62b8ed06c69030587dc5bf548db8fc95b6cce4a53ce66a10be5c5ed6a39da9.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { catchError, from, map, Observable, takeWhile } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n    this.apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchPlaylists(query) {\n    return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(keyword: string): Observable<Playlist[]> {\r\n      const url = `${this.apiUrl}/playlists?q=${keyword}`;\r\n      return this.http.get<Playlist[]>(url);\r\n    }*/\n  getArtistAlbums(artistName, page) {\n    let params = new HttpParams().set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get(this.apiUrls, {\n      params\n    });\n  }\n  getAllPlaylists() {\n    let id = 1;\n    const playlists = [];\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        this.http.get(`${this.apiUrl}/playlists/${id}`).pipe(map(response => {\n          playlists.push(response);\n          id++;\n          if (response.id) {\n            // continue the loop\n            getPlaylist();\n          } else {\n            observer.next(playlists);\n            observer.complete();\n          }\n        }), catchError(error => {\n          // stop the loop and return the playlists that have been fetched so far\n          observer.next(playlists);\n          observer.complete();\n          return [];\n        }), takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n      getPlaylist();\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","catchError","from","map","Observable","takeWhile","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","searchPlaylists","getArtistAlbums","artistName","page","params","set","toString","apiUrls","getAllPlaylists","playlists","observer","getPlaylist","push","next","complete","error","subscribe","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {catchError, from, map, Observable, takeWhile} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  private apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchAlbums(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n  searchPlaylists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n/*  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }*/\n\n  getArtistAlbums(artistName: string, page?: number): Observable<Album[]> {\n    let params = new HttpParams()\n      .set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get<Album[]>(this.apiUrls, { params });\n  }\n\n  getAllPlaylists(): Observable<any> {\n    let id = 1;\n    const playlists: any[] = [];\n\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        this.http.get(`${this.apiUrl}/playlists/${id}`).pipe(\n          map((response: any) => {\n            playlists.push(response);\n            id++;\n            if (response.id) {\n              // continue the loop\n              getPlaylist();\n            } else {\n              observer.next(playlists);\n              observer.complete();\n            }\n          }),\n          catchError(error => {\n            // stop the loop and return the playlists that have been fetched so far\n            observer.next(playlists);\n            observer.complete();\n            return [];\n          }),\n          takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n\n      getPlaylist();\n    });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/b1a6a1a226b91213d97d46a11679131a7ed1229e11eff6fe07a99571e5a56c48.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/b1a6a1a226b91213d97d46a11679131a7ed1229e11eff6fe07a99571e5a56c48.json b/.angular/cache/15.2.5/babel-webpack/b1a6a1a226b91213d97d46a11679131a7ed1229e11eff6fe07a99571e5a56c48.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/b1a6a1a226b91213d97d46a11679131a7ed1229e11eff6fe07a99571e5a56c48.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = function (a1) {\n  return [\"/album\", a1];\n};\nfunction SearchComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Album\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"a\", 10);\n    i0.ɵɵelement(5, \"img\", 11);\n    i0.ɵɵelementStart(6, \"h5\", 12);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const album_r4 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, album_r4.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r4.title);\n    i0.ɵɵproperty(\"src\", album_r4.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r4.title);\n  }\n}\nfunction SearchComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"h5\", 12)(3, \"p\", 9);\n    i0.ɵɵtext(4, \"Artiste\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"a\", 10);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const artist_r5 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/artist-details/\", artist_r5.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(artist_r5.name);\n  }\n}\nfunction SearchComponent_div_11_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const artist_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(artist_r8.name);\n  }\n}\nfunction SearchComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Chanson\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h5\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, SearchComponent_div_11_div_6_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const song_r6 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(song_r6.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", song_r6.artists);\n  }\n}\nfunction SearchComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Playlist\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h5\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const playlist_r9 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(playlist_r9.name);\n  }\n}\nexport class SearchComponent {\n  constructor(spotifyService, http, router) {\n    this.spotifyService = spotifyService;\n    this.http = http;\n    this.router = router;\n    this.searchText = '';\n    this.searchQuery = 'title';\n    this.songs = [];\n    this.artists = [];\n    this.albums = [];\n    this.playlists = [];\n  }\n  ngOnInit() {\n    this.spotifyService.getAlbums().subscribe(data => {\n      this.albums = Object.values(data);\n    });\n  }\n  search() {\n    // Appel à la méthode de recherche de chansons\n    this.spotifyService.searchSongs(this.searchText).subscribe(response => {\n      this.songs = response;\n    });\n    // Appel à la méthode de recherche d'artistes\n    this.spotifyService.searchArtists(this.searchText).subscribe(response => {\n      this.artists = response;\n    });\n    // Appel à la méthode de recherche d'albums\n    this.spotifyService.searchAlbums(this.searchText).subscribe(response => {\n      this.albums = response;\n    });\n    // Appel à la méthode de recherche de playlists\n    this.spotifyService.getAllPlaylists(this.searchText).subscribe(playlists => {\n      this.playlists = playlists;\n      console.log('Playlists', playlists);\n    }, error => {\n      console.log('Error searching playlists', error);\n    });\n  }\n}\nSearchComponent.ɵfac = function SearchComponent_Factory(t) {\n  return new (t || SearchComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchComponent,\n  selectors: [[\"app-search\"]],\n  decls: 13,\n  vars: 5,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-3xl\", \"font-semibold\", \"text-green-500\", \"mb-4\"], [1, \"flex\", \"items-center\", \"mb-5\"], [\"type\", \"text\", \"placeholder\", \"Recherchez des chansons, artistes, albums ou playlists\", 1, \"bg-gray-200\", \"text-gray-800\", \"p-2\", \"rounded\", \"w-full\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-green-500\", \"transition\", \"duration-300\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [1, \"bg-green-500\", \"hover:bg-green-600\", \"text-white\", \"py-2\", \"px-4\", \"ml-2\", \"rounded\", \"transition\", \"duration-300\", 3, \"click\"], [1, \"grid\", \"grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"text-gray-400\"], [3, \"routerLink\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function SearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Spotify Clone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function SearchComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.searchText = $event;\n      })(\"input\", function SearchComponent_Template_input_input_5_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function SearchComponent_Template_button_click_6_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵtext(7, \"Rechercher \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵtemplate(9, SearchComponent_div_9_Template, 8, 6, \"div\", 7);\n      i0.ɵɵtemplate(10, SearchComponent_div_10_Template, 7, 2, \"div\", 7);\n      i0.ɵɵtemplate(11, SearchComponent_div_11_Template, 7, 2, \"div\", 7);\n      i0.ɵɵtemplate(12, SearchComponent_div_12_Template, 6, 1, \"div\", 7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchText);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.artists);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.songs);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.playlists);\n    }\n  },\n  dependencies: [i4.NgForOf, i3.RouterLink, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;IAaMA,2BAAkC;IAELA,qBAAK;IAAAA,iBAAI;IAClCA,6BAAuC;IACrCA,0BAA4E;IAC5EA,8BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IAFtEA,eAAmC;IAAnCA,oEAAmC;IACgBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;;;IAIxEA,2BAAoC;IAGLA,uBAAO;IAAAA,iBAAI;IACpCA,6BAAgD;IAAAA,YAAiB;IAAAA,iBAAI;;;;IAAlEA,eAA4C;IAA5CA,6EAA4C;IAACA,eAAiB;IAAjBA,oCAAiB;;;;;IASnEA,2BAAyC;IACdA,YAAiB;IAAAA,iBAAI;;;;IAArBA,eAAiB;IAAjBA,oCAAiB;;;;;IALhDA,2BAAgC;IAEHA,uBAAO;IAAAA,iBAAI;IACpCA,8BAAiD;IAAAA,YAAgB;IAAAA,iBAAK;IACtEA,uEAEM;IACRA,iBAAM;;;;IAJ6CA,eAAgB;IAAhBA,mCAAgB;IACzCA,eAAe;IAAfA,yCAAe;;;;;IAK3CA,2BAAwC;IAEXA,wBAAQ;IAAAA,iBAAI;IACrCA,8BAAiD;IAAAA,YAAmB;IAAAA,iBAAK;;;;IAAxBA,eAAmB;IAAnBA,sCAAmB;;;AChC9E,OAAM,MAAOC,eAAe;EAO1BC,YAAoBC,cAA8B,EAAUC,IAAgB,EAAUC,MAAc;IAAhF,mBAAc,GAAdF,cAAc;IAA0B,SAAI,GAAJC,IAAI;IAAsB,WAAM,GAANC,MAAM;IAN5F,eAAU,GAAW,EAAE;IACvB,gBAAW,GAAW,OAAO;IAC7B,UAAK,GAAU,EAAE;IACjB,YAAO,GAAU,EAAE;IACnB,WAAM,GAAU,EAAE;IAClB,cAAS,GAAe,EAAE;EAE1B;EAGAC,QAAQ;IACN,IAAI,CAACH,cAAc,CAACI,SAAS,EAAE,CAACC,SAAS,CAAEC,IAAS,IAAI;MACtD,IAAI,CAACC,MAAM,GAAGC,MAAM,CAACC,MAAM,CAACH,IAAI,CAAC;IACnC,CAAC,CAAC;EACJ;EAEAI,MAAM;IACJ;IACA,IAAI,CAACV,cAAc,CAACW,WAAW,CAAC,IAAI,CAACC,UAAU,CAAC,CAACP,SAAS,CAAEQ,QAAa,IAAI;MAC3E,IAAI,CAACC,KAAK,GAAGD,QAAQ;IACvB,CAAC,CAAC;IAEF;IACA,IAAI,CAACb,cAAc,CAACe,aAAa,CAAC,IAAI,CAACH,UAAU,CAAC,CAACP,SAAS,CAAEQ,QAAa,IAAI;MAC7E,IAAI,CAACG,OAAO,GAAGH,QAAQ;IACzB,CAAC,CAAC;IAEF;IACA,IAAI,CAACb,cAAc,CAACiB,YAAY,CAAC,IAAI,CAACL,UAAU,CAAC,CAACP,SAAS,CAAEQ,QAAa,IAAI;MAC5E,IAAI,CAACN,MAAM,GAAGM,QAAQ;IACxB,CAAC,CAAC;IAEF;IACA,IAAI,CAACb,cAAc,CAACkB,eAAe,CAAC,IAAI,CAACN,UAAU,CAAC,CAACP,SAAS,CAAEc,SAAgB,IAAI;MAChF,IAAI,CAACA,SAAS,GAAGA,SAAS;MAC1BC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,SAAS,CAAC;IACrC,CAAC,EACAG,KAAK,IAAI;MACRF,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEC,KAAK,CAAC;IACjD,CAAC,CACF;EACH;;AA1CWxB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDX5B9B,8BAAsE;MAEXA,6BAAa;MAAAA,iBAAK;MACzEA,8BAAoC;MAGpBA;QAAA;MAAA,EAAwB;QAAA,OAAU+B,YAAQ;MAAA,EAAlB;MAFtC/B,iBAGwE;MACxEA,iCAC2B;MAAnBA;QAAA,OAAS+B,YAAQ;MAAA,EAAC;MAAC/B,2BAC3B;MAAAA,iBAAS;MAEXA,8BAAoC;MAClCA,gEAQM;MACNA,kEAOM;MAENA,kEAQM;MACNA,kEAKM;MACRA,iBAAM;;;MAxCUA,eAAwB;MAAxBA,wCAAwB;MAOfA,eAAS;MAATA,oCAAS;MASRA,eAAU;MAAVA,qCAAU;MASZA,eAAQ;MAARA,mCAAQ;MASJA,eAAY;MAAZA,uCAAY","names":["i0","SearchComponent","constructor","spotifyService","http","router","ngOnInit","getAlbums","subscribe","data","albums","Object","values","search","searchSongs","searchText","response","songs","searchArtists","artists","searchAlbums","getAllPlaylists","playlists","console","log","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\search\\search.component.html","C:\\IUT\\spotizer\\src\\app\\search\\search.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\r\n  <div class=\"container mx-auto p-4\">\r\n    <h1 class=\"text-3xl font-semibold text-green-500 mb-4\">Spotify Clone</h1>\r\n    <div class=\"flex items-center mb-5\">\r\n      <input\r\n        class=\"bg-gray-200 text-gray-800 p-2 rounded w-full focus:outline-none focus:ring-2 focus:ring-green-500 transition duration-300\"\r\n        type=\"text\" [(ngModel)]=\"searchText\" (input)=\"search()\"\r\n        placeholder=\"Recherchez des chansons, artistes, albums ou playlists\"/>\r\n      <button class=\"bg-green-500 hover:bg-green-600 text-white py-2 px-4 ml-2 rounded transition duration-300\"\r\n              (click)=\"search()\">Rechercher\r\n      </button>\r\n    </div>\r\n    <div class=\"grid grid-cols-3 gap-4\">\r\n      <div *ngFor=\"let album of albums\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Album</p>\r\n          <a [routerLink]=\"['/album', album.id]\">\r\n            <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\r\n            <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let artist of artists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <h5 class=\"text-lg font-semibold text-green-500\">\r\n            <p class=\"text-gray-400\">Artiste</p>\r\n            <a routerLink=\"/artist-details/{{ artist.id }}\">{{ artist.name }}</a>\r\n          </h5>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngFor=\"let song of songs\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Chanson</p>\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ song.title }}</h5>\r\n          <div *ngFor=\"let artist of song.artists\">\r\n            <p class=\"text-gray-400\">{{ artist.name }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let playlist of playlists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Playlist</p>\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ playlist.name }}</h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {HttpClient} from '@angular/common/http';\r\nimport {Component} from '@angular/core';\r\nimport {Playlist, SpotifyService} from \"../services/spotify.service\";\r\nimport {Router} from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent {\r\n  searchText: string = '';\r\n  searchQuery: string = 'title';\r\n  songs: any[] = [];\r\n  artists: any[] = [];\r\n  albums: any[] = [];\r\n  playlists: Playlist[] = [];\r\n  constructor(private spotifyService: SpotifyService, private http: HttpClient, private router: Router) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.spotifyService.getAlbums().subscribe((data: any) => {\r\n      this.albums = Object.values(data);\r\n    });\r\n  }\r\n\r\n  search() {\r\n    // Appel à la méthode de recherche de chansons\r\n    this.spotifyService.searchSongs(this.searchText).subscribe((response: any) => {\r\n      this.songs = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'artistes\r\n    this.spotifyService.searchArtists(this.searchText).subscribe((response: any) => {\r\n      this.artists = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'albums\r\n    this.spotifyService.searchAlbums(this.searchText).subscribe((response: any) => {\r\n      this.albums = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche de playlists\r\n    this.spotifyService.getAllPlaylists(this.searchText).subscribe((playlists: any[]) => {\r\n        this.playlists = playlists;\r\n        console.log('Playlists', playlists);\r\n      },\r\n      (error) => {\r\n        console.log('Error searching playlists', error);\r\n      }\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/06079db8c1e57af19f3b9798e9c070469e6babf69546cadd27b1b98e485aeb7a.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/06079db8c1e57af19f3b9798e9c070469e6babf69546cadd27b1b98e485aeb7a.json b/.angular/cache/15.2.5/babel-webpack/06079db8c1e57af19f3b9798e9c070469e6babf69546cadd27b1b98e485aeb7a.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/06079db8c1e57af19f3b9798e9c070469e6babf69546cadd27b1b98e485aeb7a.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = function (a1) {\n  return [\"/album\", a1];\n};\nfunction SearchComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"a\", 9)(3, \"p\", 10);\n    i0.ɵɵtext(4, \"Album\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"img\", 11);\n    i0.ɵɵelementStart(6, \"h5\", 12);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const album_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, album_r4.id));\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r4.title);\n    i0.ɵɵproperty(\"src\", album_r4.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r4.title);\n  }\n}\nfunction SearchComponent_div_10_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const album_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r7.title);\n  }\n}\nfunction SearchComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"h5\", 12)(3, \"p\", 10);\n    i0.ɵɵtext(4, \"Artiste\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"a\", 9);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(7, SearchComponent_div_10_div_7_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const artist_r5 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/artist-details/\", artist_r5.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(artist_r5.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", artist_r5.albums);\n  }\n}\nfunction SearchComponent_div_11_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const artist_r10 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(artist_r10.name);\n  }\n}\nfunction SearchComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"h5\", 12);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, SearchComponent_div_11_div_4_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const song_r8 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(song_r8.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", song_r8.artists);\n  }\n}\nfunction SearchComponent_div_12_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const song_r13 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(song_r13.title);\n  }\n}\nfunction SearchComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"h5\", 12);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, SearchComponent_div_12_div_4_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const playlist_r11 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(playlist_r11.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", playlist_r11.songs);\n  }\n}\nexport class SearchComponent {\n  constructor(spotifyService, http, router) {\n    this.spotifyService = spotifyService;\n    this.http = http;\n    this.router = router;\n    this.searchText = '';\n    this.searchQuery = 'title';\n    this.songs = [];\n    this.artists = [];\n    this.albums = [];\n    this.playlists = [];\n  }\n  ngOnInit() {\n    this.spotifyService.getAlbums().subscribe(data => {\n      this.albums = Object.values(data);\n    });\n  }\n  search() {\n    // Appel à la méthode de recherche de chansons\n    this.spotifyService.searchSongs(this.searchText).subscribe(response => {\n      console.log('Search response (songs):', response);\n      this.songs = response;\n    });\n    // Appel à la méthode de recherche d'artistes\n    this.spotifyService.searchArtists(this.searchText).subscribe(response => {\n      console.log('Search response (artists):', response);\n      this.artists = response;\n    });\n    // Appel à la méthode de recherche d'albums\n    this.spotifyService.searchAlbums(this.searchText).subscribe(response => {\n      console.log('Search response (albums):', response);\n      this.albums = response;\n    });\n    // Appel à la méthode de recherche de playlists\n    this.spotifyService.searchPlaylists(this.searchText).subscribe(response => {\n      console.log('Search response (playlists):', response);\n      this.playlists = response;\n    });\n  }\n}\nSearchComponent.ɵfac = function SearchComponent_Factory(t) {\n  return new (t || SearchComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchComponent,\n  selectors: [[\"app-search\"]],\n  decls: 13,\n  vars: 5,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-3xl\", \"font-semibold\", \"text-green-500\", \"mb-4\"], [1, \"flex\", \"items-center\", \"mb-5\"], [\"type\", \"text\", \"placeholder\", \"Recherchez des chansons, artistes, albums ou playlists\", 1, \"bg-gray-200\", \"text-gray-800\", \"p-2\", \"rounded\", \"w-full\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-green-500\", \"transition\", \"duration-300\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [1, \"bg-green-500\", \"hover:bg-green-600\", \"text-white\", \"py-2\", \"px-4\", \"ml-2\", \"rounded\", \"transition\", \"duration-300\", 3, \"click\"], [1, \"grid\", \"grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [3, \"routerLink\"], [1, \"text-gray-400\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function SearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Spotify Clone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function SearchComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.searchText = $event;\n      })(\"input\", function SearchComponent_Template_input_input_5_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function SearchComponent_Template_button_click_6_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵtext(7, \"Rechercher \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵtemplate(9, SearchComponent_div_9_Template, 8, 6, \"div\", 7);\n      i0.ɵɵtemplate(10, SearchComponent_div_10_Template, 8, 3, \"div\", 7);\n      i0.ɵɵtemplate(11, SearchComponent_div_11_Template, 5, 2, \"div\", 7);\n      i0.ɵɵtemplate(12, SearchComponent_div_12_Template, 5, 2, \"div\", 7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchText);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.artists);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.songs);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.playlists);\n    }\n  },\n  dependencies: [i4.NgForOf, i3.RouterLink, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","SearchComponent","constructor","spotifyService","http","router","ngOnInit","getAlbums","subscribe","data","albums","Object","values","search","searchSongs","searchText","response","console","log","songs","searchArtists","artists","searchAlbums","searchPlaylists","playlists","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\search\\search.component.html","C:\\IUT\\spotizer\\src\\app\\search\\search.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\r\n  <div class=\"container mx-auto p-4\">\r\n    <h1 class=\"text-3xl font-semibold text-green-500 mb-4\">Spotify Clone</h1>\r\n    <div class=\"flex items-center mb-5\">\r\n      <input\r\n        class=\"bg-gray-200 text-gray-800 p-2 rounded w-full focus:outline-none focus:ring-2 focus:ring-green-500 transition duration-300\"\r\n        type=\"text\" [(ngModel)]=\"searchText\" (input)=\"search()\"\r\n        placeholder=\"Recherchez des chansons, artistes, albums ou playlists\"/>\r\n      <button class=\"bg-green-500 hover:bg-green-600 text-white py-2 px-4 ml-2 rounded transition duration-300\"\r\n              (click)=\"search()\">Rechercher\r\n      </button>\r\n    </div>\r\n    <div class=\"grid grid-cols-3 gap-4\">\r\n      <div *ngFor=\"let album of albums\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <a [routerLink]=\"['/album', album.id]\">\r\n            <p class=\"text-gray-400\">Album</p>\r\n            <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\r\n            <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let artist of artists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <h5 class=\"text-lg font-semibold text-green-500\">\r\n            <p class=\"text-gray-400\">Artiste</p>\r\n            <a routerLink=\"/artist-details/{{ artist.id }}\">{{ artist.name }}</a>\r\n          </h5>\r\n          <div *ngFor=\"let album of artist.albums\">\r\n            <p class=\"text-gray-400\">{{ album.title }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngFor=\"let song of songs\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ song.title }}</h5>\r\n          <div *ngFor=\"let artist of song.artists\">\r\n            <p class=\"text-gray-400\">{{ artist.name }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let playlist of playlists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ playlist.title }}</h5>\r\n          <div *ngFor=\"let song of playlist.songs\">\r\n            <p class=\"text-gray-400\">{{ song.title }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {HttpClient} from '@angular/common/http';\r\nimport {Component} from '@angular/core';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\nimport {Router} from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent {\r\n  searchText: string = '';\r\n  searchQuery: string = 'title';\r\n  songs: any[] = [];\r\n  artists: any[] = [];\r\n  albums: any[] = [];\r\n  playlists: any[] = [];\r\n\r\n  constructor(private spotifyService: SpotifyService, private http: HttpClient, private router: Router) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.spotifyService.getAlbums().subscribe((data: any) => {\r\n      this.albums = Object.values(data);\r\n    });\r\n  }\r\n\r\n  search() {\r\n    // Appel à la méthode de recherche de chansons\r\n    this.spotifyService.searchSongs(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (songs):', response);\r\n      this.songs = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'artistes\r\n    this.spotifyService.searchArtists(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (artists):', response);\r\n      this.artists = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'albums\r\n    this.spotifyService.searchAlbums(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (albums):', response);\r\n      this.albums = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche de playlists\r\n    this.spotifyService.searchPlaylists(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (playlists):', response);\r\n      this.playlists = response;\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/702bbce5f1609a5691e3678476c67049e0231cfd557b749be004e91545c10d33.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/702bbce5f1609a5691e3678476c67049e0231cfd557b749be004e91545c10d33.json b/.angular/cache/15.2.5/babel-webpack/702bbce5f1609a5691e3678476c67049e0231cfd557b749be004e91545c10d33.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/702bbce5f1609a5691e3678476c67049e0231cfd557b749be004e91545c10d33.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/spotify.service\";\nexport class VideoPlayerComponent {\n  constructor(route, spotifyService) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n    this.videoUrl = '';\n  }\n  ngOnInit() {\n    // @ts-ignore\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.spotifyService.getSong(id).subscribe(data => {\n      this.song = data;\n      if (this.song) {\n        this.videoUrl = `https://www.youtube.com/watch?v=1hLIXrlpRe8`;\n        console.log(this.videoUrl);\n      }\n    });\n  }\n}\nVideoPlayerComponent.ɵfac = function VideoPlayerComponent_Factory(t) {\n  return new (t || VideoPlayerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService));\n};\nVideoPlayerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VideoPlayerComponent,\n  selectors: [[\"app-video-player\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [\"routerLink\", \"/\", 1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", \"mb-4\"], [1, \"bg-black\", \"rounded\", \"p-4\"], [\"controls\", \"\", 1, \"w-full\"], [\"type\", \"video/mp4\", 3, \"src\"]],\n  template: function VideoPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵtext(2, \"Retour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"video\", 3);\n      i0.ɵɵelement(5, \"source\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"src\", ctx.videoUrl, i0.ɵɵsanitizeUrl);\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,KAAqB,EACrBC,cAA8B;IAD9B,UAAK,GAALD,KAAK;IACL,mBAAc,GAAdC,cAAc;IAJxB,aAAQ,GAAW,EAAE;EAKlB;EAEHC,QAAQ;IACN;IACA,MAAMC,EAAE,GAAG,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAClD,IAAI,CAACL,cAAc,CAACM,OAAO,CAACJ,EAAE,CAAC,CAACK,SAAS,CAAEC,IAAS,IAAI;MACtD,IAAI,CAACC,IAAI,GAAGD,IAAI;MAChB,IAAI,IAAI,CAACC,IAAI,EAAE;QACb,IAAI,CAACC,QAAQ,GAAG,6CAA6C;QAC7DC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,QAAQ,CAAC;;IAE9B,CAAC,CAAC;EACJ;;AAnBWb,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVjCC,8BAAmC;MAC4CA,sBAAM;MAAAA,iBAAS;MAC5FA,8BAAkC;MAE9BA,4BAA0C;MAE5CA,iBAAQ;;;MAFEA,eAAgB;MAAhBA,oDAAgB","names":["VideoPlayerComponent","constructor","route","spotifyService","ngOnInit","id","snapshot","paramMap","get","getSong","subscribe","data","song","videoUrl","console","log","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.ts","C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-video-player',\r\n  templateUrl: './video-player.component.html',\r\n  styleUrls: ['./video-player.component.css']\r\n})\r\nexport class VideoPlayerComponent {\r\n  song: any;\r\n  videoUrl: string = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // @ts-ignore\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.spotifyService.getSong(id).subscribe((data: any) => {\r\n      this.song = data;\r\n      if (this.song) {\r\n        this.videoUrl = `https://www.youtube.com/watch?v=1hLIXrlpRe8`;\r\n        console.log(this.videoUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <video controls class=\"w-full\">\r\n      <source [src]=\"videoUrl\" type=\"video/mp4\">\r\n      <!--Votre navigateur ne prend pas en charge la vidéo.-->\r\n    </video>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/a9d87149e796f92aee5a4c17f35b7d47c568fd87e3265f8a67aa7f168e97ca60.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/a9d87149e796f92aee5a4c17f35b7d47c568fd87e3265f8a67aa7f168e97ca60.json b/.angular/cache/15.2.5/babel-webpack/a9d87149e796f92aee5a4c17f35b7d47c568fd87e3265f8a67aa7f168e97ca60.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/a9d87149e796f92aee5a4c17f35b7d47c568fd87e3265f8a67aa7f168e97ca60.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { catchError, from, map, Observable, takeWhile } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n    this.apiUrl_albums = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(query: string): Observable<any> {\r\n      return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(\r\n        map((response: any) => {\r\n            if (Array.isArray(response)) {\r\n              return response;\r\n            } else {\r\n              return [response];\r\n            }\r\n          }\r\n        ));\r\n    }*/\n  searchPlaylists(searchTerm) {\n    let id = 1;\n    const playlists = [];\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, {\n          params\n        }).pipe(map(response => {\n          if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n            playlists.push(response);\n          }\n          id++;\n          if (response.id) {\n            // continue the loop\n            getPlaylist();\n          } else {\n            observer.next(playlists);\n            observer.complete();\n          }\n        }), catchError(error => {\n          // stop the loop and return the playlists that have been fetched so far\n          observer.next(playlists);\n          observer.complete();\n          return [];\n        }), takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n      getPlaylist();\n    });\n  }\n  getArtistAlbums(artistName, page) {\n    let params = new HttpParams().set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get(this.apiUrl_albums, {\n      params\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","catchError","from","map","Observable","takeWhile","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","searchPlaylists","searchTerm","playlists","observer","getPlaylist","params","append","name","toLowerCase","includes","push","next","complete","error","subscribe","getArtistAlbums","artistName","page","set","toString","apiUrl_albums","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {catchError, from, map, Observable, takeWhile} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  private apiUrl_albums = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchAlbums(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n/*  searchPlaylists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }*/\n  searchPlaylists(searchTerm?: string): Observable<any> {\n    let id = 1;\n    const playlists: any[] = [];\n\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, { params }).pipe(\n          map((response: any) => {\n            if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n              playlists.push(response);\n            }\n            id++;\n            if (response.id) {\n              // continue the loop\n              getPlaylist();\n            } else {\n              observer.next(playlists);\n              observer.complete();\n            }\n          }),\n          catchError(error => {\n            // stop the loop and return the playlists that have been fetched so far\n            observer.next(playlists);\n            observer.complete();\n            return [];\n          }),\n          takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n\n      getPlaylist();\n    });\n  }\n\n  getArtistAlbums(artistName: string, page?: number): Observable<Album[]> {\n    let params = new HttpParams()\n      .set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get<Album[]>(this.apiUrl_albums, { params });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/b5fa5f69655981f88be82e29d815d35e99f7725618452f27d759dc720742bb44.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/b5fa5f69655981f88be82e29d815d35e99f7725618452f27d759dc720742bb44.json b/.angular/cache/15.2.5/babel-webpack/b5fa5f69655981f88be82e29d815d35e99f7725618452f27d759dc720742bb44.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/b5fa5f69655981f88be82e29d815d35e99f7725618452f27d759dc720742bb44.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/spotify.service\";\nimport * as i3 from \"@angular/platform-browser\";\nexport class VideoPlayerComponent {\n  constructor(route, spotifyService, sanitizer) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n    this.sanitizer = sanitizer;\n    this.videoUrl = '';\n  }\n  ngOnInit() {\n    // @ts-ignore\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.spotifyService.getSong(id).subscribe(data => {\n      this.song = data;\n      if (this.song && this.song.youtube) {\n        this.videoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.song.youtube.replace(\"watch?v=\", \"embed/\"));\n      }\n    });\n  }\n}\nVideoPlayerComponent.ɵfac = function VideoPlayerComponent_Factory(t) {\n  return new (t || VideoPlayerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService), i0.ɵɵdirectiveInject(i3.DomSanitizer));\n};\nVideoPlayerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VideoPlayerComponent,\n  selectors: [[\"app-video-player\"]],\n  decls: 7,\n  vars: 1,\n  consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [\"routerLink\", \"/\", 1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", \"mb-4\"], [1, \"bg-black\", \"rounded\", \"p-4\"], [\"controls\", \"\", 1, \"w-full\"], [\"type\", \"video/mp4\", 3, \"src\"]],\n  template: function VideoPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵtext(2, \"Retour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"video\", 3);\n      i0.ɵɵelement(5, \"source\", 4);\n      i0.ɵɵtext(6, \" Votre navigateur ne prend pas en charge la vid\\u00E9o. \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"src\", ctx.videoUrl, i0.ɵɵsanitizeUrl);\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAWA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,KAAqB,EACrBC,cAA8B,EAC9BC,SAAuB;IAFvB,UAAK,GAALF,KAAK;IACL,mBAAc,GAAdC,cAAc;IACd,cAAS,GAATC,SAAS;IALnB,aAAQ,GAAoB,EAAE;EAM1B;EAEJC,QAAQ;IACN;IACA,MAAMC,EAAE,GAAG,CAAC,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAClD,IAAI,CAACN,cAAc,CAACO,OAAO,CAACJ,EAAE,CAAC,CAACK,SAAS,CAAEC,IAAS,IAAI;MACtD,IAAI,CAACC,IAAI,GAAGD,IAAI;MAChB,IAAI,IAAI,CAACC,IAAI,IAAI,IAAI,CAACA,IAAI,CAACC,OAAO,EAAE;QAClC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACX,SAAS,CAACY,8BAA8B,CAAC,IAAI,CAACH,IAAI,CAACC,OAAO,CAACG,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;;IAElH,CAAC,CAAC;EACJ;;AAnBWjB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCLjCC,8BAAmC;MAC4CA,sBAAM;MAAAA,iBAAS;MAC5FA,8BAAkC;MAE9BA,4BAA0C;MAC1CA,wEACF;MAAAA,iBAAQ;;;MAFEA,eAAgB;MAAhBA,oDAAgB","names":["VideoPlayerComponent","constructor","route","spotifyService","sanitizer","ngOnInit","id","snapshot","paramMap","get","getSong","subscribe","data","song","youtube","videoUrl","bypassSecurityTrustResourceUrl","replace","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.ts","C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\nimport {DomSanitizer, SafeResourceUrl} from \"@angular/platform-browser\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-video-player',\r\n  templateUrl: './video-player.component.html',\r\n  styleUrls: ['./video-player.component.css']\r\n})\r\nexport class VideoPlayerComponent {\r\n  song: any;\r\n  videoUrl: SafeResourceUrl = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService,\r\n    private sanitizer: DomSanitizer\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // @ts-ignore\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.spotifyService.getSong(id).subscribe((data: any) => {\r\n      this.song = data;\r\n      if (this.song && this.song.youtube) {\r\n        this.videoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.song.youtube.replace(\"watch?v=\", \"embed/\"));\r\n      }\r\n    });\r\n  }\r\n}\r\n","<!--<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <iframe width=\"100%\" height=\"500\" [src]=\"videoUrl\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\r\n  </div>\r\n</div>-->\r\n<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <video controls class=\"w-full\">\r\n      <source [src]=\"videoUrl\" type=\"video/mp4\">\r\n      Votre navigateur ne prend pas en charge la vidéo.\r\n    </video>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/81ec3f521aabe53a10cc1eeab58e7a0cb10df5a5271a42345eaab3d6596ac457.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/81ec3f521aabe53a10cc1eeab58e7a0cb10df5a5271a42345eaab3d6596ac457.json b/.angular/cache/15.2.5/babel-webpack/81ec3f521aabe53a10cc1eeab58e7a0cb10df5a5271a42345eaab3d6596ac457.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/81ec3f521aabe53a10cc1eeab58e7a0cb10df5a5271a42345eaab3d6596ac457.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/spotify.service\";\nimport * as i3 from \"@angular/platform-browser\";\nexport class VideoPlayerComponent {\n  constructor(route, spotifyService, sanitizer) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n    this.sanitizer = sanitizer;\n    this.videoUrl = '';\n  }\n  ngOnInit() {\n    // @ts-ignore\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.spotifyService.getSong(id).subscribe(data => {\n      this.song = data;\n      if (this.song && this.song.youtube) {\n        this.videoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.song.youtube.replace(\"watch?v=\", \"embed/\"));\n      }\n    });\n  }\n}\nVideoPlayerComponent.ɵfac = function VideoPlayerComponent_Factory(t) {\n  return new (t || VideoPlayerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService), i0.ɵɵdirectiveInject(i3.DomSanitizer));\n};\nVideoPlayerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VideoPlayerComponent,\n  selectors: [[\"app-video-player\"]],\n  decls: 7,\n  vars: 1,\n  consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [\"routerLink\", \"/\", 1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", \"mb-4\"], [1, \"bg-black\", \"rounded\", \"p-4\"], [\"controls\", \"\", 1, \"w-full\"], [3, \"src\"]],\n  template: function VideoPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵtext(2, \"Retour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"video\", 3);\n      i0.ɵɵelement(5, \"source\", 4);\n      i0.ɵɵtext(6, \" Votre navigateur ne prend pas en charge la vid\\u00E9o. \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"src\", ctx.videoUrl, i0.ɵɵsanitizeUrl);\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAWA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,KAAqB,EACrBC,cAA8B,EAC9BC,SAAuB;IAFvB,UAAK,GAALF,KAAK;IACL,mBAAc,GAAdC,cAAc;IACd,cAAS,GAATC,SAAS;IALnB,aAAQ,GAAoB,EAAE;EAM1B;EAEJC,QAAQ;IACN;IACA,MAAMC,EAAE,GAAG,CAAC,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAClD,IAAI,CAACN,cAAc,CAACO,OAAO,CAACJ,EAAE,CAAC,CAACK,SAAS,CAAEC,IAAS,IAAI;MACtD,IAAI,CAACC,IAAI,GAAGD,IAAI;MAChB,IAAI,IAAI,CAACC,IAAI,IAAI,IAAI,CAACA,IAAI,CAACC,OAAO,EAAE;QAClC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACX,SAAS,CAACY,8BAA8B,CAAC,IAAI,CAACH,IAAI,CAACC,OAAO,CAACG,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;;IAElH,CAAC,CAAC;EACJ;;AAnBWjB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCLjCC,8BAAmC;MAC4CA,sBAAM;MAAAA,iBAAS;MAC5FA,8BAAkC;MAE9BA,4BAAyB;MACzBA,wEACF;MAAAA,iBAAQ;;;MAFEA,eAAgB;MAAhBA,oDAAgB","names":["VideoPlayerComponent","constructor","route","spotifyService","sanitizer","ngOnInit","id","snapshot","paramMap","get","getSong","subscribe","data","song","youtube","videoUrl","bypassSecurityTrustResourceUrl","replace","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.ts","C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\nimport {DomSanitizer, SafeResourceUrl} from \"@angular/platform-browser\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-video-player',\r\n  templateUrl: './video-player.component.html',\r\n  styleUrls: ['./video-player.component.css']\r\n})\r\nexport class VideoPlayerComponent {\r\n  song: any;\r\n  videoUrl: SafeResourceUrl = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService,\r\n    private sanitizer: DomSanitizer\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // @ts-ignore\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.spotifyService.getSong(id).subscribe((data: any) => {\r\n      this.song = data;\r\n      if (this.song && this.song.youtube) {\r\n        this.videoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.song.youtube.replace(\"watch?v=\", \"embed/\"));\r\n      }\r\n    });\r\n  }\r\n}\r\n","<!--<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <iframe width=\"100%\" height=\"500\" [src]=\"videoUrl\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\r\n  </div>\r\n</div>-->\r\n<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <video controls class=\"w-full\">\r\n      <source [src]=\"videoUrl\">\r\n      Votre navigateur ne prend pas en charge la vidéo.\r\n    </video>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/cfce23707d09ea635622b25580743d3e2ffee52f5b276b4c0bd99d1c3d2f4b38.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/cfce23707d09ea635622b25580743d3e2ffee52f5b276b4c0bd99d1c3d2f4b38.json b/.angular/cache/15.2.5/babel-webpack/cfce23707d09ea635622b25580743d3e2ffee52f5b276b4c0bd99d1c3d2f4b38.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/cfce23707d09ea635622b25580743d3e2ffee52f5b276b4c0bd99d1c3d2f4b38.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./header/header.component\";\nexport class AppComponent {\n  constructor(playlistService) {\n    this.playlistService = playlistService;\n    this.playlists = [];\n  }\n  ngOnInit() {\n    this.playlistService.getAllPlaylists().subscribe(playlists => {\n      this.playlists = playlists;\n    }, error => {\n      console.log('Error fetching playlists', error);\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 2,\n  vars: 0,\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-header\")(1, \"router-outlet\");\n    }\n  },\n  dependencies: [i2.RouterOutlet, i3.HeaderComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAQA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,eAA+B;IAA/B,oBAAe,GAAfA,eAAe;IAFnC,cAAS,GAAU,EAAE;EAEiC;EAEtDC,QAAQ;IACN,IAAI,CAACD,eAAe,CAACE,eAAe,EAAE,CAACC,SAAS,CAC7CC,SAAgB,IAAI;MACnB,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC5B,CAAC,EACAC,KAAU,IAAI;MACbC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,KAAK,CAAC;IAChD,CAAC,CACF;EACH;;AAdWP,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAU;EAAAC;EAAAC;EAAAC;IAAA;MCRzBC,6BAAyB","names":["AppComponent","constructor","playlistService","ngOnInit","getAllPlaylists","subscribe","playlists","error","console","log","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\app.component.ts","C:\\IUT\\spotizer\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport {SpotifyService} from \"./services/spotify.service\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  playlists: any[] = [];\r\n\r\n  constructor(private playlistService: SpotifyService) {}\r\n\r\n  ngOnInit() {\r\n    this.playlistService.getAllPlaylists().subscribe(\r\n      (playlists: any[]) => {\r\n        this.playlists = playlists;\r\n      },\r\n      (error: any) => {\r\n        console.log('Error fetching playlists', error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/db6cf4c6285956e5fc2c59cd274cae7ef8197e9b3bd49e70cc0bb1db2614c8b7.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/db6cf4c6285956e5fc2c59cd274cae7ef8197e9b3bd49e70cc0bb1db2614c8b7.json b/.angular/cache/15.2.5/babel-webpack/db6cf4c6285956e5fc2c59cd274cae7ef8197e9b3bd49e70cc0bb1db2614c8b7.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/db6cf4c6285956e5fc2c59cd274cae7ef8197e9b3bd49e70cc0bb1db2614c8b7.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { catchError, from, map, Observable, takeWhile } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n    this.apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(query: string): Observable<any> {\r\n      return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(\r\n        map((response: any) => {\r\n            if (Array.isArray(response)) {\r\n              return response;\r\n            } else {\r\n              return [response];\r\n            }\r\n          }\r\n        ));\r\n    }*/\n  getArtistAlbums(artistName, page) {\n    let params = new HttpParams().set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get(this.apiUrls, {\n      params\n    });\n  }\n  getAllPlaylists() {\n    let id = 1;\n    const playlists = [];\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        this.http.get(`${this.apiUrl}/playlists/${id}`).pipe(map(response => {\n          playlists.push(response);\n          id++;\n          if (response.id) {\n            getPlaylist();\n          } else {\n            observer.next(playlists);\n            observer.complete();\n          }\n        }), catchError(error => {\n          observer.next(playlists);\n          observer.complete();\n          return [];\n        }), takeWhile(() => id < 500)).subscribe();\n      };\n      getPlaylist();\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","catchError","from","map","Observable","takeWhile","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","getArtistAlbums","artistName","page","params","set","toString","apiUrls","getAllPlaylists","playlists","observer","getPlaylist","push","next","complete","error","subscribe","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {catchError, from, map, Observable, takeWhile} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  private apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchAlbums(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n/*  searchPlaylists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }*/\n\n\n  getArtistAlbums(artistName: string, page?: number): Observable<Album[]> {\n    let params = new HttpParams()\n      .set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get<Album[]>(this.apiUrls, { params });\n  }\n\n  getAllPlaylists(): Observable<any> {\n    let id = 1;\n    const playlists: any[] = [];\n\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        this.http.get(`${this.apiUrl}/playlists/${id}`).pipe(\n          map((response: any) => {\n            playlists.push(response);\n            id++;\n            if (response.id) {\n              getPlaylist();\n            } else {\n              observer.next(playlists);\n              observer.complete();\n            }\n          }),\n          catchError(error => {\n            observer.next(playlists);\n            observer.complete();\n            return [];\n          }),\n          takeWhile(() => id < 500)\n        ).subscribe();\n      };\n      getPlaylist();\n    });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/a0e83e52f909ccf62283b2176c3a5b34b0358733f138e7f3e956e5c4138db089.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/a0e83e52f909ccf62283b2176c3a5b34b0358733f138e7f3e956e5c4138db089.json b/.angular/cache/15.2.5/babel-webpack/a0e83e52f909ccf62283b2176c3a5b34b0358733f138e7f3e956e5c4138db089.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/a0e83e52f909ccf62283b2176c3a5b34b0358733f138e7f3e956e5c4138db089.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/spotify.service\";\nexport class VideoPlayerComponent {\n  constructor(route, spotifyService) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n    this.videoUrl = '';\n  }\n  ngOnInit() {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.spotifyService.getSong(id).subscribe(data => {\n      this.song = data;\n      if (this.song?.youtube) {\n        this.videoUrl = this.song.youtube.replace(\"watch?v=\", \"embed/\");\n      }\n    });\n  }\n}\nVideoPlayerComponent.ɵfac = function VideoPlayerComponent_Factory(t) {\n  return new (t || VideoPlayerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService));\n};\nVideoPlayerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VideoPlayerComponent,\n  selectors: [[\"app-video-player\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [\"routerLink\", \"/\", 1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", \"mb-4\"], [1, \"bg-black\", \"rounded\", \"p-4\"], [\"width\", \"100%\", \"height\", \"500\", \"frameborder\", \"0\", \"allow\", \"autoplay; encrypted-media\", \"allowfullscreen\", \"\", 3, \"src\"]],\n  template: function VideoPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵtext(2, \"Retour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelement(4, \"iframe\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"src\", ctx.videoUrl, i0.ɵɵsanitizeResourceUrl);\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,KAAqB,EACrBC,cAA8B;IAD9B,UAAK,GAALD,KAAK;IACL,mBAAc,GAAdC,cAAc;IAJxB,aAAQ,GAAW,EAAE;EAMrB;EAEAC,QAAQ;IACN,MAAMC,EAAE,GAAG,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAClD,IAAI,CAACL,cAAc,CAACM,OAAO,CAACJ,EAAE,CAAC,CAACK,SAAS,CAAEC,IAAS,IAAI;MACtD,IAAI,CAACC,IAAI,GAAGD,IAAI;MAChB,IAAI,IAAI,CAACC,IAAI,EAAEC,OAAO,EAAE;QACtB,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACF,IAAI,CAACC,OAAO,CAACE,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC;;IAEnE,CAAC,CAAC;EACJ;;AAlBWf,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVjCC,8BAAmC;MAC4CA,sBAAM;MAAAA,iBAAS;MAC5FA,8BAAkC;MAChCA,4BAA8H;MAChIA,iBAAM;;;MAD8BA,eAAgB;MAAhBA,4DAAgB","names":["VideoPlayerComponent","constructor","route","spotifyService","ngOnInit","id","snapshot","paramMap","get","getSong","subscribe","data","song","youtube","videoUrl","replace","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.ts","C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-video-player',\r\n  templateUrl: './video-player.component.html',\r\n  styleUrls: ['./video-player.component.css']\r\n})\r\nexport class VideoPlayerComponent {\r\n  song: any;\r\n  videoUrl: string = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.spotifyService.getSong(id).subscribe((data: any) => {\r\n      this.song = data;\r\n      if (this.song?.youtube) {\r\n        this.videoUrl = this.song.youtube.replace(\"watch?v=\", \"embed/\");\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <iframe width=\"100%\" height=\"500\" [src]=\"videoUrl\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/faad120cc753de43bc37f8b2a73a1baaa47c838376a3775941c175f17343b763.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/faad120cc753de43bc37f8b2a73a1baaa47c838376a3775941c175f17343b763.json b/.angular/cache/15.2.5/babel-webpack/faad120cc753de43bc37f8b2a73a1baaa47c838376a3775941c175f17343b763.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/faad120cc753de43bc37f8b2a73a1baaa47c838376a3775941c175f17343b763.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { from, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n    this.apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    console.log('Search query:', query); // Ajout de l'instruction console.log\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(query: string): Observable<any> {\r\n      return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(\r\n        map((response: any) => {\r\n            if (Array.isArray(response)) {\r\n              return response;\r\n            } else {\r\n              return [response];\r\n            }\r\n          }\r\n        ));\r\n    }*/\n  searchPlaylists(keyword) {\n    const url = `${this.apiUrl}/playlists/${keyword}`;\n    return this.http.get(url);\n  }\n  getArtistAlbums(artistName, page) {\n    let params = new HttpParams().set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get(this.apiUrls, {\n      params\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAoBA,UAAU,QAAO,sBAAsB;AAC3D,SAAQC,IAAI,EAAEC,GAAG,QAAmB,MAAM;;;AAK1C,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,WAAM,GAAG,0DAA0D;IACnE,YAAO,GAAG,iEAAiE;EAGnF;EAEAC,SAAS;IACP,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,SAAS,CAAC;EAC/C;EAEAC,QAAQ,CAACC,EAAU;IACjB,OAAOT,IAAI,CACTU,KAAK,CAAC,GAAG,IAAI,CAACH,MAAM,WAAWE,EAAE,EAAE,CAAC,CACjCE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACrC;EACH;EACAC,OAAO,CAACL,EAAU;IAChB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,UAAUE,EAAE,EAAE,CAAC;EACpD;EAGAM,WAAW,CAACC,KAAa;IACvB,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,gBAAgBS,KAAK,EAAE,CAAC,CAACC,IAAI,CAC9DhB,GAAG,CAAEW,QAAa,IAAI;MACpB,IAAIM,KAAK,CAACC,OAAO,CAACP,QAAQ,CAAC,EAAE;QAC3B,OAAOA,QAAQ;OAChB,MAAM;QACL,OAAO,CAACA,QAAQ,CAAC;;IAErB,CAAC,CAAC,CACH;EACH;EAEAQ,aAAa,CAACJ,KAAa;IACzB,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,iBAAiBS,KAAK,EAAE,CAAC,CAACC,IAAI,CAC/DhB,GAAG,CAAEW,QAAa,IAAI;MACpB,IAAIM,KAAK,CAACC,OAAO,CAACP,QAAQ,CAAC,EAAE;QAC3B,OAAOA,QAAQ;OAChB,MAAM;QACL,OAAO,CAACA,QAAQ,CAAC;;IAErB,CAAC,CAAC,CACH;EACH;EAGAS,YAAY,CAACL,KAAa;IACxBM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEP,KAAK,CAAC,CAAC,CAAC;IACrC,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,iBAAiBS,KAAK,EAAE,CAAC,CAACC,IAAI,CAC/DhB,GAAG,CAAEW,QAAa,IAAI;MAClB,IAAIM,KAAK,CAACC,OAAO,CAACP,QAAQ,CAAC,EAAE;QAC3B,OAAOA,QAAQ;OAChB,MAAM;QACL,OAAO,CAACA,QAAQ,CAAC;;IAErB,CAAC,CACF,CAAC;EACN;EAEF;;;;;;;;;;;EAWEY,eAAe,CAACC,OAAe;IAC7B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACnB,MAAM,cAAckB,OAAO,EAAE;IACjD,OAAO,IAAI,CAACrB,IAAI,CAACE,GAAG,CAAaoB,GAAG,CAAC;EACvC;EAEAC,eAAe,CAACC,UAAkB,EAAEC,IAAa;IAC/C,IAAIC,MAAM,GAAG,IAAI/B,UAAU,EAAE,CAC1BgC,GAAG,CAAC,aAAa,EAAEH,UAAU,CAAC;IACjC,IAAIC,IAAI,EAAE;MACRC,MAAM,GAAGA,MAAM,CAACC,GAAG,CAAC,MAAM,EAAEF,IAAI,CAACG,QAAQ,EAAE,CAAC;;IAE9C,OAAO,IAAI,CAAC5B,IAAI,CAACE,GAAG,CAAU,IAAI,CAAC2B,OAAO,EAAE;MAAEH;IAAM,CAAE,CAAC;EACzD;;AApFW5B,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAgC,SAAdhC,cAAc;EAAAiC,YAFb;AAAM","names":["HttpParams","from","map","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","console","log","searchPlaylists","keyword","url","getArtistAlbums","artistName","page","params","set","toString","apiUrls","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {from, map, Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  private apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n\n  searchAlbums(query: string): Observable<any> {\n    console.log('Search query:', query); // Ajout de l'instruction console.log\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n/*  searchPlaylists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }*/\n  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists/${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }\n\n  getArtistAlbums(artistName: string, page?: number): Observable<Album[]> {\n    let params = new HttpParams()\n      .set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get<Album[]>(this.apiUrls, { params });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/78936b84543f33c68255c299cb6227001d773deec8664a77d66748d4d2f41e77.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/78936b84543f33c68255c299cb6227001d773deec8664a77d66748d4d2f41e77.json b/.angular/cache/15.2.5/babel-webpack/78936b84543f33c68255c299cb6227001d773deec8664a77d66748d4d2f41e77.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/78936b84543f33c68255c299cb6227001d773deec8664a77d66748d4d2f41e77.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/spotify.service\";\nimport * as i3 from \"@angular/youtube-player\";\nexport class VideoPlayerComponent {\n  constructor(route, spotifyService) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n    this.videoUrl = '';\n    this.videoId = '1hLIXrlpRe8';\n  }\n  onPlayerReady(event) {\n    event.target.playVideo();\n  }\n  onPlayerStateChange(event) {}\n}\nVideoPlayerComponent.ɵfac = function VideoPlayerComponent_Factory(t) {\n  return new (t || VideoPlayerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService));\n};\nVideoPlayerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VideoPlayerComponent,\n  selectors: [[\"app-video-player\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [\"routerLink\", \"/\", 1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", \"mb-4\"], [1, \"bg-black\", \"rounded\", \"p-4\"], [\"suggestedQuality\", \"highres\", 3, \"videoId\", \"ready\", \"stateChange\"]],\n  template: function VideoPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵtext(2, \"Retour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"youtube-player\", 3);\n      i0.ɵɵlistener(\"ready\", function VideoPlayerComponent_Template_youtube_player_ready_4_listener($event) {\n        return ctx.onPlayerReady($event);\n      })(\"stateChange\", function VideoPlayerComponent_Template_youtube_player_stateChange_4_listener($event) {\n        return ctx.onPlayerStateChange($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"videoId\", ctx.videoId);\n    }\n  },\n  dependencies: [i1.RouterLink, i3.YouTubePlayer],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAUA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,KAAqB,EACrBC,cAA8B;IAD9B,UAAK,GAALD,KAAK;IACL,mBAAc,GAAdC,cAAc;IAJxB,aAAQ,GAAW,EAAE;IAOrB,YAAO,GAAG,aAAa;EAFpB;EAIHC,aAAa,CAACC,KAAU;IACtBA,KAAK,CAACC,MAAM,CAACC,SAAS,EAAE;EAC1B;EAEAC,mBAAmB,CAACH,KAAU,GAAG;;AAftBL,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAS;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVjCC,8BAAmC;MAC4CA,sBAAM;MAAAA,iBAAS;MAC5FA,8BAAkC;MAI9BA;QAAA,OAASC,yBAAqB;MAAA,EAAC;QAAA,OAChBA,+BAA2B;MAAA,EADX;MAEhCD,iBAAiB;;;MAJhBA,eAAmB;MAAnBA,qCAAmB","names":["VideoPlayerComponent","constructor","route","spotifyService","onPlayerReady","event","target","playVideo","onPlayerStateChange","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.ts","C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-video-player',\r\n  templateUrl: './video-player.component.html',\r\n  styleUrls: ['./video-player.component.css']\r\n})\r\nexport class VideoPlayerComponent {\r\n  song: any;\r\n  videoUrl: string = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService\r\n  ) {}\r\n\r\n  videoId = '1hLIXrlpRe8';\r\n\r\n  onPlayerReady(event: any) {\r\n    event.target.playVideo();\r\n  }\r\n\r\n  onPlayerStateChange(event: any) {}\r\n}\r\n","<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <youtube-player\r\n      [videoId]=\"videoId\"\r\n      suggestedQuality=\"highres\"\r\n      (ready)=\"onPlayerReady($event)\"\r\n      (stateChange)=\"onPlayerStateChange($event)\"\r\n    ></youtube-player>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/d27fb4785970440aca76d6c94cc88d8be22f7487f2e06a5403b3fb493282b8f2.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/d27fb4785970440aca76d6c94cc88d8be22f7487f2e06a5403b3fb493282b8f2.json b/.angular/cache/15.2.5/babel-webpack/d27fb4785970440aca76d6c94cc88d8be22f7487f2e06a5403b3fb493282b8f2.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/d27fb4785970440aca76d6c94cc88d8be22f7487f2e06a5403b3fb493282b8f2.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction AppComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const playlist_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(playlist_r1.name);\n  }\n}\nexport class AppComponent {\n  constructor() {\n    this.title = 'Spotizer';\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 4,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"All Playlists\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"ul\");\n      i0.ɵɵtemplate(3, AppComponent_li_3_Template, 2, 1, \"li\", 0);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.playlists);\n    }\n  },\n  dependencies: [i1.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;IAOMA,0BAAuC;IAAAA,YAAmB;IAAAA,iBAAK;;;;IAAxBA,eAAmB;IAAnBA,sCAAmB;;;AAKhE,OAAM,MAAOC,YAAY;EAVzBC;IAWE,UAAK,GAAG,UAAU;;;AADPD,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAE;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MAPrBP,0BAAI;MAAAA,6BAAa;MAAAA,iBAAK;MACtBA,0BAAI;MACFA,2DAA+D;MACjEA,iBAAK;;;MADsBA,eAAY;MAAZA,uCAAY","names":["i0","AppComponent","constructor","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `\r\n    <h1>All Playlists</h1>\r\n    <ul>\r\n      <li *ngFor=\"let playlist of playlists\">{{ playlist.name }}</li>\r\n    </ul>\r\n  `,\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Spotizer';\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/3266ceb174141ce6cc9513e2e13375b65a37877847b69edec1ad27f8e8399bf3.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/3266ceb174141ce6cc9513e2e13375b65a37877847b69edec1ad27f8e8399bf3.json b/.angular/cache/15.2.5/babel-webpack/3266ceb174141ce6cc9513e2e13375b65a37877847b69edec1ad27f8e8399bf3.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/3266ceb174141ce6cc9513e2e13375b65a37877847b69edec1ad27f8e8399bf3.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/spotify.service\";\nexport class VideoPlayerComponent {\n  constructor(route, spotifyService) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n    this.videoUrl = '';\n    this.videoId = '1hLIXrlpRe8';\n  }\n  onPlayerReady(event) {\n    event.target.playVideo();\n  }\n  onPlayerStateChange(event) {}\n}\nVideoPlayerComponent.ɵfac = function VideoPlayerComponent_Factory(t) {\n  return new (t || VideoPlayerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService));\n};\nVideoPlayerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VideoPlayerComponent,\n  selectors: [[\"app-video-player\"]],\n  decls: 5,\n  vars: 0,\n  consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [\"routerLink\", \"/\", 1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", \"mb-4\"], [1, \"bg-black\", \"rounded\", \"p-4\"], [\"width\", \"100%\", \"height\", \"315\", \"src\", \"https://www.youtube.com/embed/1hLIXrlpRe8\", \"frameborder\", \"0\", \"allowfullscreen\", \"\"]],\n  template: function VideoPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵtext(2, \"Retour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelement(4, \"iframe\", 3);\n      i0.ɵɵelementEnd()();\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,KAAqB,EACrBC,cAA8B;IAD9B,UAAK,GAALD,KAAK;IACL,mBAAc,GAAdC,cAAc;IAJxB,aAAQ,GAAW,EAAE;IAOrB,YAAO,GAAG,aAAa;EAFpB;EAIHC,aAAa,CAACC,KAAU;IACtBA,KAAK,CAACC,MAAM,CAACC,SAAS,EAAE;EAC1B;EAEAC,mBAAmB,CAACH,KAAU,GAAG;;AAftBL,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAS;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVjCC,8BAAmC;MAC4CA,sBAAM;MAAAA,iBAAS;MAC5FA,8BAAkC;MAChCA,4BAA2H;MAC7HA,iBAAM","names":["VideoPlayerComponent","constructor","route","spotifyService","onPlayerReady","event","target","playVideo","onPlayerStateChange","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.ts","C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-video-player',\r\n  templateUrl: './video-player.component.html',\r\n  styleUrls: ['./video-player.component.css']\r\n})\r\nexport class VideoPlayerComponent {\r\n  song: any;\r\n  videoUrl: string = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService\r\n  ) {}\r\n\r\n  videoId = '1hLIXrlpRe8';\r\n\r\n  onPlayerReady(event: any) {\r\n    event.target.playVideo();\r\n  }\r\n\r\n  onPlayerStateChange(event: any) {}\r\n}\r\n","<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <iframe width=\"100%\" height=\"315\" src=\"https://www.youtube.com/embed/1hLIXrlpRe8\" frameborder=\"0\" allowfullscreen></iframe>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/b1ebf17ce489e168affe61bb7525a86569643ece0c96f77e441fb98c2e7f43b8.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/b1ebf17ce489e168affe61bb7525a86569643ece0c96f77e441fb98c2e7f43b8.json b/.angular/cache/15.2.5/babel-webpack/b1ebf17ce489e168affe61bb7525a86569643ece0c96f77e441fb98c2e7f43b8.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/b1ebf17ce489e168affe61bb7525a86569643ece0c96f77e441fb98c2e7f43b8.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/spotify.service\";\nimport * as i3 from \"@angular/youtube-player\";\nexport class VideoPlayerComponent {\n  constructor(route, spotifyService) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n    this.videoUrl = '';\n  }\n  ngOnInit() {\n    // @ts-ignore\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.spotifyService.getSong(id).subscribe(data => {\n      this.song = data;\n      if (this.song) {\n        this.videoUrl = `https://www.youtube.com/watch?v=1hLIXrlpRe8`;\n        console.log(this.videoUrl);\n      }\n    });\n  }\n}\nVideoPlayerComponent.ɵfac = function VideoPlayerComponent_Factory(t) {\n  return new (t || VideoPlayerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService));\n};\nVideoPlayerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VideoPlayerComponent,\n  selectors: [[\"app-video-player\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [\"routerLink\", \"/\", 1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", \"mb-4\"], [1, \"bg-black\", \"rounded\", \"p-4\"], [\"suggestedQuality\", \"highres\", 3, \"videoId\", \"ready\", \"stateChange\"]],\n  template: function VideoPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵtext(2, \"Retour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"youtube-player\", 3);\n      i0.ɵɵlistener(\"ready\", function VideoPlayerComponent_Template_youtube_player_ready_4_listener($event) {\n        return ctx.onPlayerReady($event);\n      })(\"stateChange\", function VideoPlayerComponent_Template_youtube_player_stateChange_4_listener($event) {\n        return ctx.onPlayerStateChange($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"videoId\", ctx.videoId);\n    }\n  },\n  dependencies: [i1.RouterLink, i3.YouTubePlayer],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAUA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,KAAqB,EACrBC,cAA8B;IAD9B,UAAK,GAALD,KAAK;IACL,mBAAc,GAAdC,cAAc;IAJxB,aAAQ,GAAW,EAAE;EAKlB;EAEHC,QAAQ;IACN;IACA,MAAMC,EAAE,GAAG,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAClD,IAAI,CAACL,cAAc,CAACM,OAAO,CAACJ,EAAE,CAAC,CAACK,SAAS,CAAEC,IAAS,IAAI;MACtD,IAAI,CAACC,IAAI,GAAGD,IAAI;MAChB,IAAI,IAAI,CAACC,IAAI,EAAE;QACb,IAAI,CAACC,QAAQ,GAAG,6CAA6C;QAC7DC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,QAAQ,CAAC;;IAE9B,CAAC,CAAC;EACJ;;AAnBWb,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVjCC,8BAAmC;MAC4CA,sBAAM;MAAAA,iBAAS;MAC5FA,8BAAkC;MAI9BA;QAAA,OAASC,yBAAqB;MAAA,EAAC;QAAA,OAChBA,+BAA2B;MAAA,EADX;MAEhCD,iBAAiB;;;MAJhBA,eAAmB;MAAnBA,qCAAmB","names":["VideoPlayerComponent","constructor","route","spotifyService","ngOnInit","id","snapshot","paramMap","get","getSong","subscribe","data","song","videoUrl","console","log","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.ts","C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-video-player',\r\n  templateUrl: './video-player.component.html',\r\n  styleUrls: ['./video-player.component.css']\r\n})\r\nexport class VideoPlayerComponent {\r\n  song: any;\r\n  videoUrl: string = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // @ts-ignore\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.spotifyService.getSong(id).subscribe((data: any) => {\r\n      this.song = data;\r\n      if (this.song) {\r\n        this.videoUrl = `https://www.youtube.com/watch?v=1hLIXrlpRe8`;\r\n        console.log(this.videoUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <youtube-player\r\n      [videoId]=\"videoId\"\r\n      suggestedQuality=\"highres\"\r\n      (ready)=\"onPlayerReady($event)\"\r\n      (stateChange)=\"onPlayerStateChange($event)\"\r\n    ></youtube-player>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/490124f33bb9a0d7abdfc5df3549bf8f5ad2eda4be7f1d981953b0673e4b9be4.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/490124f33bb9a0d7abdfc5df3549bf8f5ad2eda4be7f1d981953b0673e4b9be4.json b/.angular/cache/15.2.5/babel-webpack/490124f33bb9a0d7abdfc5df3549bf8f5ad2eda4be7f1d981953b0673e4b9be4.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/490124f33bb9a0d7abdfc5df3549bf8f5ad2eda4be7f1d981953b0673e4b9be4.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/spotify.service\";\nimport * as i3 from \"@angular/platform-browser\";\nexport class VideoPlayerComponent {\n  constructor(route, spotifyService, sanitizer) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n    this.sanitizer = sanitizer;\n    this.videoUrl = '';\n  }\n  ngOnInit() {\n    // @ts-ignore\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.spotifyService.getSong(id).subscribe(data => {\n      this.song = data;\n      if (this.song && this.song.youtube) {\n        this.videoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.song.youtube.replace(\"watch?v=\", \"embed/\"));\n      }\n    });\n  }\n}\nVideoPlayerComponent.ɵfac = function VideoPlayerComponent_Factory(t) {\n  return new (t || VideoPlayerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService), i0.ɵɵdirectiveInject(i3.DomSanitizer));\n};\nVideoPlayerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VideoPlayerComponent,\n  selectors: [[\"app-video-player\"]],\n  decls: 7,\n  vars: 1,\n  consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [\"routerLink\", \"/\", 1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", \"mb-4\"], [1, \"bg-black\", \"rounded\", \"p-4\"], [\"controls\", \"\", 1, \"w-full\"], [\"width\", \"100%\", \"height\", \"500\", \"frameborder\", \"0\", \"allow\", \"autoplay; encrypted-media\", \"allowfullscreen\", \"\", 3, \"src\"]],\n  template: function VideoPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵtext(2, \"Retour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"video\", 3);\n      i0.ɵɵelement(5, \"iframe\", 4);\n      i0.ɵɵtext(6, \" Votre navigateur ne prend pas en charge la vid\\u00E9o. \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"src\", ctx.videoUrl, i0.ɵɵsanitizeResourceUrl);\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAWA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,KAAqB,EACrBC,cAA8B,EAC9BC,SAAuB;IAFvB,UAAK,GAALF,KAAK;IACL,mBAAc,GAAdC,cAAc;IACd,cAAS,GAATC,SAAS;IALnB,aAAQ,GAAoB,EAAE;EAM1B;EAEJC,QAAQ;IACN;IACA,MAAMC,EAAE,GAAG,CAAC,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAClD,IAAI,CAACN,cAAc,CAACO,OAAO,CAACJ,EAAE,CAAC,CAACK,SAAS,CAAEC,IAAS,IAAI;MACtD,IAAI,CAACC,IAAI,GAAGD,IAAI;MAChB,IAAI,IAAI,CAACC,IAAI,IAAI,IAAI,CAACA,IAAI,CAACC,OAAO,EAAE;QAClC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACX,SAAS,CAACY,8BAA8B,CAAC,IAAI,CAACH,IAAI,CAACC,OAAO,CAACG,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;;IAElH,CAAC,CAAC;EACJ;;AAnBWjB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCLjCC,8BAAmC;MAC4CA,sBAAM;MAAAA,iBAAS;MAC5FA,8BAAkC;MAE9BA,4BAA8H;MAC9HA,wEACF;MAAAA,iBAAQ;;;MAF4BA,eAAgB;MAAhBA,4DAAgB","names":["VideoPlayerComponent","constructor","route","spotifyService","sanitizer","ngOnInit","id","snapshot","paramMap","get","getSong","subscribe","data","song","youtube","videoUrl","bypassSecurityTrustResourceUrl","replace","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.ts","C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\nimport {DomSanitizer, SafeResourceUrl} from \"@angular/platform-browser\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-video-player',\r\n  templateUrl: './video-player.component.html',\r\n  styleUrls: ['./video-player.component.css']\r\n})\r\nexport class VideoPlayerComponent {\r\n  song: any;\r\n  videoUrl: SafeResourceUrl = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService,\r\n    private sanitizer: DomSanitizer\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // @ts-ignore\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.spotifyService.getSong(id).subscribe((data: any) => {\r\n      this.song = data;\r\n      if (this.song && this.song.youtube) {\r\n        this.videoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.song.youtube.replace(\"watch?v=\", \"embed/\"));\r\n      }\r\n    });\r\n  }\r\n}\r\n","<!--<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <iframe width=\"100%\" height=\"500\" [src]=\"videoUrl\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\r\n  </div>\r\n</div>-->\r\n<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <video controls class=\"w-full\">\r\n      <iframe width=\"100%\" height=\"500\" [src]=\"videoUrl\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\r\n      Votre navigateur ne prend pas en charge la vidéo.\r\n    </video>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/335f07cbcd8a973c00ab97b15de6f7a77a528905f5ce6a338e1eeee3b5119e40.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/335f07cbcd8a973c00ab97b15de6f7a77a528905f5ce6a338e1eeee3b5119e40.json b/.angular/cache/15.2.5/babel-webpack/335f07cbcd8a973c00ab97b15de6f7a77a528905f5ce6a338e1eeee3b5119e40.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/335f07cbcd8a973c00ab97b15de6f7a77a528905f5ce6a338e1eeee3b5119e40.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/spotify.service\";\nexport class VideoPlayerComponent {\n  constructor(route, spotifyService) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n    this.videoUrl = '';\n  }\n  ngOnInit() {\n    // @ts-ignore\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.spotifyService.getSong(id).subscribe(data => {\n      this.song = data;\n      if (this.song) {\n        this.videoUrl = `https://www.youtube.com/watch?v=1hLIXrlpRe8`;\n        console.log(this.videoUrl);\n      }\n    });\n  }\n}\nVideoPlayerComponent.ɵfac = function VideoPlayerComponent_Factory(t) {\n  return new (t || VideoPlayerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService));\n};\nVideoPlayerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VideoPlayerComponent,\n  selectors: [[\"app-video-player\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [\"routerLink\", \"/\", 1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", \"mb-4\"], [1, \"bg-black\", \"rounded\", \"p-4\"], [\"controls\", \"\", 1, \"w-full\"], [\"type\", \"video/mp4\", 3, \"src\"]],\n  template: function VideoPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵtext(2, \"Retour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"video\", 3);\n      i0.ɵɵelement(5, \"source\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"src\", ctx.videoUrl, i0.ɵɵsanitizeUrl);\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,KAAqB,EACrBC,cAA8B;IAD9B,UAAK,GAALD,KAAK;IACL,mBAAc,GAAdC,cAAc;IAJxB,aAAQ,GAAW,EAAE;EAKlB;EAEHC,QAAQ;IACN;IACA,MAAMC,EAAE,GAAG,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAClD,IAAI,CAACL,cAAc,CAACM,OAAO,CAACJ,EAAE,CAAC,CAACK,SAAS,CAAEC,IAAS,IAAI;MACtD,IAAI,CAACC,IAAI,GAAGD,IAAI;MAChB,IAAI,IAAI,CAACC,IAAI,EAAE;QACb,IAAI,CAACC,QAAQ,GAAG,6CAA6C;QAC7DC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,QAAQ,CAAC;;IAE9B,CAAC,CAAC;EACJ;;AAnBWb,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTjCC,8BAAmC;MAC4CA,sBAAM;MAAAA,iBAAS;MAC5FA,8BAAkC;MAE9BA,4BAA0C;MAE5CA,iBAAQ;;;MAFEA,eAAgB;MAAhBA,oDAAgB","names":["VideoPlayerComponent","constructor","route","spotifyService","ngOnInit","id","snapshot","paramMap","get","getSong","subscribe","data","song","videoUrl","console","log","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.ts","C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\n\r\n@Component({\r\n  selector: 'app-video-player',\r\n  templateUrl: './video-player.component.html',\r\n  styleUrls: ['./video-player.component.css']\r\n})\r\nexport class VideoPlayerComponent {\r\n  song: any;\r\n  videoUrl: string = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // @ts-ignore\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.spotifyService.getSong(id).subscribe((data: any) => {\r\n      this.song = data;\r\n      if (this.song) {\r\n        this.videoUrl = `https://www.youtube.com/watch?v=1hLIXrlpRe8`;\r\n        console.log(this.videoUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <video controls class=\"w-full\">\r\n      <source [src]=\"videoUrl\" type=\"video/mp4\">\r\n      <!--Votre navigateur ne prend pas en charge la vidéo.-->\r\n    </video>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/bea099ddd7523da0634ccfd4dc285431b503ccc6b76d1eb66fc4987a42c5cad4.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/bea099ddd7523da0634ccfd4dc285431b503ccc6b76d1eb66fc4987a42c5cad4.json b/.angular/cache/15.2.5/babel-webpack/bea099ddd7523da0634ccfd4dc285431b503ccc6b76d1eb66fc4987a42c5cad4.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/bea099ddd7523da0634ccfd4dc285431b503ccc6b76d1eb66fc4987a42c5cad4.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = function (a1) {\n  return [\"/album\", a1];\n};\nfunction SearchComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"a\", 9);\n    i0.ɵɵelement(3, \"img\", 10);\n    i0.ɵɵelementStart(4, \"h5\", 11);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const album_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, album_r4.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r4.title);\n    i0.ɵɵproperty(\"src\", album_r4.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"tite\", album_r4.title, \"\");\n  }\n}\nfunction SearchComponent_div_10_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const album_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r7.title);\n  }\n}\nfunction SearchComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"h5\", 11)(3, \"a\", 9);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(5, SearchComponent_div_10_div_5_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const artist_r5 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/artist-details/\", artist_r5.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(artist_r5.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", artist_r5.albums);\n  }\n}\nfunction SearchComponent_div_11_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const artist_r10 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(artist_r10.name);\n  }\n}\nfunction SearchComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"h5\", 11);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, SearchComponent_div_11_div_4_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const song_r8 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(song_r8.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", song_r8.artists);\n  }\n}\nfunction SearchComponent_div_12_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const song_r13 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(song_r13.title);\n  }\n}\nfunction SearchComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"h5\", 11);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, SearchComponent_div_12_div_4_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const playlist_r11 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(playlist_r11.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", playlist_r11.songs);\n  }\n}\nexport class SearchComponent {\n  constructor(spotifyService, http, router) {\n    this.spotifyService = spotifyService;\n    this.http = http;\n    this.router = router;\n    this.searchText = '';\n    this.searchQuery = 'title';\n    this.songs = [];\n    this.artists = [];\n    this.albums = [];\n    this.playlists = [];\n  }\n  ngOnInit() {\n    this.spotifyService.getAlbums().subscribe(data => {\n      this.albums = Object.values(data);\n    });\n  }\n  search() {\n    // Appel à la méthode de recherche de chansons\n    this.spotifyService.searchSongs(this.searchText).subscribe(response => {\n      console.log('Search response (songs):', response);\n      this.songs = response;\n    });\n    // Appel à la méthode de recherche d'artistes\n    this.spotifyService.searchArtists(this.searchText).subscribe(response => {\n      console.log('Search response (artists):', response);\n      this.artists = response;\n    });\n    // Appel à la méthode de recherche d'albums\n    this.spotifyService.searchAlbums(this.searchText).subscribe(response => {\n      console.log('Search response (albums):', response);\n      this.albums = response;\n    });\n    // Appel à la méthode de recherche de playlists\n    this.spotifyService.searchPlaylists(this.searchText).subscribe(response => {\n      console.log('Search response (playlists):', response);\n      this.playlists = response;\n    });\n  }\n}\nSearchComponent.ɵfac = function SearchComponent_Factory(t) {\n  return new (t || SearchComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchComponent,\n  selectors: [[\"app-search\"]],\n  decls: 13,\n  vars: 5,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-3xl\", \"font-semibold\", \"text-green-500\", \"mb-4\"], [1, \"flex\", \"items-center\", \"mb-5\"], [\"type\", \"text\", \"placeholder\", \"Recherchez des chansons, artistes, albums ou playlists\", 1, \"bg-gray-200\", \"text-gray-800\", \"p-2\", \"rounded\", \"w-full\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-green-500\", \"transition\", \"duration-300\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [1, \"bg-green-500\", \"hover:bg-green-600\", \"text-white\", \"py-2\", \"px-4\", \"ml-2\", \"rounded\", \"transition\", \"duration-300\", 3, \"click\"], [1, \"grid\", \"grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [3, \"routerLink\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"], [1, \"text-gray-400\"]],\n  template: function SearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Spotify Clone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function SearchComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.searchText = $event;\n      })(\"input\", function SearchComponent_Template_input_input_5_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function SearchComponent_Template_button_click_6_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵtext(7, \"Rechercher \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵtemplate(9, SearchComponent_div_9_Template, 6, 6, \"div\", 7);\n      i0.ɵɵtemplate(10, SearchComponent_div_10_Template, 6, 3, \"div\", 7);\n      i0.ɵɵtemplate(11, SearchComponent_div_11_Template, 5, 2, \"div\", 7);\n      i0.ɵɵtemplate(12, SearchComponent_div_12_Template, 5, 2, \"div\", 7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchText);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.artists);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.songs);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.playlists);\n    }\n  },\n  dependencies: [i4.NgForOf, i3.RouterLink, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","SearchComponent","constructor","spotifyService","http","router","ngOnInit","getAlbums","subscribe","data","albums","Object","values","search","searchSongs","searchText","response","console","log","songs","searchArtists","artists","searchAlbums","searchPlaylists","playlists","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\search\\search.component.html","C:\\IUT\\spotizer\\src\\app\\search\\search.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\r\n  <div class=\"container mx-auto p-4\">\r\n    <h1 class=\"text-3xl font-semibold text-green-500 mb-4\">Spotify Clone</h1>\r\n    <div class=\"flex items-center mb-5\">\r\n      <input\r\n        class=\"bg-gray-200 text-gray-800 p-2 rounded w-full focus:outline-none focus:ring-2 focus:ring-green-500 transition duration-300\"\r\n        type=\"text\" [(ngModel)]=\"searchText\" (input)=\"search()\"\r\n        placeholder=\"Recherchez des chansons, artistes, albums ou playlists\"/>\r\n      <button class=\"bg-green-500 hover:bg-green-600 text-white py-2 px-4 ml-2 rounded transition duration-300\"\r\n              (click)=\"search()\">Rechercher\r\n      </button>\r\n    </div>\r\n    <div class=\"grid grid-cols-3 gap-4\">\r\n      <div *ngFor=\"let album of albums\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <a [routerLink]=\"['/album', album.id]\">\r\n            <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\r\n            <h5 class=\"text-lg font-semibold text-green-500\">tite{{ album.title }}</h5>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let artist of artists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <h5 class=\"text-lg font-semibold text-green-500\">\r\n            <a routerLink=\"/artist-details/{{ artist.id }}\">{{ artist.name }}</a>\r\n          </h5>\r\n          <div *ngFor=\"let album of artist.albums\">\r\n            <p class=\"text-gray-400\">{{ album.title }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngFor=\"let song of songs\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ song.title }}</h5>\r\n          <div *ngFor=\"let artist of song.artists\">\r\n            <p class=\"text-gray-400\">{{ artist.name }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let playlist of playlists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ playlist.title }}</h5>\r\n          <div *ngFor=\"let song of playlist.songs\">\r\n            <p class=\"text-gray-400\">{{ song.title }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {HttpClient} from '@angular/common/http';\r\nimport {Component} from '@angular/core';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\nimport {Router} from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent {\r\n  searchText: string = '';\r\n  searchQuery: string = 'title';\r\n  songs: any[] = [];\r\n  artists: any[] = [];\r\n  albums: any[] = [];\r\n  playlists: any[] = [];\r\n\r\n  constructor(private spotifyService: SpotifyService, private http: HttpClient, private router: Router) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.spotifyService.getAlbums().subscribe((data: any) => {\r\n      this.albums = Object.values(data);\r\n    });\r\n  }\r\n\r\n  search() {\r\n    // Appel à la méthode de recherche de chansons\r\n    this.spotifyService.searchSongs(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (songs):', response);\r\n      this.songs = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'artistes\r\n    this.spotifyService.searchArtists(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (artists):', response);\r\n      this.artists = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'albums\r\n    this.spotifyService.searchAlbums(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (albums):', response);\r\n      this.albums = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche de playlists\r\n    this.spotifyService.searchPlaylists(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (playlists):', response);\r\n      this.playlists = response;\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/d03238e439b44eea933aa7c7463a55d1664da14fdbf9ff89d070d6aefdfca5c3.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/d03238e439b44eea933aa7c7463a55d1664da14fdbf9ff89d070d6aefdfca5c3.json b/.angular/cache/15.2.5/babel-webpack/d03238e439b44eea933aa7c7463a55d1664da14fdbf9ff89d070d6aefdfca5c3.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/d03238e439b44eea933aa7c7463a55d1664da14fdbf9ff89d070d6aefdfca5c3.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = function (a1) {\n  return [\"/album\", a1];\n};\nfunction SearchComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Album\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"a\", 10);\n    i0.ɵɵelement(5, \"img\", 11);\n    i0.ɵɵelementStart(6, \"h5\", 12);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const album_r4 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, album_r4.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r4.title);\n    i0.ɵɵproperty(\"src\", album_r4.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r4.title);\n  }\n}\nfunction SearchComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"h5\", 12)(3, \"p\", 9);\n    i0.ɵɵtext(4, \"Artiste\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"a\", 10);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const artist_r5 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/artist-details/\", artist_r5.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(artist_r5.name);\n  }\n}\nfunction SearchComponent_div_11_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const artist_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(artist_r8.name);\n  }\n}\nfunction SearchComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Chanson\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h5\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, SearchComponent_div_11_div_6_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const song_r6 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(song_r6.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", song_r6.artists);\n  }\n}\nfunction SearchComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Playlist\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h5\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const playlist_r9 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(playlist_r9.name);\n  }\n}\nexport class SearchComponent {\n  constructor(spotifyService, http, router) {\n    this.spotifyService = spotifyService;\n    this.http = http;\n    this.router = router;\n    this.searchText = '';\n    this.searchQuery = 'title';\n    this.songs = [];\n    this.artists = [];\n    this.albums = [];\n    this.playlists = [];\n  }\n  ngOnInit() {\n    this.spotifyService.getAlbums().subscribe(data => {\n      this.albums = Object.values(data);\n    });\n  }\n  search() {\n    // Appel à la méthode de recherche de chansons\n    this.spotifyService.searchSongs(this.searchText).subscribe(response => {\n      this.songs = response;\n    });\n    // Appel à la méthode de recherche d'artistes\n    this.spotifyService.searchArtists(this.searchText).subscribe(response => {\n      this.artists = response;\n    });\n    // Appel à la méthode de recherche d'albums\n    this.spotifyService.searchAlbums(this.searchText).subscribe(response => {\n      this.albums = response;\n    });\n    // Appel à la méthode de recherche de playlists\n    this.spotifyService.searchPlaylists(this.searchText).subscribe(playlists => {\n      this.playlists = playlists;\n      console.log('Playlists', playlists);\n    }, error => {\n      console.log('Error searching playlists', error);\n    });\n  }\n}\nSearchComponent.ɵfac = function SearchComponent_Factory(t) {\n  return new (t || SearchComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchComponent,\n  selectors: [[\"app-search\"]],\n  decls: 13,\n  vars: 5,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-3xl\", \"font-semibold\", \"text-green-500\", \"mb-4\"], [1, \"flex\", \"items-center\", \"mb-5\"], [\"type\", \"text\", \"placeholder\", \"Recherchez des chansons, artistes, albums ou playlists\", 1, \"bg-gray-200\", \"text-gray-800\", \"p-2\", \"rounded\", \"w-full\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-green-500\", \"transition\", \"duration-300\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [1, \"bg-green-500\", \"hover:bg-green-600\", \"text-white\", \"py-2\", \"px-4\", \"ml-2\", \"rounded\", \"transition\", \"duration-300\", 3, \"click\"], [1, \"grid\", \"grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"text-gray-400\"], [3, \"routerLink\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function SearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Spotify Clone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function SearchComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.searchText = $event;\n      })(\"input\", function SearchComponent_Template_input_input_5_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function SearchComponent_Template_button_click_6_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵtext(7, \"Rechercher \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵtemplate(9, SearchComponent_div_9_Template, 8, 6, \"div\", 7);\n      i0.ɵɵtemplate(10, SearchComponent_div_10_Template, 7, 2, \"div\", 7);\n      i0.ɵɵtemplate(11, SearchComponent_div_11_Template, 7, 2, \"div\", 7);\n      i0.ɵɵtemplate(12, SearchComponent_div_12_Template, 6, 1, \"div\", 7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchText);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.artists);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.songs);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.playlists);\n    }\n  },\n  dependencies: [i4.NgForOf, i3.RouterLink, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;IAaMA,2BAAkC;IAELA,qBAAK;IAAAA,iBAAI;IAClCA,6BAAuC;IACrCA,0BAA4E;IAC5EA,8BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IAFtEA,eAAmC;IAAnCA,oEAAmC;IACgBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;;;IAIxEA,2BAAoC;IAGLA,uBAAO;IAAAA,iBAAI;IACpCA,6BAAgD;IAAAA,YAAiB;IAAAA,iBAAI;;;;IAAlEA,eAA4C;IAA5CA,6EAA4C;IAACA,eAAiB;IAAjBA,oCAAiB;;;;;IASnEA,2BAAyC;IACdA,YAAiB;IAAAA,iBAAI;;;;IAArBA,eAAiB;IAAjBA,oCAAiB;;;;;IALhDA,2BAAgC;IAEHA,uBAAO;IAAAA,iBAAI;IACpCA,8BAAiD;IAAAA,YAAgB;IAAAA,iBAAK;IACtEA,uEAEM;IACRA,iBAAM;;;;IAJ6CA,eAAgB;IAAhBA,mCAAgB;IACzCA,eAAe;IAAfA,yCAAe;;;;;IAK3CA,2BAAwC;IAEXA,wBAAQ;IAAAA,iBAAI;IACrCA,8BAAiD;IAAAA,YAAmB;IAAAA,iBAAK;;;;IAAxBA,eAAmB;IAAnBA,sCAAmB;;;AChC9E,OAAM,MAAOC,eAAe;EAO1BC,YAAoBC,cAA8B,EAAUC,IAAgB,EAAUC,MAAc;IAAhF,mBAAc,GAAdF,cAAc;IAA0B,SAAI,GAAJC,IAAI;IAAsB,WAAM,GAANC,MAAM;IAN5F,eAAU,GAAW,EAAE;IACvB,gBAAW,GAAW,OAAO;IAC7B,UAAK,GAAU,EAAE;IACjB,YAAO,GAAU,EAAE;IACnB,WAAM,GAAU,EAAE;IAClB,cAAS,GAAe,EAAE;EAE1B;EAGAC,QAAQ;IACN,IAAI,CAACH,cAAc,CAACI,SAAS,EAAE,CAACC,SAAS,CAAEC,IAAS,IAAI;MACtD,IAAI,CAACC,MAAM,GAAGC,MAAM,CAACC,MAAM,CAACH,IAAI,CAAC;IACnC,CAAC,CAAC;EACJ;EAEAI,MAAM;IACJ;IACA,IAAI,CAACV,cAAc,CAACW,WAAW,CAAC,IAAI,CAACC,UAAU,CAAC,CAACP,SAAS,CAAEQ,QAAa,IAAI;MAC3E,IAAI,CAACC,KAAK,GAAGD,QAAQ;IACvB,CAAC,CAAC;IAEF;IACA,IAAI,CAACb,cAAc,CAACe,aAAa,CAAC,IAAI,CAACH,UAAU,CAAC,CAACP,SAAS,CAAEQ,QAAa,IAAI;MAC7E,IAAI,CAACG,OAAO,GAAGH,QAAQ;IACzB,CAAC,CAAC;IAEF;IACA,IAAI,CAACb,cAAc,CAACiB,YAAY,CAAC,IAAI,CAACL,UAAU,CAAC,CAACP,SAAS,CAAEQ,QAAa,IAAI;MAC5E,IAAI,CAACN,MAAM,GAAGM,QAAQ;IACxB,CAAC,CAAC;IAEF;IACA,IAAI,CAACb,cAAc,CAACkB,eAAe,CAAC,IAAI,CAACN,UAAU,CAAC,CAACP,SAAS,CAAEc,SAAgB,IAAI;MAChF,IAAI,CAACA,SAAS,GAAGA,SAAS;MAC1BC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,SAAS,CAAC;IACrC,CAAC,EACAG,KAAK,IAAI;MACRF,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEC,KAAK,CAAC;IACjD,CAAC,CACF;EACH;;AA1CWxB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDX5B9B,8BAAsE;MAEXA,6BAAa;MAAAA,iBAAK;MACzEA,8BAAoC;MAGpBA;QAAA;MAAA,EAAwB;QAAA,OAAU+B,YAAQ;MAAA,EAAlB;MAFtC/B,iBAGwE;MACxEA,iCAC2B;MAAnBA;QAAA,OAAS+B,YAAQ;MAAA,EAAC;MAAC/B,2BAC3B;MAAAA,iBAAS;MAEXA,8BAAoC;MAClCA,gEAQM;MACNA,kEAOM;MAENA,kEAQM;MACNA,kEAKM;MACRA,iBAAM;;;MAxCUA,eAAwB;MAAxBA,wCAAwB;MAOfA,eAAS;MAATA,oCAAS;MASRA,eAAU;MAAVA,qCAAU;MASZA,eAAQ;MAARA,mCAAQ;MASJA,eAAY;MAAZA,uCAAY","names":["i0","SearchComponent","constructor","spotifyService","http","router","ngOnInit","getAlbums","subscribe","data","albums","Object","values","search","searchSongs","searchText","response","songs","searchArtists","artists","searchAlbums","searchPlaylists","playlists","console","log","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\search\\search.component.html","C:\\IUT\\spotizer\\src\\app\\search\\search.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\r\n  <div class=\"container mx-auto p-4\">\r\n    <h1 class=\"text-3xl font-semibold text-green-500 mb-4\">Spotify Clone</h1>\r\n    <div class=\"flex items-center mb-5\">\r\n      <input\r\n        class=\"bg-gray-200 text-gray-800 p-2 rounded w-full focus:outline-none focus:ring-2 focus:ring-green-500 transition duration-300\"\r\n        type=\"text\" [(ngModel)]=\"searchText\" (input)=\"search()\"\r\n        placeholder=\"Recherchez des chansons, artistes, albums ou playlists\"/>\r\n      <button class=\"bg-green-500 hover:bg-green-600 text-white py-2 px-4 ml-2 rounded transition duration-300\"\r\n              (click)=\"search()\">Rechercher\r\n      </button>\r\n    </div>\r\n    <div class=\"grid grid-cols-3 gap-4\">\r\n      <div *ngFor=\"let album of albums\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Album</p>\r\n          <a [routerLink]=\"['/album', album.id]\">\r\n            <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\r\n            <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let artist of artists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <h5 class=\"text-lg font-semibold text-green-500\">\r\n            <p class=\"text-gray-400\">Artiste</p>\r\n            <a routerLink=\"/artist-details/{{ artist.id }}\">{{ artist.name }}</a>\r\n          </h5>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngFor=\"let song of songs\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Chanson</p>\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ song.title }}</h5>\r\n          <div *ngFor=\"let artist of song.artists\">\r\n            <p class=\"text-gray-400\">{{ artist.name }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let playlist of playlists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Playlist</p>\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ playlist.name }}</h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {HttpClient} from '@angular/common/http';\r\nimport {Component} from '@angular/core';\r\nimport {Playlist, SpotifyService} from \"../services/spotify.service\";\r\nimport {Router} from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent {\r\n  searchText: string = '';\r\n  searchQuery: string = 'title';\r\n  songs: any[] = [];\r\n  artists: any[] = [];\r\n  albums: any[] = [];\r\n  playlists: Playlist[] = [];\r\n  constructor(private spotifyService: SpotifyService, private http: HttpClient, private router: Router) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.spotifyService.getAlbums().subscribe((data: any) => {\r\n      this.albums = Object.values(data);\r\n    });\r\n  }\r\n\r\n  search() {\r\n    // Appel à la méthode de recherche de chansons\r\n    this.spotifyService.searchSongs(this.searchText).subscribe((response: any) => {\r\n      this.songs = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'artistes\r\n    this.spotifyService.searchArtists(this.searchText).subscribe((response: any) => {\r\n      this.artists = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'albums\r\n    this.spotifyService.searchAlbums(this.searchText).subscribe((response: any) => {\r\n      this.albums = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche de playlists\r\n    this.spotifyService.searchPlaylists(this.searchText).subscribe((playlists: any[]) => {\r\n        this.playlists = playlists;\r\n        console.log('Playlists', playlists);\r\n      },\r\n      (error) => {\r\n        console.log('Error searching playlists', error);\r\n      }\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/2ba8b2cfae2af720ad0c7fa77c5531bc4fae86d9599df01daf98305df15fec2e.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/2ba8b2cfae2af720ad0c7fa77c5531bc4fae86d9599df01daf98305df15fec2e.json b/.angular/cache/15.2.5/babel-webpack/2ba8b2cfae2af720ad0c7fa77c5531bc4fae86d9599df01daf98305df15fec2e.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/2ba8b2cfae2af720ad0c7fa77c5531bc4fae86d9599df01daf98305df15fec2e.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/spotify.service\";\nimport * as i3 from \"@angular/platform-browser\";\nexport class VideoPlayerComponent {\n  constructor(route, spotifyService, sanitizer) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n    this.sanitizer = sanitizer;\n    this.videoUrl = '';\n  }\n  ngOnInit() {\n    // @ts-ignore\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.spotifyService.getSong(id).subscribe(data => {\n      this.song = data;\n      if (this.song && this.song.youtube) {\n        this.videoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.song.youtube.replace(\"watch?v=\", \"embed/\"));\n      }\n    });\n  }\n}\nVideoPlayerComponent.ɵfac = function VideoPlayerComponent_Factory(t) {\n  return new (t || VideoPlayerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService), i0.ɵɵdirectiveInject(i3.DomSanitizer));\n};\nVideoPlayerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VideoPlayerComponent,\n  selectors: [[\"app-video-player\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [\"routerLink\", \"/\", 1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", \"mb-4\"], [1, \"bg-black\", \"rounded\", \"p-4\"], [\"width\", \"100%\", \"height\", \"500\", \"frameborder\", \"0\", \"allow\", \"autoplay; encrypted-media\", \"allowfullscreen\", \"\", 3, \"src\"]],\n  template: function VideoPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵtext(2, \"Retour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelement(4, \"iframe\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"src\", ctx.videoUrl, i0.ɵɵsanitizeResourceUrl);\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAWA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,KAAqB,EACrBC,cAA8B,EAC9BC,SAAuB;IAFvB,UAAK,GAALF,KAAK;IACL,mBAAc,GAAdC,cAAc;IACd,cAAS,GAATC,SAAS;IALnB,aAAQ,GAAoB,EAAE;EAM1B;EAEJC,QAAQ;IACN;IACA,MAAMC,EAAE,GAAG,CAAC,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAClD,IAAI,CAACN,cAAc,CAACO,OAAO,CAACJ,EAAE,CAAC,CAACK,SAAS,CAAEC,IAAS,IAAI;MACtD,IAAI,CAACC,IAAI,GAAGD,IAAI;MAChB,IAAI,IAAI,CAACC,IAAI,IAAI,IAAI,CAACA,IAAI,CAACC,OAAO,EAAE;QAClC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACX,SAAS,CAACY,8BAA8B,CAAC,IAAI,CAACH,IAAI,CAACC,OAAO,CAACG,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;;IAElH,CAAC,CAAC;EACJ;;AAnBWjB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXjCC,8BAAmC;MAC4CA,sBAAM;MAAAA,iBAAS;MAC5FA,8BAAkC;MAChCA,4BAA8H;MAChIA,iBAAM;;;MAD8BA,eAAgB;MAAhBA,4DAAgB","names":["VideoPlayerComponent","constructor","route","spotifyService","sanitizer","ngOnInit","id","snapshot","paramMap","get","getSong","subscribe","data","song","youtube","videoUrl","bypassSecurityTrustResourceUrl","replace","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.ts","C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\nimport {DomSanitizer, SafeResourceUrl} from \"@angular/platform-browser\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-video-player',\r\n  templateUrl: './video-player.component.html',\r\n  styleUrls: ['./video-player.component.css']\r\n})\r\nexport class VideoPlayerComponent {\r\n  song: any;\r\n  videoUrl: SafeResourceUrl = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService,\r\n    private sanitizer: DomSanitizer\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // @ts-ignore\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.spotifyService.getSong(id).subscribe((data: any) => {\r\n      this.song = data;\r\n      if (this.song && this.song.youtube) {\r\n        this.videoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.song.youtube.replace(\"watch?v=\", \"embed/\"));\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <iframe width=\"100%\" height=\"500\" [src]=\"videoUrl\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/2ae1991f43f9fea9ed2992cea866be51bce3b58063ace3c015024a9f8dcdccf7.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/2ae1991f43f9fea9ed2992cea866be51bce3b58063ace3c015024a9f8dcdccf7.json b/.angular/cache/15.2.5/babel-webpack/2ae1991f43f9fea9ed2992cea866be51bce3b58063ace3c015024a9f8dcdccf7.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/2ae1991f43f9fea9ed2992cea866be51bce3b58063ace3c015024a9f8dcdccf7.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor(playlistService) {\n    this.playlistService = playlistService;\n    this.playlists = [];\n  }\n  ngOnInit() {\n    this.playlistService.getAllPlaylists().subscribe(playlists => {\n      this.playlists = playlists;\n    }, error => {\n      console.log('Error fetching playlists', error);\n    });\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: `\n    <h1>All Playlists</h1>\n    <ul>\n      <li *ngFor=\"let playlist of playlists\">{{ playlist.name }}</li>\n    </ul>\n  `,\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAalC,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAGvBC,YAAoBC,eAA+B;IAA/B,oBAAe,GAAfA,eAAe;IAFnC,cAAS,GAAU,EAAE;EAEiC;EAEtDC,QAAQ;IACN,IAAI,CAACD,eAAe,CAACE,eAAe,EAAE,CAACC,SAAS,CAC7CC,SAAgB,IAAI;MACnB,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC5B,CAAC,EACAC,KAAU,IAAI;MACbC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,KAAK,CAAC;IAChD,CAAC,CACF;EACH;CAED;AAhBYP,YAAY,eAVxBD,SAAS,CAAC;EACTW,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE;;;;;GAKZ;EACDC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,GACWZ,YAAY,CAgBxB;SAhBYA,YAAY","names":["Component","AppComponent","constructor","playlistService","ngOnInit","getAllPlaylists","subscribe","playlists","error","console","log","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport {SpotifyService} from \"./services/spotify.service\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: `\r\n    <h1>All Playlists</h1>\r\n    <ul>\r\n      <li *ngFor=\"let playlist of playlists\">{{ playlist.name }}</li>\r\n    </ul>\r\n  `,\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  playlists: any[] = [];\r\n\r\n  constructor(private playlistService: SpotifyService) {}\r\n\r\n  ngOnInit() {\r\n    this.playlistService.getAllPlaylists().subscribe(\r\n      (playlists: any[]) => {\r\n        this.playlists = playlists;\r\n      },\r\n      (error: any) => {\r\n        console.log('Error fetching playlists', error);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/75f1ba1921895ef50d7defb0552ccdfc639893a986086817d60342af2b121fac.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/75f1ba1921895ef50d7defb0552ccdfc639893a986086817d60342af2b121fac.json b/.angular/cache/15.2.5/babel-webpack/75f1ba1921895ef50d7defb0552ccdfc639893a986086817d60342af2b121fac.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/75f1ba1921895ef50d7defb0552ccdfc639893a986086817d60342af2b121fac.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RouterModule } from '@angular/router';\nimport { SearchComponent } from './search/search.component';\nimport { ListPlaylistComponent } from './list-playlist/list-playlist.component';\nimport { PlaylistComponent } from './playlist/playlist.component';\nimport { ChoosePlaylistComponent } from './choose-playlist/choose-playlist.component';\nimport { HeaderComponent } from './header/header.component';\nimport { VideoPlayerComponent } from './video-player/video-player.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from \"@angular/forms\";\nimport { ArtistAlbumsComponent } from './artist-albums/artist-albums.component';\nimport { AlbumComponent } from './album/album.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst appRoutes = [{\n  path: '',\n  redirectTo: '/search',\n  pathMatch: 'full'\n}, {\n  path: 'search',\n  component: SearchComponent\n}, {\n  path: 'list-playlist',\n  component: ListPlaylistComponent\n}, {\n  path: 'playlist/:id',\n  component: PlaylistComponent\n}, {\n  path: 'choose-playlist',\n  component: ChoosePlaylistComponent\n}, {\n  path: 'video-player/:id',\n  component: VideoPlayerComponent\n}, {\n  path: 'artist-details/:id',\n  component: ArtistAlbumsComponent\n}, {\n  path: 'album/:id',\n  component: AlbumComponent\n}];\nexport class AppModule {}\nAppModule.ɵfac = function AppModule_Factory(t) {\n  return new (t || AppModule)();\n};\nAppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppModule,\n  bootstrap: [AppComponent]\n});\nAppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [BrowserModule, AppRoutingModule, RouterModule.forRoot(appRoutes), HttpClientModule, FormsModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent, SearchComponent, ListPlaylistComponent, PlaylistComponent, ChoosePlaylistComponent, HeaderComponent, VideoPlayerComponent, ArtistAlbumsComponent, AlbumComponent],\n    imports: [BrowserModule, AppRoutingModule, i1.RouterModule, HttpClientModule, FormsModule]\n  });\n})();","map":{"version":3,"mappings":"AACA,SAASA,aAAa,QAAQ,2BAA2B;AAEzD,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,QAAgB,iBAAiB;AACtD,SAASC,eAAe,QAAQ,2BAA2B;AAC3D,SAASC,qBAAqB,QAAQ,yCAAyC;AAC/E,SAASC,iBAAiB,QAAQ,+BAA+B;AACjE,SAASC,uBAAuB,QAAQ,6CAA6C;AACrF,SAASC,eAAe,QAAQ,2BAA2B;AAC3D,SAASC,oBAAoB,QAAQ,uCAAuC;AAE5E,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAAQC,WAAW,QAAO,gBAAgB;AAC1C,SAASC,qBAAqB,QAAQ,yCAAyC;AAC/E,SAASC,cAAc,QAAQ,yBAAyB;;;AAExD,MAAMC,SAAS,GAAW,CACxB;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE,SAAS;EAAEC,SAAS,EAAE;AAAM,CAAE,EACtD;EAAEF,IAAI,EAAE,QAAQ;EAAEG,SAAS,EAAEd;AAAe,CAAE,EAC9C;EAAEW,IAAI,EAAE,eAAe;EAAEG,SAAS,EAAEb;AAAqB,CAAE,EAC3D;EAAEU,IAAI,EAAE,cAAc;EAAEG,SAAS,EAAEZ;AAAiB,CAAE,EACtD;EAAES,IAAI,EAAE,iBAAiB;EAAEG,SAAS,EAAEX;AAAuB,CAAE,EAC/D;EAAEQ,IAAI,EAAE,kBAAkB;EAAEG,SAAS,EAAET;AAAoB,CAAC,EAC5D;EAAEM,IAAI,EAAE,oBAAoB;EAAEG,SAAS,EAAEN;AAAqB,CAAE,EAChE;EAAEG,IAAI,EAAE,WAAW;EAAEG,SAAS,EAAEL;AAAc,CAAE,CACjD;AAwBD,OAAM,MAAOM,SAAS;AAATA,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;QAATA,SAAS;EAAAC,YAFRlB,YAAY;AAAA;AAEbiB,SAAS;YATlBnB,aAAa,EACbC,gBAAgB,EAChBE,YAAY,CAACkB,OAAO,CAACP,SAAS,CAAC,EAC/BJ,gBAAgB,EAChBC,WAAW;AAAA;;2EAKFQ,SAAS;IAAAG,eApBlBpB,YAAY,EACZE,eAAe,EACfC,qBAAqB,EACrBC,iBAAiB,EACjBC,uBAAuB,EACvBC,eAAe,EACfC,oBAAoB,EACpBG,qBAAqB,EACrBC,cAAc;IAAAU,UAGdvB,aAAa,EACbC,gBAAgB,mBAEhBS,gBAAgB,EAChBC,WAAW;EAAA;AAAA","names":["BrowserModule","AppRoutingModule","AppComponent","RouterModule","SearchComponent","ListPlaylistComponent","PlaylistComponent","ChoosePlaylistComponent","HeaderComponent","VideoPlayerComponent","HttpClientModule","FormsModule","ArtistAlbumsComponent","AlbumComponent","appRoutes","path","redirectTo","pathMatch","component","AppModule","bootstrap","forRoot","declarations","imports"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\app.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SearchComponent } from './search/search.component';\r\nimport { ListPlaylistComponent } from './list-playlist/list-playlist.component';\r\nimport { PlaylistComponent } from './playlist/playlist.component';\r\nimport { ChoosePlaylistComponent } from './choose-playlist/choose-playlist.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { VideoPlayerComponent } from './video-player/video-player.component';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport { ArtistAlbumsComponent } from './artist-albums/artist-albums.component';\r\nimport { AlbumComponent } from './album/album.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', redirectTo: '/search', pathMatch: 'full' },\r\n  { path: 'search', component: SearchComponent },\r\n  { path: 'list-playlist', component: ListPlaylistComponent },\r\n  { path: 'playlist/:id', component: PlaylistComponent },\r\n  { path: 'choose-playlist', component: ChoosePlaylistComponent },\r\n  { path: 'video-player/:id', component: VideoPlayerComponent},\r\n  { path: 'artist-details/:id', component: ArtistAlbumsComponent },\r\n  { path: 'album/:id', component: AlbumComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SearchComponent,\r\n    ListPlaylistComponent,\r\n    PlaylistComponent,\r\n    ChoosePlaylistComponent,\r\n    HeaderComponent,\r\n    VideoPlayerComponent,\r\n    ArtistAlbumsComponent,\r\n    AlbumComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/d19dbc6c0cfece0ac3d484af200d7311b22d1feafc024f414ef5ccbdc2b7b4f6.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/d19dbc6c0cfece0ac3d484af200d7311b22d1feafc024f414ef5ccbdc2b7b4f6.json b/.angular/cache/15.2.5/babel-webpack/d19dbc6c0cfece0ac3d484af200d7311b22d1feafc024f414ef5ccbdc2b7b4f6.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/d19dbc6c0cfece0ac3d484af200d7311b22d1feafc024f414ef5ccbdc2b7b4f6.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/spotify.service\";\nexport class VideoPlayerComponent {\n  constructor(route, spotifyService) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n    this.videoUrl = '';\n  }\n  ngOnInit() {\n    // @ts-ignore\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.spotifyService.getSong(id).subscribe(data => {\n      this.song = data;\n      if (this.song) {\n        this.videoUrl = `https://www.youtube.com/watch?v=1hLIXrlpRe8`;\n        console.log(this.videoUrl);\n      }\n    });\n  }\n}\nVideoPlayerComponent.ɵfac = function VideoPlayerComponent_Factory(t) {\n  return new (t || VideoPlayerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService));\n};\nVideoPlayerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VideoPlayerComponent,\n  selectors: [[\"app-video-player\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [\"routerLink\", \"/\", 1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", \"mb-4\"], [1, \"bg-black\", \"rounded\", \"p-4\"], [\"controls\", \"\", 1, \"w-full\"], [\"type\", \"video/mp4\", 3, \"src\"]],\n  template: function VideoPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵtext(2, \"Retour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"video\", 3);\n      i0.ɵɵelement(5, \"source\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"src\", ctx.videoUrl, i0.ɵɵsanitizeUrl);\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,KAAqB,EACrBC,cAA8B;IAD9B,UAAK,GAALD,KAAK;IACL,mBAAc,GAAdC,cAAc;IAJxB,aAAQ,GAAW,EAAE;EAKlB;EAEHC,QAAQ;IACN;IACA,MAAMC,EAAE,GAAG,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAClD,IAAI,CAACL,cAAc,CAACM,OAAO,CAACJ,EAAE,CAAC,CAACK,SAAS,CAAEC,IAAS,IAAI;MACtD,IAAI,CAACC,IAAI,GAAGD,IAAI;MAChB,IAAI,IAAI,CAACC,IAAI,EAAE;QACb,IAAI,CAACC,QAAQ,GAAG,6CAA6C;QAC7DC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,QAAQ,CAAC;;IAE9B,CAAC,CAAC;EACJ;;AAnBWb,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTjCC,8BAAmC;MAC4CA,sBAAM;MAAAA,iBAAS;MAC5FA,8BAAkC;MAE9BA,4BAA0C;MAE5CA,iBAAQ;;;MAFEA,eAAgB;MAAhBA,oDAAgB","names":["VideoPlayerComponent","constructor","route","spotifyService","ngOnInit","id","snapshot","paramMap","get","getSong","subscribe","data","song","videoUrl","console","log","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.ts","C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\n\r\n@Component({\r\n  selector: 'app-video-player',\r\n  templateUrl: './video-player.component.html',\r\n  styleUrls: ['./video-player.component.css']\r\n})\r\nexport class VideoPlayerComponent {\r\n  song: any;\r\n  videoUrl: string = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // @ts-ignore\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.spotifyService.getSong(id).subscribe((data: any) => {\r\n      this.song = data;\r\n      if (this.song) {\r\n        this.videoUrl = `https://www.youtube.com/watch?v=1hLIXrlpRe8`;\r\n        console.log(this.videoUrl);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <video controls class=\"w-full\">\r\n      <source [src]=\"videoUrl\" type=\"video/mp4\">\r\n      <!--Votre navigateur ne prend pas en charge la vidéo.-->\r\n    </video>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/c1cb465b02b82e5c615cf22a8ec9fad49765c1876a87d0702bdfe4d53ec850d5.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/c1cb465b02b82e5c615cf22a8ec9fad49765c1876a87d0702bdfe4d53ec850d5.json b/.angular/cache/15.2.5/babel-webpack/c1cb465b02b82e5c615cf22a8ec9fad49765c1876a87d0702bdfe4d53ec850d5.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/c1cb465b02b82e5c615cf22a8ec9fad49765c1876a87d0702bdfe4d53ec850d5.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = function (a1) {\n  return [\"/album\", a1];\n};\nfunction SearchComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Album\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"a\", 10);\n    i0.ɵɵelement(5, \"img\", 11);\n    i0.ɵɵelementStart(6, \"h5\", 12);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const album_r4 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, album_r4.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r4.title);\n    i0.ɵɵproperty(\"src\", album_r4.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r4.title);\n  }\n}\nfunction SearchComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"h5\", 12)(3, \"p\", 9);\n    i0.ɵɵtext(4, \"Artiste\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"a\", 10);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const artist_r5 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/artist-details/\", artist_r5.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(artist_r5.name);\n  }\n}\nfunction SearchComponent_div_11_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const artist_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(artist_r8.name);\n  }\n}\nfunction SearchComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Chanson\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h5\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, SearchComponent_div_11_div_6_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const song_r6 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(song_r6.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", song_r6.artists);\n  }\n}\nfunction SearchComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Playlist\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h5\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const playlist_r9 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(playlist_r9.name);\n  }\n}\nexport class SearchComponent {\n  constructor(spotifyService, http, router) {\n    this.spotifyService = spotifyService;\n    this.http = http;\n    this.router = router;\n    this.searchText = '';\n    this.searchQuery = 'title';\n    this.songs = [];\n    this.artists = [];\n    this.albums = [];\n    this.playlists = [];\n  }\n  ngOnInit() {\n    this.spotifyService.getAlbums().subscribe(data => {\n      this.albums = Object.values(data);\n    });\n  }\n  search() {\n    // Appel à la méthode de recherche de chansons\n    this.spotifyService.searchSongs(this.searchText).subscribe(response => {\n      this.songs = response;\n    });\n    // Appel à la méthode de recherche d'artistes\n    this.spotifyService.searchArtists(this.searchText).subscribe(response => {\n      this.artists = response;\n    });\n    // Appel à la méthode de recherche d'albums\n    this.spotifyService.searchAlbums(this.searchText).subscribe(response => {\n      this.albums = response;\n    });\n    // Appel à la méthode de recherche de playlists\n    this.spotifyService.searchPlaylists(this.searchText).subscribe(playlists => {\n      this.playlists = playlists;\n    });\n  }\n}\nSearchComponent.ɵfac = function SearchComponent_Factory(t) {\n  return new (t || SearchComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchComponent,\n  selectors: [[\"app-search\"]],\n  decls: 13,\n  vars: 5,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-3xl\", \"font-semibold\", \"text-green-500\", \"mb-4\"], [1, \"flex\", \"items-center\", \"mb-5\"], [\"type\", \"text\", \"placeholder\", \"Recherchez des chansons, artistes, albums ou playlists\", 1, \"bg-gray-200\", \"text-gray-800\", \"p-2\", \"rounded\", \"w-full\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-green-500\", \"transition\", \"duration-300\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [1, \"bg-green-500\", \"hover:bg-green-600\", \"text-white\", \"py-2\", \"px-4\", \"ml-2\", \"rounded\", \"transition\", \"duration-300\", 3, \"click\"], [1, \"grid\", \"grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"text-gray-400\"], [3, \"routerLink\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function SearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Spotify Clone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function SearchComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.searchText = $event;\n      })(\"input\", function SearchComponent_Template_input_input_5_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function SearchComponent_Template_button_click_6_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵtext(7, \"Rechercher \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵtemplate(9, SearchComponent_div_9_Template, 8, 6, \"div\", 7);\n      i0.ɵɵtemplate(10, SearchComponent_div_10_Template, 7, 2, \"div\", 7);\n      i0.ɵɵtemplate(11, SearchComponent_div_11_Template, 7, 2, \"div\", 7);\n      i0.ɵɵtemplate(12, SearchComponent_div_12_Template, 6, 1, \"div\", 7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchText);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.artists);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.songs);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.playlists);\n    }\n  },\n  dependencies: [i4.NgForOf, i3.RouterLink, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","SearchComponent","constructor","spotifyService","http","router","ngOnInit","getAlbums","subscribe","data","albums","Object","values","search","searchSongs","searchText","response","songs","searchArtists","artists","searchAlbums","searchPlaylists","playlists","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\search\\search.component.html","C:\\IUT\\spotizer\\src\\app\\search\\search.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\r\n  <div class=\"container mx-auto p-4\">\r\n    <h1 class=\"text-3xl font-semibold text-green-500 mb-4\">Spotify Clone</h1>\r\n    <div class=\"flex items-center mb-5\">\r\n      <input\r\n        class=\"bg-gray-200 text-gray-800 p-2 rounded w-full focus:outline-none focus:ring-2 focus:ring-green-500 transition duration-300\"\r\n        type=\"text\" [(ngModel)]=\"searchText\" (input)=\"search()\"\r\n        placeholder=\"Recherchez des chansons, artistes, albums ou playlists\"/>\r\n      <button class=\"bg-green-500 hover:bg-green-600 text-white py-2 px-4 ml-2 rounded transition duration-300\"\r\n              (click)=\"search()\">Rechercher\r\n      </button>\r\n    </div>\r\n    <div class=\"grid grid-cols-3 gap-4\">\r\n      <div *ngFor=\"let album of albums\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Album</p>\r\n          <a [routerLink]=\"['/album', album.id]\">\r\n            <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\r\n            <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let artist of artists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <h5 class=\"text-lg font-semibold text-green-500\">\r\n            <p class=\"text-gray-400\">Artiste</p>\r\n            <a routerLink=\"/artist-details/{{ artist.id }}\">{{ artist.name }}</a>\r\n          </h5>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngFor=\"let song of songs\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Chanson</p>\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ song.title }}</h5>\r\n          <div *ngFor=\"let artist of song.artists\">\r\n            <p class=\"text-gray-400\">{{ artist.name }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let playlist of playlists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Playlist</p>\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ playlist.name }}</h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {HttpClient} from '@angular/common/http';\r\nimport {Component} from '@angular/core';\r\nimport {Playlist, SpotifyService} from \"../services/spotify.service\";\r\nimport {Router} from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent {\r\n  searchText: string = '';\r\n  searchQuery: string = 'title';\r\n  songs: any[] = [];\r\n  artists: any[] = [];\r\n  albums: any[] = [];\r\n  playlists: Playlist[] = [];\r\n\r\n  constructor(private spotifyService: SpotifyService, private http: HttpClient, private router: Router) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.spotifyService.getAlbums().subscribe((data: any) => {\r\n      this.albums = Object.values(data);\r\n    });\r\n  }\r\n\r\n  search() {\r\n    // Appel à la méthode de recherche de chansons\r\n    this.spotifyService.searchSongs(this.searchText).subscribe((response: any) => {\r\n      this.songs = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'artistes\r\n    this.spotifyService.searchArtists(this.searchText).subscribe((response: any) => {\r\n      this.artists = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'albums\r\n    this.spotifyService.searchAlbums(this.searchText).subscribe((response: any) => {\r\n      this.albums = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche de playlists\r\n    this.spotifyService.searchPlaylists(this.searchText).subscribe((playlists: any[]) => {\r\n      this.playlists = playlists;\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/8484d0ce4dbe263b18b33a11e4b14f9b0a424054b4ecbf4b75aa3d34fe15d173.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/8484d0ce4dbe263b18b33a11e4b14f9b0a424054b4ecbf4b75aa3d34fe15d173.json b/.angular/cache/15.2.5/babel-webpack/8484d0ce4dbe263b18b33a11e4b14f9b0a424054b4ecbf4b75aa3d34fe15d173.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/8484d0ce4dbe263b18b33a11e4b14f9b0a424054b4ecbf4b75aa3d34fe15d173.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistName = 'Liliana Collins';\n    this.albums = [];\n    this.albumService.getArtistAlbums(this.artistName).subscribe(albums => this.albums = albums);\n  }\n  ngOnInit() {}\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAKhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAJ/D,eAAU,GAAG,iBAAiB;IAC9B,WAAM,GAAY,EAAE;IAIlB,IAAI,CAACD,YAAY,CAACE,eAAe,CAAC,IAAI,CAACC,UAAU,CAAC,CAC/CC,SAAS,CAACC,MAAM,IAAI,IAAI,CAACA,MAAM,GAAGA,MAAM,CAAC;EAC9C;EAEAC,QAAQ,IACN;;AAXSR,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAS;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlCd,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","getArtistAlbums","artistName","subscribe","albums","ngOnInit","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistName = 'Liliana Collins';\n  albums: Album[] = [];\n\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {\n    this.albumService.getArtistAlbums(this.artistName)\n      .subscribe(albums => this.albums = albums);\n  }\n\n  ngOnInit(): void {\n    }\n\n\n  /*ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let artistId = parseInt(<string>params.get('id'));\n      this.apiService.getArtistDetails(artistId).subscribe(\n        (response: any) => {\n          this.artist = response;\n          this.albums = response.albums;\n          console.log('Albums:', this.albums);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    });\n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/afae3df94b6c0932113d6af6c87d6ba5ef343823854e44ba94d0890f1179729e.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/afae3df94b6c0932113d6af6c87d6ba5ef343823854e44ba94d0890f1179729e.json b/.angular/cache/15.2.5/babel-webpack/afae3df94b6c0932113d6af6c87d6ba5ef343823854e44ba94d0890f1179729e.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/afae3df94b6c0932113d6af6c87d6ba5ef343823854e44ba94d0890f1179729e.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = function (a1) {\n  return [\"/album\", a1];\n};\nfunction SearchComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"a\", 9)(3, \"p\", 10);\n    i0.ɵɵtext(4, \"Album\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"img\", 11);\n    i0.ɵɵelementStart(6, \"h5\", 12);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const album_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, album_r4.id));\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r4.title);\n    i0.ɵɵproperty(\"src\", album_r4.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r4.title);\n  }\n}\nfunction SearchComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"h5\", 12)(3, \"p\", 10);\n    i0.ɵɵtext(4, \"Artiste\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"a\", 9);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const artist_r5 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/artist-details/\", artist_r5.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(artist_r5.name);\n  }\n}\nfunction SearchComponent_div_11_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const artist_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(artist_r8.name);\n  }\n}\nfunction SearchComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 10);\n    i0.ɵɵtext(3, \"Chanson\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h5\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, SearchComponent_div_11_div_6_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const song_r6 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(song_r6.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", song_r6.artists);\n  }\n}\nfunction SearchComponent_div_12_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const song_r11 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(song_r11.title);\n  }\n}\nfunction SearchComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 10);\n    i0.ɵɵtext(3, \"Playlist\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h5\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, SearchComponent_div_12_div_6_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const playlist_r9 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(playlist_r9.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", playlist_r9.songs);\n  }\n}\nexport class SearchComponent {\n  constructor(spotifyService, http, router) {\n    this.spotifyService = spotifyService;\n    this.http = http;\n    this.router = router;\n    this.searchText = '';\n    this.searchQuery = 'title';\n    this.songs = [];\n    this.artists = [];\n    this.albums = [];\n    this.playlists = [];\n  }\n  ngOnInit() {\n    this.spotifyService.getAlbums().subscribe(data => {\n      this.albums = Object.values(data);\n    });\n  }\n  search() {\n    // Appel à la méthode de recherche de chansons\n    this.spotifyService.searchSongs(this.searchText).subscribe(response => {\n      console.log('Search response (songs):', response);\n      this.songs = response;\n    });\n    // Appel à la méthode de recherche d'artistes\n    this.spotifyService.searchArtists(this.searchText).subscribe(response => {\n      console.log('Search response (artists):', response);\n      this.artists = response;\n    });\n    // Appel à la méthode de recherche d'albums\n    this.spotifyService.searchAlbums(this.searchText).subscribe(response => {\n      console.log('Search response (albums):', response);\n      this.albums = response;\n    });\n    // Appel à la méthode de recherche de playlists\n    this.spotifyService.searchPlaylists(this.searchText).subscribe(response => {\n      console.log('Search response (playlists):', response);\n      this.playlists = response;\n    });\n  }\n}\nSearchComponent.ɵfac = function SearchComponent_Factory(t) {\n  return new (t || SearchComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchComponent,\n  selectors: [[\"app-search\"]],\n  decls: 13,\n  vars: 5,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-3xl\", \"font-semibold\", \"text-green-500\", \"mb-4\"], [1, \"flex\", \"items-center\", \"mb-5\"], [\"type\", \"text\", \"placeholder\", \"Recherchez des chansons, artistes, albums ou playlists\", 1, \"bg-gray-200\", \"text-gray-800\", \"p-2\", \"rounded\", \"w-full\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-green-500\", \"transition\", \"duration-300\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [1, \"bg-green-500\", \"hover:bg-green-600\", \"text-white\", \"py-2\", \"px-4\", \"ml-2\", \"rounded\", \"transition\", \"duration-300\", 3, \"click\"], [1, \"grid\", \"grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [3, \"routerLink\"], [1, \"text-gray-400\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function SearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Spotify Clone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function SearchComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.searchText = $event;\n      })(\"input\", function SearchComponent_Template_input_input_5_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function SearchComponent_Template_button_click_6_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵtext(7, \"Rechercher \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵtemplate(9, SearchComponent_div_9_Template, 8, 6, \"div\", 7);\n      i0.ɵɵtemplate(10, SearchComponent_div_10_Template, 7, 2, \"div\", 7);\n      i0.ɵɵtemplate(11, SearchComponent_div_11_Template, 7, 2, \"div\", 7);\n      i0.ɵɵtemplate(12, SearchComponent_div_12_Template, 7, 2, \"div\", 7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchText);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.artists);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.songs);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.playlists);\n    }\n  },\n  dependencies: [i4.NgForOf, i3.RouterLink, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","SearchComponent","constructor","spotifyService","http","router","ngOnInit","getAlbums","subscribe","data","albums","Object","values","search","searchSongs","searchText","response","console","log","songs","searchArtists","artists","searchAlbums","searchPlaylists","playlists","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\search\\search.component.html","C:\\IUT\\spotizer\\src\\app\\search\\search.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\r\n  <div class=\"container mx-auto p-4\">\r\n    <h1 class=\"text-3xl font-semibold text-green-500 mb-4\">Spotify Clone</h1>\r\n    <div class=\"flex items-center mb-5\">\r\n      <input\r\n        class=\"bg-gray-200 text-gray-800 p-2 rounded w-full focus:outline-none focus:ring-2 focus:ring-green-500 transition duration-300\"\r\n        type=\"text\" [(ngModel)]=\"searchText\" (input)=\"search()\"\r\n        placeholder=\"Recherchez des chansons, artistes, albums ou playlists\"/>\r\n      <button class=\"bg-green-500 hover:bg-green-600 text-white py-2 px-4 ml-2 rounded transition duration-300\"\r\n              (click)=\"search()\">Rechercher\r\n      </button>\r\n    </div>\r\n    <div class=\"grid grid-cols-3 gap-4\">\r\n      <div *ngFor=\"let album of albums\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <a [routerLink]=\"['/album', album.id]\">\r\n            <p class=\"text-gray-400\">Album</p>\r\n            <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\r\n            <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let artist of artists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <h5 class=\"text-lg font-semibold text-green-500\">\r\n            <p class=\"text-gray-400\">Artiste</p>\r\n            <a routerLink=\"/artist-details/{{ artist.id }}\">{{ artist.name }}</a>\r\n          </h5>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngFor=\"let song of songs\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Chanson</p>\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ song.title }}</h5>\r\n          <div *ngFor=\"let artist of song.artists\">\r\n            <p class=\"text-gray-400\">{{ artist.name }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let playlist of playlists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Playlist</p>\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ playlist.title }}</h5>\r\n          <div *ngFor=\"let song of playlist.songs\">\r\n            <p class=\"text-gray-400\">{{ song.title }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {HttpClient} from '@angular/common/http';\r\nimport {Component} from '@angular/core';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\nimport {Router} from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent {\r\n  searchText: string = '';\r\n  searchQuery: string = 'title';\r\n  songs: any[] = [];\r\n  artists: any[] = [];\r\n  albums: any[] = [];\r\n  playlists: any[] = [];\r\n\r\n  constructor(private spotifyService: SpotifyService, private http: HttpClient, private router: Router) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.spotifyService.getAlbums().subscribe((data: any) => {\r\n      this.albums = Object.values(data);\r\n    });\r\n  }\r\n\r\n  search() {\r\n    // Appel à la méthode de recherche de chansons\r\n    this.spotifyService.searchSongs(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (songs):', response);\r\n      this.songs = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'artistes\r\n    this.spotifyService.searchArtists(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (artists):', response);\r\n      this.artists = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'albums\r\n    this.spotifyService.searchAlbums(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (albums):', response);\r\n      this.albums = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche de playlists\r\n    this.spotifyService.searchPlaylists(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (playlists):', response);\r\n      this.playlists = response;\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/b9752793cd26dd86d1dd9e979cbbf1c72341ae4a0ec8beea73659a23502b609b.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/b9752793cd26dd86d1dd9e979cbbf1c72341ae4a0ec8beea73659a23502b609b.json b/.angular/cache/15.2.5/babel-webpack/b9752793cd26dd86d1dd9e979cbbf1c72341ae4a0ec8beea73659a23502b609b.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/b9752793cd26dd86d1dd9e979cbbf1c72341ae4a0ec8beea73659a23502b609b.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = function (a1) {\n  return [\"/album\", a1];\n};\nfunction SearchComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Album\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"a\", 10);\n    i0.ɵɵelement(5, \"img\", 11);\n    i0.ɵɵelementStart(6, \"h5\", 12);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const album_r4 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, album_r4.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r4.title);\n    i0.ɵɵproperty(\"src\", album_r4.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r4.title);\n  }\n}\nfunction SearchComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"h5\", 12)(3, \"p\", 9);\n    i0.ɵɵtext(4, \"Artiste\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"a\", 10);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const artist_r5 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/artist-details/\", artist_r5.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(artist_r5.name);\n  }\n}\nfunction SearchComponent_div_11_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const artist_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(artist_r8.name);\n  }\n}\nfunction SearchComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Chanson\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h5\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, SearchComponent_div_11_div_6_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const song_r6 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(song_r6.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", song_r6.artists);\n  }\n}\nfunction SearchComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Playlist\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h5\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const playlist_r9 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(playlist_r9.name);\n  }\n}\nexport class SearchComponent {\n  constructor(spotifyService, http, router) {\n    this.spotifyService = spotifyService;\n    this.http = http;\n    this.router = router;\n    this.searchText = '';\n    this.searchQuery = 'title';\n    this.songs = [];\n    this.artists = [];\n    this.albums = [];\n    this.playlists = [];\n  }\n  ngOnInit() {\n    this.spotifyService.getAlbums().subscribe(data => {\n      this.albums = Object.values(data);\n    });\n  }\n  search() {\n    // Appel à la méthode de recherche de chansons\n    this.spotifyService.searchSongs(this.searchText).subscribe(response => {\n      console.log('Search response (songs):', response);\n      this.songs = response;\n    });\n    // Appel à la méthode de recherche d'artistes\n    this.spotifyService.searchArtists(this.searchText).subscribe(response => {\n      console.log('Search response (artists):', response);\n      this.artists = response;\n    });\n    // Appel à la méthode de recherche d'albums\n    this.spotifyService.searchAlbums(this.searchText).subscribe(response => {\n      console.log('Search response (albums):', response);\n      this.albums = response;\n    });\n    // Appel à la méthode de recherche de playlists\n    this.spotifyService.searchPlaylists(this.searchText).subscribe(playlists => this.playlists = playlists);\n  }\n}\nSearchComponent.ɵfac = function SearchComponent_Factory(t) {\n  return new (t || SearchComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchComponent,\n  selectors: [[\"app-search\"]],\n  decls: 13,\n  vars: 5,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-3xl\", \"font-semibold\", \"text-green-500\", \"mb-4\"], [1, \"flex\", \"items-center\", \"mb-5\"], [\"type\", \"text\", \"placeholder\", \"Recherchez des chansons, artistes, albums ou playlists\", 1, \"bg-gray-200\", \"text-gray-800\", \"p-2\", \"rounded\", \"w-full\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-green-500\", \"transition\", \"duration-300\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [1, \"bg-green-500\", \"hover:bg-green-600\", \"text-white\", \"py-2\", \"px-4\", \"ml-2\", \"rounded\", \"transition\", \"duration-300\", 3, \"click\"], [1, \"grid\", \"grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"text-gray-400\"], [3, \"routerLink\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function SearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Spotify Clone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function SearchComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.searchText = $event;\n      })(\"input\", function SearchComponent_Template_input_input_5_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function SearchComponent_Template_button_click_6_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵtext(7, \"Rechercher \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵtemplate(9, SearchComponent_div_9_Template, 8, 6, \"div\", 7);\n      i0.ɵɵtemplate(10, SearchComponent_div_10_Template, 7, 2, \"div\", 7);\n      i0.ɵɵtemplate(11, SearchComponent_div_11_Template, 7, 2, \"div\", 7);\n      i0.ɵɵtemplate(12, SearchComponent_div_12_Template, 6, 1, \"div\", 7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchText);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.artists);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.songs);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.playlists);\n    }\n  },\n  dependencies: [i4.NgForOf, i3.RouterLink, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","SearchComponent","constructor","spotifyService","http","router","ngOnInit","getAlbums","subscribe","data","albums","Object","values","search","searchSongs","searchText","response","console","log","songs","searchArtists","artists","searchAlbums","searchPlaylists","playlists","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\search\\search.component.html","C:\\IUT\\spotizer\\src\\app\\search\\search.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\r\n  <div class=\"container mx-auto p-4\">\r\n    <h1 class=\"text-3xl font-semibold text-green-500 mb-4\">Spotify Clone</h1>\r\n    <div class=\"flex items-center mb-5\">\r\n      <input\r\n        class=\"bg-gray-200 text-gray-800 p-2 rounded w-full focus:outline-none focus:ring-2 focus:ring-green-500 transition duration-300\"\r\n        type=\"text\" [(ngModel)]=\"searchText\" (input)=\"search()\"\r\n        placeholder=\"Recherchez des chansons, artistes, albums ou playlists\"/>\r\n      <button class=\"bg-green-500 hover:bg-green-600 text-white py-2 px-4 ml-2 rounded transition duration-300\"\r\n              (click)=\"search()\">Rechercher\r\n      </button>\r\n    </div>\r\n    <div class=\"grid grid-cols-3 gap-4\">\r\n      <div *ngFor=\"let album of albums\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Album</p>\r\n          <a [routerLink]=\"['/album', album.id]\">\r\n            <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\r\n            <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let artist of artists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <h5 class=\"text-lg font-semibold text-green-500\">\r\n            <p class=\"text-gray-400\">Artiste</p>\r\n            <a routerLink=\"/artist-details/{{ artist.id }}\">{{ artist.name }}</a>\r\n          </h5>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngFor=\"let song of songs\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Chanson</p>\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ song.title }}</h5>\r\n          <div *ngFor=\"let artist of song.artists\">\r\n            <p class=\"text-gray-400\">{{ artist.name }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let playlist of playlists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Playlist</p>\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ playlist.name }}</h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {HttpClient} from '@angular/common/http';\r\nimport {Component} from '@angular/core';\r\nimport {Playlist, SpotifyService} from \"../services/spotify.service\";\r\nimport {Router} from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent {\r\n  searchText: string = '';\r\n  searchQuery: string = 'title';\r\n  songs: any[] = [];\r\n  artists: any[] = [];\r\n  albums: any[] = [];\r\n  playlists: Playlist[] = [];\r\n  constructor(private spotifyService: SpotifyService, private http: HttpClient, private router: Router) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.spotifyService.getAlbums().subscribe((data: any) => {\r\n      this.albums = Object.values(data);\r\n    });\r\n  }\r\n\r\n  search() {\r\n    // Appel à la méthode de recherche de chansons\r\n    this.spotifyService.searchSongs(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (songs):', response);\r\n      this.songs = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'artistes\r\n    this.spotifyService.searchArtists(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (artists):', response);\r\n      this.artists = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'albums\r\n    this.spotifyService.searchAlbums(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (albums):', response);\r\n      this.albums = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche de playlists\r\n    this.spotifyService.searchPlaylists(this.searchText).subscribe((playlists => this.playlists = playlists)\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/4e52309b63e9de1e446e9044f4567abff8756ac6435a7473201cee1422599f3e.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/4e52309b63e9de1e446e9044f4567abff8756ac6435a7473201cee1422599f3e.json b/.angular/cache/15.2.5/babel-webpack/4e52309b63e9de1e446e9044f4567abff8756ac6435a7473201cee1422599f3e.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/4e52309b63e9de1e446e9044f4567abff8756ac6435a7473201cee1422599f3e.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./header/header.component\";\nexport class AppComponent {\n  constructor() {\n    this.title = 'Spotizer';\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 2,\n  vars: 0,\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-header\")(1, \"router-outlet\");\n    }\n  },\n  dependencies: [i1.RouterOutlet, i2.HeaderComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAOA,OAAM,MAAOA,YAAY;EALzBC;IAME,UAAK,GAAG,UAAU;;;AADPD,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAE;EAAAC;EAAAC;EAAAC;IAAA;MCPzBC,6BAAyB","names":["AppComponent","constructor","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\app.component.ts","C:\\IUT\\spotizer\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Spotizer';\r\n}\r\n","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n<!--<h1>All Playlists</h1>\r\n<ul>\r\n  <li *ngFor=\"let playlist of playlists\">{{ playlist.name }}</li>\r\n</ul>-->\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/f089a3b2168ce683354e35921423f79b8cbf76d72b31cc17afa3910435938f78.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/f089a3b2168ce683354e35921423f79b8cbf76d72b31cc17afa3910435938f78.json b/.angular/cache/15.2.5/babel-webpack/f089a3b2168ce683354e35921423f79b8cbf76d72b31cc17afa3910435938f78.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/f089a3b2168ce683354e35921423f79b8cbf76d72b31cc17afa3910435938f78.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { from, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n    this.apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    console.log('Search query:', query); // Ajout de l'instruction console.log\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(query: string): Observable<any> {\r\n      return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(\r\n        map((response: any) => {\r\n            if (Array.isArray(response)) {\r\n              return response;\r\n            } else {\r\n              return [response];\r\n            }\r\n          }\r\n        ));\r\n    }*/\n  searchPlaylists(keyword) {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get(url);\n  }\n  getArtistAlbums(artistName, page) {\n    let params = new HttpParams().set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get(this.apiUrls, {\n      params\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAoBA,UAAU,QAAO,sBAAsB;AAC3D,SAAQC,IAAI,EAAEC,GAAG,QAAmB,MAAM;;;AAK1C,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,WAAM,GAAG,0DAA0D;IACnE,YAAO,GAAG,iEAAiE;EAGnF;EAEAC,SAAS;IACP,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,SAAS,CAAC;EAC/C;EAEAC,QAAQ,CAACC,EAAU;IACjB,OAAOT,IAAI,CACTU,KAAK,CAAC,GAAG,IAAI,CAACH,MAAM,WAAWE,EAAE,EAAE,CAAC,CACjCE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACrC;EACH;EACAC,OAAO,CAACL,EAAU;IAChB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,UAAUE,EAAE,EAAE,CAAC;EACpD;EAGAM,WAAW,CAACC,KAAa;IACvB,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,gBAAgBS,KAAK,EAAE,CAAC,CAACC,IAAI,CAC9DhB,GAAG,CAAEW,QAAa,IAAI;MACpB,IAAIM,KAAK,CAACC,OAAO,CAACP,QAAQ,CAAC,EAAE;QAC3B,OAAOA,QAAQ;OAChB,MAAM;QACL,OAAO,CAACA,QAAQ,CAAC;;IAErB,CAAC,CAAC,CACH;EACH;EAEAQ,aAAa,CAACJ,KAAa;IACzB,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,iBAAiBS,KAAK,EAAE,CAAC,CAACC,IAAI,CAC/DhB,GAAG,CAAEW,QAAa,IAAI;MACpB,IAAIM,KAAK,CAACC,OAAO,CAACP,QAAQ,CAAC,EAAE;QAC3B,OAAOA,QAAQ;OAChB,MAAM;QACL,OAAO,CAACA,QAAQ,CAAC;;IAErB,CAAC,CAAC,CACH;EACH;EAGAS,YAAY,CAACL,KAAa;IACxBM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEP,KAAK,CAAC,CAAC,CAAC;IACrC,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,iBAAiBS,KAAK,EAAE,CAAC,CAACC,IAAI,CAC/DhB,GAAG,CAAEW,QAAa,IAAI;MAClB,IAAIM,KAAK,CAACC,OAAO,CAACP,QAAQ,CAAC,EAAE;QAC3B,OAAOA,QAAQ;OAChB,MAAM;QACL,OAAO,CAACA,QAAQ,CAAC;;IAErB,CAAC,CACF,CAAC;EACN;EAEF;;;;;;;;;;;EAWEY,eAAe,CAACC,OAAe;IAC7B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACnB,MAAM,gBAAgBkB,OAAO,EAAE;IACnD,OAAO,IAAI,CAACrB,IAAI,CAACE,GAAG,CAAaoB,GAAG,CAAC;EACvC;EAEAC,eAAe,CAACC,UAAkB,EAAEC,IAAa;IAC/C,IAAIC,MAAM,GAAG,IAAI/B,UAAU,EAAE,CAC1BgC,GAAG,CAAC,aAAa,EAAEH,UAAU,CAAC;IACjC,IAAIC,IAAI,EAAE;MACRC,MAAM,GAAGA,MAAM,CAACC,GAAG,CAAC,MAAM,EAAEF,IAAI,CAACG,QAAQ,EAAE,CAAC;;IAE9C,OAAO,IAAI,CAAC5B,IAAI,CAACE,GAAG,CAAU,IAAI,CAAC2B,OAAO,EAAE;MAAEH;IAAM,CAAE,CAAC;EACzD;;AApFW5B,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAgC,SAAdhC,cAAc;EAAAiC,YAFb;AAAM","names":["HttpParams","from","map","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","console","log","searchPlaylists","keyword","url","getArtistAlbums","artistName","page","params","set","toString","apiUrls","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {from, map, Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  private apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n\n  searchAlbums(query: string): Observable<any> {\n    console.log('Search query:', query); // Ajout de l'instruction console.log\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n/*  searchPlaylists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }*/\n  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }\n\n  getArtistAlbums(artistName: string, page?: number): Observable<Album[]> {\n    let params = new HttpParams()\n      .set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get<Album[]>(this.apiUrls, { params });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/14788d46555e9fe83c57993b7d1f3824ec2e5946d2d322f9cd0899de6757b46f.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/14788d46555e9fe83c57993b7d1f3824ec2e5946d2d322f9cd0899de6757b46f.json b/.angular/cache/15.2.5/babel-webpack/14788d46555e9fe83c57993b7d1f3824ec2e5946d2d322f9cd0899de6757b46f.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/14788d46555e9fe83c57993b7d1f3824ec2e5946d2d322f9cd0899de6757b46f.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/spotify.service\";\nexport class VideoPlayerComponent {\n  constructor(route, spotifyService) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n    this.videoUrl = '';\n  }\n  ngOnInit() {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.spotifyService.getSong(id).subscribe(data => {\n      this.song = data;\n      if (this.song && this.song.youtube) {\n        this.videoUrl = this.song.youtube.replace(\"watch?v=\", \"embed/\");\n      }\n    });\n  }\n}\nVideoPlayerComponent.ɵfac = function VideoPlayerComponent_Factory(t) {\n  return new (t || VideoPlayerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService));\n};\nVideoPlayerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VideoPlayerComponent,\n  selectors: [[\"app-video-player\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [\"routerLink\", \"/\", 1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", \"mb-4\"], [1, \"bg-black\", \"rounded\", \"p-4\"], [\"width\", \"100%\", \"height\", \"315\", \"frameborder\", \"0\", \"allowfullscreen\", \"\", 3, \"src\"]],\n  template: function VideoPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵtext(2, \"Retour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelement(4, \"iframe\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"src\", ctx.videoUrl, i0.ɵɵsanitizeResourceUrl);\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,KAAqB,EACrBC,cAA8B;IAD9B,UAAK,GAALD,KAAK;IACL,mBAAc,GAAdC,cAAc;IAJxB,aAAQ,GAAW,EAAE;EAMrB;EAEAC,QAAQ;IACN,MAAMC,EAAE,GAAG,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAClD,IAAI,CAACL,cAAc,CAACM,OAAO,CAACJ,EAAE,CAAC,CAACK,SAAS,CAAEC,IAAS,IAAI;MACtD,IAAI,CAACC,IAAI,GAAGD,IAAI;MAChB,IAAI,IAAI,CAACC,IAAI,IAAI,IAAI,CAACA,IAAI,CAACC,OAAO,EAAE;QAClC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACF,IAAI,CAACC,OAAO,CAACE,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC;;IAEnE,CAAC,CAAC;EACJ;;AAlBWf,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVjCC,8BAAmC;MAC4CA,sBAAM;MAAAA,iBAAS;MAC5FA,8BAAkC;MAChCA,4BAA4F;MAC9FA,iBAAM;;;MAD8BA,eAAgB;MAAhBA,4DAAgB","names":["VideoPlayerComponent","constructor","route","spotifyService","ngOnInit","id","snapshot","paramMap","get","getSong","subscribe","data","song","youtube","videoUrl","replace","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.ts","C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-video-player',\r\n  templateUrl: './video-player.component.html',\r\n  styleUrls: ['./video-player.component.css']\r\n})\r\nexport class VideoPlayerComponent {\r\n  song: any;\r\n  videoUrl: string = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.spotifyService.getSong(id).subscribe((data: any) => {\r\n      this.song = data;\r\n      if (this.song && this.song.youtube) {\r\n        this.videoUrl = this.song.youtube.replace(\"watch?v=\", \"embed/\");\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <iframe width=\"100%\" height=\"315\" [src]=\"videoUrl\" frameborder=\"0\" allowfullscreen></iframe>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/5150c30c31e6234fb43e1d5dbaf89da17da9780aa4951a0e56807a51665f7ee6.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/5150c30c31e6234fb43e1d5dbaf89da17da9780aa4951a0e56807a51665f7ee6.json b/.angular/cache/15.2.5/babel-webpack/5150c30c31e6234fb43e1d5dbaf89da17da9780aa4951a0e56807a51665f7ee6.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/5150c30c31e6234fb43e1d5dbaf89da17da9780aa4951a0e56807a51665f7ee6.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = function (a1) {\n  return [\"/album\", a1];\n};\nfunction SearchComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Album\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"a\", 10);\n    i0.ɵɵelement(5, \"img\", 11);\n    i0.ɵɵelementStart(6, \"h5\", 12);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const album_r4 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, album_r4.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r4.title);\n    i0.ɵɵproperty(\"src\", album_r4.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r4.title);\n  }\n}\nfunction SearchComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"h5\", 12)(3, \"p\", 9);\n    i0.ɵɵtext(4, \"Artiste\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"a\", 10);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const artist_r5 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/artist-details/\", artist_r5.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(artist_r5.name);\n  }\n}\nfunction SearchComponent_div_11_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const artist_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(artist_r8.name);\n  }\n}\nfunction SearchComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Chanson\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h5\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, SearchComponent_div_11_div_6_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const song_r6 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(song_r6.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", song_r6.artists);\n  }\n}\nfunction SearchComponent_div_12_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const song_r11 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(song_r11.title);\n  }\n}\nfunction SearchComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Playlist\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h5\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, SearchComponent_div_12_div_6_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const playlist_r9 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(playlist_r9.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", playlist_r9.songs);\n  }\n}\nexport class SearchComponent {\n  constructor(spotifyService, http, router) {\n    this.spotifyService = spotifyService;\n    this.http = http;\n    this.router = router;\n    this.searchText = '';\n    this.searchQuery = 'title';\n    this.songs = [];\n    this.artists = [];\n    this.albums = [];\n    this.playlists = [];\n  }\n  ngOnInit() {\n    this.spotifyService.getAlbums().subscribe(data => {\n      this.albums = Object.values(data);\n    });\n  }\n  search() {\n    // Appel à la méthode de recherche de chansons\n    this.spotifyService.searchSongs(this.searchText).subscribe(response => {\n      console.log('Search response (songs):', response);\n      this.songs = response;\n    });\n    // Appel à la méthode de recherche d'artistes\n    this.spotifyService.searchArtists(this.searchText).subscribe(response => {\n      console.log('Search response (artists):', response);\n      this.artists = response;\n    });\n    // Appel à la méthode de recherche d'albums\n    this.spotifyService.searchAlbums(this.searchText).subscribe(response => {\n      console.log('Search response (albums):', response);\n      this.albums = response;\n    });\n    // Appel à la méthode de recherche de playlists\n    this.spotifyService.searchPlaylists(this.searchText).subscribe(response => {\n      console.log('Search response (playlists):', response);\n      this.playlists = response;\n    });\n  }\n}\nSearchComponent.ɵfac = function SearchComponent_Factory(t) {\n  return new (t || SearchComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchComponent,\n  selectors: [[\"app-search\"]],\n  decls: 13,\n  vars: 5,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-3xl\", \"font-semibold\", \"text-green-500\", \"mb-4\"], [1, \"flex\", \"items-center\", \"mb-5\"], [\"type\", \"text\", \"placeholder\", \"Recherchez des chansons, artistes, albums ou playlists\", 1, \"bg-gray-200\", \"text-gray-800\", \"p-2\", \"rounded\", \"w-full\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-green-500\", \"transition\", \"duration-300\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [1, \"bg-green-500\", \"hover:bg-green-600\", \"text-white\", \"py-2\", \"px-4\", \"ml-2\", \"rounded\", \"transition\", \"duration-300\", 3, \"click\"], [1, \"grid\", \"grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"text-gray-400\"], [3, \"routerLink\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function SearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Spotify Clone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function SearchComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.searchText = $event;\n      })(\"input\", function SearchComponent_Template_input_input_5_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function SearchComponent_Template_button_click_6_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵtext(7, \"Rechercher \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵtemplate(9, SearchComponent_div_9_Template, 8, 6, \"div\", 7);\n      i0.ɵɵtemplate(10, SearchComponent_div_10_Template, 7, 2, \"div\", 7);\n      i0.ɵɵtemplate(11, SearchComponent_div_11_Template, 7, 2, \"div\", 7);\n      i0.ɵɵtemplate(12, SearchComponent_div_12_Template, 7, 2, \"div\", 7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchText);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.artists);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.songs);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.playlists);\n    }\n  },\n  dependencies: [i4.NgForOf, i3.RouterLink, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","SearchComponent","constructor","spotifyService","http","router","ngOnInit","getAlbums","subscribe","data","albums","Object","values","search","searchSongs","searchText","response","console","log","songs","searchArtists","artists","searchAlbums","searchPlaylists","playlists","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\search\\search.component.html","C:\\IUT\\spotizer\\src\\app\\search\\search.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\r\n  <div class=\"container mx-auto p-4\">\r\n    <h1 class=\"text-3xl font-semibold text-green-500 mb-4\">Spotify Clone</h1>\r\n    <div class=\"flex items-center mb-5\">\r\n      <input\r\n        class=\"bg-gray-200 text-gray-800 p-2 rounded w-full focus:outline-none focus:ring-2 focus:ring-green-500 transition duration-300\"\r\n        type=\"text\" [(ngModel)]=\"searchText\" (input)=\"search()\"\r\n        placeholder=\"Recherchez des chansons, artistes, albums ou playlists\"/>\r\n      <button class=\"bg-green-500 hover:bg-green-600 text-white py-2 px-4 ml-2 rounded transition duration-300\"\r\n              (click)=\"search()\">Rechercher\r\n      </button>\r\n    </div>\r\n    <div class=\"grid grid-cols-3 gap-4\">\r\n      <div *ngFor=\"let album of albums\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Album</p>\r\n          <a [routerLink]=\"['/album', album.id]\">\r\n            <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\r\n            <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let artist of artists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <h5 class=\"text-lg font-semibold text-green-500\">\r\n            <p class=\"text-gray-400\">Artiste</p>\r\n            <a routerLink=\"/artist-details/{{ artist.id }}\">{{ artist.name }}</a>\r\n          </h5>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngFor=\"let song of songs\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Chanson</p>\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ song.title }}</h5>\r\n          <div *ngFor=\"let artist of song.artists\">\r\n            <p class=\"text-gray-400\">{{ artist.name }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let playlist of playlists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Playlist</p>\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ playlist.title }}</h5>\r\n          <div *ngFor=\"let song of playlist.songs\">\r\n            <p class=\"text-gray-400\">{{ song.title }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {HttpClient} from '@angular/common/http';\r\nimport {Component} from '@angular/core';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\nimport {Router} from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent {\r\n  searchText: string = '';\r\n  searchQuery: string = 'title';\r\n  songs: any[] = [];\r\n  artists: any[] = [];\r\n  albums: any[] = [];\r\n  playlists: any[] = [];\r\n\r\n  constructor(private spotifyService: SpotifyService, private http: HttpClient, private router: Router) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.spotifyService.getAlbums().subscribe((data: any) => {\r\n      this.albums = Object.values(data);\r\n    });\r\n  }\r\n\r\n  search() {\r\n    // Appel à la méthode de recherche de chansons\r\n    this.spotifyService.searchSongs(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (songs):', response);\r\n      this.songs = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'artistes\r\n    this.spotifyService.searchArtists(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (artists):', response);\r\n      this.artists = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'albums\r\n    this.spotifyService.searchAlbums(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (albums):', response);\r\n      this.albums = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche de playlists\r\n    this.spotifyService.searchPlaylists(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (playlists):', response);\r\n      this.playlists = response;\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/032122cf7b754e880c43d7deab8a586ba9f0616e63b3aff17b3d9eef29501e25.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/032122cf7b754e880c43d7deab8a586ba9f0616e63b3aff17b3d9eef29501e25.json b/.angular/cache/15.2.5/babel-webpack/032122cf7b754e880c43d7deab8a586ba9f0616e63b3aff17b3d9eef29501e25.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/032122cf7b754e880c43d7deab8a586ba9f0616e63b3aff17b3d9eef29501e25.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/spotify.service\";\nimport * as i3 from \"@angular/platform-browser\";\nexport class VideoPlayerComponent {\n  constructor(route, spotifyService, sanitizer) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n    this.sanitizer = sanitizer;\n    this.videoUrl = '';\n  }\n  ngOnInit() {\n    // @ts-ignore\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.spotifyService.getSong(id).subscribe(data => {\n      this.song = data;\n      if (this.song && this.song.youtube) {\n        this.videoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.song.youtube.replace(\"watch?v=\", \"embed/\"));\n      }\n    });\n  }\n}\nVideoPlayerComponent.ɵfac = function VideoPlayerComponent_Factory(t) {\n  return new (t || VideoPlayerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService), i0.ɵɵdirectiveInject(i3.DomSanitizer));\n};\nVideoPlayerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VideoPlayerComponent,\n  selectors: [[\"app-video-player\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [\"routerLink\", \"/\", 1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", \"mb-4\"], [1, \"bg-black\", \"rounded\", \"p-4\"], [\"width\", \"100%\", \"height\", \"600\", \"frameborder\", \"0\", \"allow\", \"autoplay; encrypted-media\", \"allowfullscreen\", \"\", 3, \"src\"]],\n  template: function VideoPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵtext(2, \"Retour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelement(4, \"iframe\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"src\", ctx.videoUrl, i0.ɵɵsanitizeResourceUrl);\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAWA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,KAAqB,EACrBC,cAA8B,EAC9BC,SAAuB;IAFvB,UAAK,GAALF,KAAK;IACL,mBAAc,GAAdC,cAAc;IACd,cAAS,GAATC,SAAS;IALnB,aAAQ,GAAoB,EAAE;EAM1B;EAEJC,QAAQ;IACN;IACA,MAAMC,EAAE,GAAG,CAAC,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAClD,IAAI,CAACN,cAAc,CAACO,OAAO,CAACJ,EAAE,CAAC,CAACK,SAAS,CAAEC,IAAS,IAAI;MACtD,IAAI,CAACC,IAAI,GAAGD,IAAI;MAChB,IAAI,IAAI,CAACC,IAAI,IAAI,IAAI,CAACA,IAAI,CAACC,OAAO,EAAE;QAClC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACX,SAAS,CAACY,8BAA8B,CAAC,IAAI,CAACH,IAAI,CAACC,OAAO,CAACG,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;;IAElH,CAAC,CAAC;EACJ;;AAnBWjB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXjCC,8BAAmC;MAC4CA,sBAAM;MAAAA,iBAAS;MAC5FA,8BAAkC;MAChCA,4BAA8H;MAChIA,iBAAM;;;MAD8BA,eAAgB;MAAhBA,4DAAgB","names":["VideoPlayerComponent","constructor","route","spotifyService","sanitizer","ngOnInit","id","snapshot","paramMap","get","getSong","subscribe","data","song","youtube","videoUrl","bypassSecurityTrustResourceUrl","replace","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.ts","C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\nimport {DomSanitizer, SafeResourceUrl} from \"@angular/platform-browser\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-video-player',\r\n  templateUrl: './video-player.component.html',\r\n  styleUrls: ['./video-player.component.css']\r\n})\r\nexport class VideoPlayerComponent {\r\n  song: any;\r\n  videoUrl: SafeResourceUrl = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService,\r\n    private sanitizer: DomSanitizer\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // @ts-ignore\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.spotifyService.getSong(id).subscribe((data: any) => {\r\n      this.song = data;\r\n      if (this.song && this.song.youtube) {\r\n        this.videoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.song.youtube.replace(\"watch?v=\", \"embed/\"));\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <iframe width=\"100%\" height=\"600\" [src]=\"videoUrl\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/41bbcb23ed5d54d8d51cbc34f6ccadfee38785259feb171d46298c1579f74ff0.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/41bbcb23ed5d54d8d51cbc34f6ccadfee38785259feb171d46298c1579f74ff0.json b/.angular/cache/15.2.5/babel-webpack/41bbcb23ed5d54d8d51cbc34f6ccadfee38785259feb171d46298c1579f74ff0.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/41bbcb23ed5d54d8d51cbc34f6ccadfee38785259feb171d46298c1579f74ff0.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = function (a1) {\n  return [\"/album\", a1];\n};\nfunction SearchComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Album\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"a\", 10);\n    i0.ɵɵelement(5, \"img\", 11);\n    i0.ɵɵelementStart(6, \"h5\", 12);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const album_r4 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, album_r4.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r4.title);\n    i0.ɵɵproperty(\"src\", album_r4.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r4.title);\n  }\n}\nfunction SearchComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"h5\", 12)(3, \"p\", 9);\n    i0.ɵɵtext(4, \"Artiste\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"a\", 10);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const artist_r5 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/artist-details/\", artist_r5.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(artist_r5.name);\n  }\n}\nfunction SearchComponent_div_11_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const artist_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(artist_r8.name);\n  }\n}\nfunction SearchComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Chanson\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h5\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, SearchComponent_div_11_div_6_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const song_r6 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(song_r6.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", song_r6.artists);\n  }\n}\nfunction SearchComponent_div_12_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const song_r11 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(song_r11.title);\n  }\n}\nfunction SearchComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Playlist\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h5\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, SearchComponent_div_12_div_6_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const playlist_r9 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(playlist_r9.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", playlist_r9.songs);\n  }\n}\nexport class SearchComponent {\n  constructor(spotifyService, http, router) {\n    this.spotifyService = spotifyService;\n    this.http = http;\n    this.router = router;\n    this.searchText = '';\n    this.searchQuery = 'title';\n    this.songs = [];\n    this.artists = [];\n    this.albums = [];\n    this.playlists = [];\n  }\n  ngOnInit() {\n    this.spotifyService.getAlbums().subscribe(data => {\n      this.albums = Object.values(data);\n    });\n  }\n  search() {\n    // Appel à la méthode de recherche de chansons\n    this.spotifyService.searchSongs(this.searchText).subscribe(response => {\n      console.log('Search response (songs):', response);\n      this.songs = response;\n    });\n    // Appel à la méthode de recherche d'artistes\n    this.spotifyService.searchArtists(this.searchText).subscribe(response => {\n      console.log('Search response (artists):', response);\n      this.artists = response;\n    });\n    // Appel à la méthode de recherche d'albums\n    this.spotifyService.searchAlbums(this.searchText).subscribe(response => {\n      console.log('Search response (albums):', response);\n      this.albums = response;\n    });\n    // Appel à la méthode de recherche de playlists\n    this.spotifyService.searchPlaylists(this.searchText).subscribe(playlists => this.playlists = playlists);\n  }\n}\nSearchComponent.ɵfac = function SearchComponent_Factory(t) {\n  return new (t || SearchComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchComponent,\n  selectors: [[\"app-search\"]],\n  decls: 13,\n  vars: 5,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-3xl\", \"font-semibold\", \"text-green-500\", \"mb-4\"], [1, \"flex\", \"items-center\", \"mb-5\"], [\"type\", \"text\", \"placeholder\", \"Recherchez des chansons, artistes, albums ou playlists\", 1, \"bg-gray-200\", \"text-gray-800\", \"p-2\", \"rounded\", \"w-full\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-green-500\", \"transition\", \"duration-300\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [1, \"bg-green-500\", \"hover:bg-green-600\", \"text-white\", \"py-2\", \"px-4\", \"ml-2\", \"rounded\", \"transition\", \"duration-300\", 3, \"click\"], [1, \"grid\", \"grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"text-gray-400\"], [3, \"routerLink\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function SearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Spotify Clone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function SearchComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.searchText = $event;\n      })(\"input\", function SearchComponent_Template_input_input_5_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function SearchComponent_Template_button_click_6_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵtext(7, \"Rechercher \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵtemplate(9, SearchComponent_div_9_Template, 8, 6, \"div\", 7);\n      i0.ɵɵtemplate(10, SearchComponent_div_10_Template, 7, 2, \"div\", 7);\n      i0.ɵɵtemplate(11, SearchComponent_div_11_Template, 7, 2, \"div\", 7);\n      i0.ɵɵtemplate(12, SearchComponent_div_12_Template, 7, 2, \"div\", 7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchText);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.artists);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.songs);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.playlists);\n    }\n  },\n  dependencies: [i4.NgForOf, i3.RouterLink, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","SearchComponent","constructor","spotifyService","http","router","ngOnInit","getAlbums","subscribe","data","albums","Object","values","search","searchSongs","searchText","response","console","log","songs","searchArtists","artists","searchAlbums","searchPlaylists","playlists","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\search\\search.component.html","C:\\IUT\\spotizer\\src\\app\\search\\search.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\r\n  <div class=\"container mx-auto p-4\">\r\n    <h1 class=\"text-3xl font-semibold text-green-500 mb-4\">Spotify Clone</h1>\r\n    <div class=\"flex items-center mb-5\">\r\n      <input\r\n        class=\"bg-gray-200 text-gray-800 p-2 rounded w-full focus:outline-none focus:ring-2 focus:ring-green-500 transition duration-300\"\r\n        type=\"text\" [(ngModel)]=\"searchText\" (input)=\"search()\"\r\n        placeholder=\"Recherchez des chansons, artistes, albums ou playlists\"/>\r\n      <button class=\"bg-green-500 hover:bg-green-600 text-white py-2 px-4 ml-2 rounded transition duration-300\"\r\n              (click)=\"search()\">Rechercher\r\n      </button>\r\n    </div>\r\n    <div class=\"grid grid-cols-3 gap-4\">\r\n      <div *ngFor=\"let album of albums\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Album</p>\r\n          <a [routerLink]=\"['/album', album.id]\">\r\n            <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\r\n            <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let artist of artists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <h5 class=\"text-lg font-semibold text-green-500\">\r\n            <p class=\"text-gray-400\">Artiste</p>\r\n            <a routerLink=\"/artist-details/{{ artist.id }}\">{{ artist.name }}</a>\r\n          </h5>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngFor=\"let song of songs\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Chanson</p>\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ song.title }}</h5>\r\n          <div *ngFor=\"let artist of song.artists\">\r\n            <p class=\"text-gray-400\">{{ artist.name }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let playlist of playlists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Playlist</p>\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ playlist.title }}</h5>\r\n          <div *ngFor=\"let song of playlist.songs\">\r\n            <p class=\"text-gray-400\">{{ song.title }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {HttpClient} from '@angular/common/http';\r\nimport {Component} from '@angular/core';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\nimport {Router} from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent {\r\n  searchText: string = '';\r\n  searchQuery: string = 'title';\r\n  songs: any[] = [];\r\n  artists: any[] = [];\r\n  albums: any[] = [];\r\n  playlists: any[] = [];\r\n\r\n  constructor(private spotifyService: SpotifyService, private http: HttpClient, private router: Router) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.spotifyService.getAlbums().subscribe((data: any) => {\r\n      this.albums = Object.values(data);\r\n    });\r\n  }\r\n\r\n  search() {\r\n    // Appel à la méthode de recherche de chansons\r\n    this.spotifyService.searchSongs(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (songs):', response);\r\n      this.songs = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'artistes\r\n    this.spotifyService.searchArtists(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (artists):', response);\r\n      this.artists = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'albums\r\n    this.spotifyService.searchAlbums(this.searchText).subscribe((response: any) => {\r\n      console.log('Search response (albums):', response);\r\n      this.albums = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche de playlists\r\n    this.spotifyService.searchPlaylists(this.searchText).subscribe((playlists => this.playlists = playlists)\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/bd348e977ec71ad98c8f20291298a083cc7638c2653bbd0ab48e3a5958ac8fc4.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/bd348e977ec71ad98c8f20291298a083cc7638c2653bbd0ab48e3a5958ac8fc4.json b/.angular/cache/15.2.5/babel-webpack/bd348e977ec71ad98c8f20291298a083cc7638c2653bbd0ab48e3a5958ac8fc4.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/bd348e977ec71ad98c8f20291298a083cc7638c2653bbd0ab48e3a5958ac8fc4.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { from, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n    this.apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    console.log('Search query:', query); // Ajout de l'instruction console.log\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(query: string): Observable<any> {\r\n      return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(\r\n        map((response: any) => {\r\n            if (Array.isArray(response)) {\r\n              return response;\r\n            } else {\r\n              return [response];\r\n            }\r\n          }\r\n        ));\r\n    }*/\n  searchPlaylists(keyword) {\n    const url = `${this.apiUrl}/playlists?=${keyword}`;\n    return this.http.get(url);\n  }\n  getArtistAlbums(artistName, page) {\n    let params = new HttpParams().set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get(this.apiUrls, {\n      params\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAoBA,UAAU,QAAO,sBAAsB;AAC3D,SAAQC,IAAI,EAAEC,GAAG,QAAmB,MAAM;;;AAK1C,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,WAAM,GAAG,0DAA0D;IACnE,YAAO,GAAG,iEAAiE;EAGnF;EAEAC,SAAS;IACP,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,SAAS,CAAC;EAC/C;EAEAC,QAAQ,CAACC,EAAU;IACjB,OAAOT,IAAI,CACTU,KAAK,CAAC,GAAG,IAAI,CAACH,MAAM,WAAWE,EAAE,EAAE,CAAC,CACjCE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACrC;EACH;EACAC,OAAO,CAACL,EAAU;IAChB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,UAAUE,EAAE,EAAE,CAAC;EACpD;EAGAM,WAAW,CAACC,KAAa;IACvB,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,gBAAgBS,KAAK,EAAE,CAAC,CAACC,IAAI,CAC9DhB,GAAG,CAAEW,QAAa,IAAI;MACpB,IAAIM,KAAK,CAACC,OAAO,CAACP,QAAQ,CAAC,EAAE;QAC3B,OAAOA,QAAQ;OAChB,MAAM;QACL,OAAO,CAACA,QAAQ,CAAC;;IAErB,CAAC,CAAC,CACH;EACH;EAEAQ,aAAa,CAACJ,KAAa;IACzB,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,iBAAiBS,KAAK,EAAE,CAAC,CAACC,IAAI,CAC/DhB,GAAG,CAAEW,QAAa,IAAI;MACpB,IAAIM,KAAK,CAACC,OAAO,CAACP,QAAQ,CAAC,EAAE;QAC3B,OAAOA,QAAQ;OAChB,MAAM;QACL,OAAO,CAACA,QAAQ,CAAC;;IAErB,CAAC,CAAC,CACH;EACH;EAGAS,YAAY,CAACL,KAAa;IACxBM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEP,KAAK,CAAC,CAAC,CAAC;IACrC,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,iBAAiBS,KAAK,EAAE,CAAC,CAACC,IAAI,CAC/DhB,GAAG,CAAEW,QAAa,IAAI;MAClB,IAAIM,KAAK,CAACC,OAAO,CAACP,QAAQ,CAAC,EAAE;QAC3B,OAAOA,QAAQ;OAChB,MAAM;QACL,OAAO,CAACA,QAAQ,CAAC;;IAErB,CAAC,CACF,CAAC;EACN;EAEF;;;;;;;;;;;EAWEY,eAAe,CAACC,OAAe;IAC7B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACnB,MAAM,eAAekB,OAAO,EAAE;IAClD,OAAO,IAAI,CAACrB,IAAI,CAACE,GAAG,CAAaoB,GAAG,CAAC;EACvC;EAEAC,eAAe,CAACC,UAAkB,EAAEC,IAAa;IAC/C,IAAIC,MAAM,GAAG,IAAI/B,UAAU,EAAE,CAC1BgC,GAAG,CAAC,aAAa,EAAEH,UAAU,CAAC;IACjC,IAAIC,IAAI,EAAE;MACRC,MAAM,GAAGA,MAAM,CAACC,GAAG,CAAC,MAAM,EAAEF,IAAI,CAACG,QAAQ,EAAE,CAAC;;IAE9C,OAAO,IAAI,CAAC5B,IAAI,CAACE,GAAG,CAAU,IAAI,CAAC2B,OAAO,EAAE;MAAEH;IAAM,CAAE,CAAC;EACzD;;AApFW5B,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAgC,SAAdhC,cAAc;EAAAiC,YAFb;AAAM","names":["HttpParams","from","map","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","console","log","searchPlaylists","keyword","url","getArtistAlbums","artistName","page","params","set","toString","apiUrls","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {from, map, Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  private apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n\n  searchAlbums(query: string): Observable<any> {\n    console.log('Search query:', query); // Ajout de l'instruction console.log\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n/*  searchPlaylists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }*/\n  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists?=${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }\n\n  getArtistAlbums(artistName: string, page?: number): Observable<Album[]> {\n    let params = new HttpParams()\n      .set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get<Album[]>(this.apiUrls, { params });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/d9629e2b70ffc9c58b4ac6ae2087419b8488844ffe22c462e7802e765c74c84e.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/d9629e2b70ffc9c58b4ac6ae2087419b8488844ffe22c462e7802e765c74c84e.json b/.angular/cache/15.2.5/babel-webpack/d9629e2b70ffc9c58b4ac6ae2087419b8488844ffe22c462e7802e765c74c84e.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/d9629e2b70ffc9c58b4ac6ae2087419b8488844ffe22c462e7802e765c74c84e.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/spotify.service\";\nexport class VideoPlayerComponent {\n  constructor(route, spotifyService) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n    this.videoUrl = '';\n  }\n  ngOnInit() {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.spotifyService.getSong(id).subscribe(data => {\n      this.song = data;\n      if (this.song && this.song.youtube) {\n        this.videoUrl = this.song.youtube.replace(\"watch?v=\", \"embed/\");\n      }\n    });\n  }\n}\nVideoPlayerComponent.ɵfac = function VideoPlayerComponent_Factory(t) {\n  return new (t || VideoPlayerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService));\n};\nVideoPlayerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VideoPlayerComponent,\n  selectors: [[\"app-video-player\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [\"routerLink\", \"/\", 1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", \"mb-4\"], [1, \"bg-black\", \"rounded\", \"p-4\"], [\"width\", \"100%\", \"height\", \"500\", \"frameborder\", \"0\", \"allow\", \"autoplay; encrypted-media\", \"allowfullscreen\", \"\", 3, \"src\"]],\n  template: function VideoPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵtext(2, \"Retour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelement(4, \"iframe\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"src\", ctx.videoUrl, i0.ɵɵsanitizeResourceUrl);\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,KAAqB,EACrBC,cAA8B;IAD9B,UAAK,GAALD,KAAK;IACL,mBAAc,GAAdC,cAAc;IAJxB,aAAQ,GAAW,EAAE;EAMrB;EAEAC,QAAQ;IACN,MAAMC,EAAE,GAAG,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAClD,IAAI,CAACL,cAAc,CAACM,OAAO,CAACJ,EAAE,CAAC,CAACK,SAAS,CAAEC,IAAS,IAAI;MACtD,IAAI,CAACC,IAAI,GAAGD,IAAI;MAChB,IAAI,IAAI,CAACC,IAAI,IAAI,IAAI,CAACA,IAAI,CAACC,OAAO,EAAE;QAClC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACF,IAAI,CAACC,OAAO,CAACE,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC;;IAEnE,CAAC,CAAC;EACJ;;AAlBWf,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVjCC,8BAAmC;MAC4CA,sBAAM;MAAAA,iBAAS;MAC5FA,8BAAkC;MAChCA,4BAA8H;MAChIA,iBAAM;;;MAD8BA,eAAgB;MAAhBA,4DAAgB","names":["VideoPlayerComponent","constructor","route","spotifyService","ngOnInit","id","snapshot","paramMap","get","getSong","subscribe","data","song","youtube","videoUrl","replace","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.ts","C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-video-player',\r\n  templateUrl: './video-player.component.html',\r\n  styleUrls: ['./video-player.component.css']\r\n})\r\nexport class VideoPlayerComponent {\r\n  song: any;\r\n  videoUrl: string = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.spotifyService.getSong(id).subscribe((data: any) => {\r\n      this.song = data;\r\n      if (this.song && this.song.youtube) {\r\n        this.videoUrl = this.song.youtube.replace(\"watch?v=\", \"embed/\");\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <iframe width=\"100%\" height=\"500\" [src]=\"videoUrl\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/250d97e022bbbe3afb377b0a6f8f32d00be0b16e7113b1dec04fb7bbb85e0893.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/250d97e022bbbe3afb377b0a6f8f32d00be0b16e7113b1dec04fb7bbb85e0893.json b/.angular/cache/15.2.5/babel-webpack/250d97e022bbbe3afb377b0a6f8f32d00be0b16e7113b1dec04fb7bbb85e0893.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/250d97e022bbbe3afb377b0a6f8f32d00be0b16e7113b1dec04fb7bbb85e0893.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/spotify.service\";\nexport class VideoPlayerComponent {\n  constructor(route, spotifyService) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n    this.videoUrl = '';\n  }\n  ngOnInit() {\n    // @ts-ignore\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.videoUrl = `https://www.youtube.com/embed/${id}`;\n  }\n}\nVideoPlayerComponent.ɵfac = function VideoPlayerComponent_Factory(t) {\n  return new (t || VideoPlayerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService));\n};\nVideoPlayerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VideoPlayerComponent,\n  selectors: [[\"app-video-player\"]],\n  decls: 5,\n  vars: 0,\n  consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [\"routerLink\", \"/\", 1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", \"mb-4\"], [1, \"bg-black\", \"rounded\", \"p-4\"], [\"width\", \"100%\", \"height\", \"315\", \"src\", \"https://www.youtube.com/embed/1hLIXrlpRe8\", \"frameborder\", \"0\", \"allowfullscreen\", \"\"]],\n  template: function VideoPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵtext(2, \"Retour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelement(4, \"iframe\", 3);\n      i0.ɵɵelementEnd()();\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,KAAqB,EACrBC,cAA8B;IAD9B,UAAK,GAALD,KAAK;IACL,mBAAc,GAAdC,cAAc;IAJxB,aAAQ,GAAW,EAAE;EAKlB;EAEHC,QAAQ;IACN;IACA,MAAMC,EAAE,GAAG,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAClD,IAAI,CAACC,QAAQ,GAAG,iCAAiCJ,EAAE,EAAE;EACvD;;AAbWL,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVjCC,8BAAmC;MAC4CA,sBAAM;MAAAA,iBAAS;MAC5FA,8BAAkC;MAChCA,4BAA2H;MAC7HA,iBAAM","names":["VideoPlayerComponent","constructor","route","spotifyService","ngOnInit","id","snapshot","paramMap","get","videoUrl","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.ts","C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-video-player',\r\n  templateUrl: './video-player.component.html',\r\n  styleUrls: ['./video-player.component.css']\r\n})\r\nexport class VideoPlayerComponent {\r\n  song: any;\r\n  videoUrl: string = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // @ts-ignore\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.videoUrl = `https://www.youtube.com/embed/${id}`;\r\n  }\r\n}\r\n","<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <iframe width=\"100%\" height=\"315\" src=\"https://www.youtube.com/embed/1hLIXrlpRe8\" frameborder=\"0\" allowfullscreen></iframe>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/55b1114bb0fdbd15bc0b410d151844a9f973d7d57af4c4f33343775ef453f362.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/55b1114bb0fdbd15bc0b410d151844a9f973d7d57af4c4f33343775ef453f362.json b/.angular/cache/15.2.5/babel-webpack/55b1114bb0fdbd15bc0b410d151844a9f973d7d57af4c4f33343775ef453f362.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/55b1114bb0fdbd15bc0b410d151844a9f973d7d57af4c4f33343775ef453f362.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/spotify.service\";\nexport class VideoPlayerComponent {\n  constructor(route, spotifyService) {\n    this.route = route;\n    this.spotifyService = spotifyService;\n    this.videoUrl = '';\n  }\n  ngOnInit() {\n    // @ts-ignore\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.spotifyService.getSong(id).subscribe(data => {\n      this.song = data;\n      if (this.song) {\n        this.videoUrl = `https://www.youtube.com/watch?v=1hLIXrlpRe8`;\n        console.log(this.videoUrl);\n      }\n    });\n  }\n}\nVideoPlayerComponent.ɵfac = function VideoPlayerComponent_Factory(t) {\n  return new (t || VideoPlayerComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SpotifyService));\n};\nVideoPlayerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VideoPlayerComponent,\n  selectors: [[\"app-video-player\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [\"routerLink\", \"/\", 1, \"bg-blue-600\", \"text-white\", \"py-2\", \"px-4\", \"rounded\", \"mb-4\"], [1, \"bg-black\", \"rounded\", \"p-4\"], [\"controls\", \"\", 1, \"w-full\"], [\"type\", \"video/mp4\", 3, \"src\"]],\n  template: function VideoPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵtext(2, \"Retour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"video\", 3);\n      i0.ɵɵelement(5, \"source\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"src\", ctx.videoUrl, i0.ɵɵsanitizeUrl);\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,oBAAoB;EAI/BC,YACUC,KAAqB,EACrBC,cAA8B;IAD9B,UAAK,GAALD,KAAK;IACL,mBAAc,GAAdC,cAAc;IAJxB,aAAQ,GAAW,EAAE;EAKlB;EAEHC,QAAQ;IACN;IACA,MAAMC,EAAE,GAAG,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAClD,IAAI,CAACL,cAAc,CAACM,OAAO,CAACJ,EAAE,CAAC,CAACK,SAAS,CAAEC,IAAS,IAAI;MACtD,IAAI,CAACC,IAAI,GAAGD,IAAI;MAChB,IAAI,IAAI,CAACC,IAAI,EAAE;QACb,IAAI,CAACC,QAAQ,GAAG,6CAA6C;QAC7DC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,QAAQ,CAAC;;IAE9B,CAAC,CAAC;EACJ;;AAnBWb,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVjCC,8BAAmC;MAC4CA,sBAAM;MAAAA,iBAAS;MAC5FA,8BAAkC;MAE9BA,4BAA0C;MAE5CA,iBAAQ;;;MAFEA,eAAgB;MAAhBA,oDAAgB","names":["VideoPlayerComponent","constructor","route","spotifyService","ngOnInit","id","snapshot","paramMap","get","getSong","subscribe","data","song","videoUrl","console","log","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.ts","C:\\IUT\\spotizer\\src\\app\\video-player\\video-player.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {SpotifyService} from \"../services/spotify.service\";\r\nimport { YouTubePlayerModule } from '@angular/youtube-player';\r\n\r\n@Component({\r\n  selector: 'app-video-player',\r\n  templateUrl: './video-player.component.html',\r\n  styleUrls: ['./video-player.component.css']\r\n})\r\nexport class VideoPlayerComponent {\r\n  song: any;\r\n  videoUrl: string = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // @ts-ignore\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    this.spotifyService.getSong(id).subscribe((data: any) => {\r\n      this.song = data;\r\n      if (this.song) {\r\n        this.videoUrl = `https://www.youtube.com/watch?v=1hLIXrlpRe8`;\r\n        console.log(this.videoUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container mx-auto p-4\">\r\n  <button class=\"bg-blue-600 text-white py-2 px-4 rounded mb-4\" routerLink=\"/\">Retour</button>\r\n  <div class=\"bg-black rounded p-4\">\r\n    <video controls class=\"w-full\">\r\n      <source [src]=\"videoUrl\" type=\"video/mp4\">\r\n      <!--Votre navigateur ne prend pas en charge la vidéo.-->\r\n    </video>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/ea2322c78c9f0e6890e74f150803f3ac1bbc0d0777c8dceac1c3a564458cfb50.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/ea2322c78c9f0e6890e74f150803f3ac1bbc0d0777c8dceac1c3a564458cfb50.json b/.angular/cache/15.2.5/babel-webpack/ea2322c78c9f0e6890e74f150803f3ac1bbc0d0777c8dceac1c3a564458cfb50.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/ea2322c78c9f0e6890e74f150803f3ac1bbc0d0777c8dceac1c3a564458cfb50.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = function (a1) {\n  return [\"/album\", a1];\n};\nfunction SearchComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Album\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"a\", 10);\n    i0.ɵɵelement(5, \"img\", 11);\n    i0.ɵɵelementStart(6, \"h5\", 12);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const album_r4 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, album_r4.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r4.title);\n    i0.ɵɵproperty(\"src\", album_r4.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r4.title);\n  }\n}\nfunction SearchComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"h5\", 12)(3, \"p\", 9);\n    i0.ɵɵtext(4, \"Artiste\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"a\", 10);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const artist_r5 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/artist-details/\", artist_r5.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(artist_r5.name);\n  }\n}\nfunction SearchComponent_div_11_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const artist_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(artist_r8.name);\n  }\n}\nfunction SearchComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Chanson\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h5\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, SearchComponent_div_11_div_6_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const song_r6 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(song_r6.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", song_r6.artists);\n  }\n}\nfunction SearchComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Playlist\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h5\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const playlist_r9 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(playlist_r9.name);\n  }\n}\nexport class SearchComponent {\n  constructor(spotifyService, http, router) {\n    this.spotifyService = spotifyService;\n    this.http = http;\n    this.router = router;\n    this.searchText = '';\n    this.searchQuery = 'title';\n    this.songs = [];\n    this.artists = [];\n    this.albums = [];\n    this.playlists = [];\n  }\n  ngOnInit() {\n    this.spotifyService.getAlbums().subscribe(data => {\n      this.albums = Object.values(data);\n    });\n  }\n  search() {\n    // Appel à la méthode de recherche de chansons\n    this.spotifyService.searchSongs(this.searchText).subscribe(response => {\n      this.songs = response;\n    });\n    // Appel à la méthode de recherche d'artistes\n    this.spotifyService.searchArtists(this.searchText).subscribe(response => {\n      this.artists = response;\n    });\n    // Appel à la méthode de recherche d'albums\n    this.spotifyService.searchAlbums(this.searchText).subscribe(response => {\n      this.albums = response;\n    });\n    // Appel à la méthode de recherche de playlists\n    this.spotifyService.searchPlaylists(this.searchText).subscribe(playlists => {\n      this.playlists = playlists;\n    }, error => {\n      console.log('Error searching playlists', error);\n    });\n  }\n}\nSearchComponent.ɵfac = function SearchComponent_Factory(t) {\n  return new (t || SearchComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchComponent,\n  selectors: [[\"app-search\"]],\n  decls: 13,\n  vars: 5,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-3xl\", \"font-semibold\", \"text-green-500\", \"mb-4\"], [1, \"flex\", \"items-center\", \"mb-5\"], [\"type\", \"text\", \"placeholder\", \"Recherchez des chansons, artistes, albums ou playlists\", 1, \"bg-gray-200\", \"text-gray-800\", \"p-2\", \"rounded\", \"w-full\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-green-500\", \"transition\", \"duration-300\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [1, \"bg-green-500\", \"hover:bg-green-600\", \"text-white\", \"py-2\", \"px-4\", \"ml-2\", \"rounded\", \"transition\", \"duration-300\", 3, \"click\"], [1, \"grid\", \"grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"text-gray-400\"], [3, \"routerLink\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function SearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Spotify Clone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function SearchComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.searchText = $event;\n      })(\"input\", function SearchComponent_Template_input_input_5_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function SearchComponent_Template_button_click_6_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵtext(7, \"Rechercher \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵtemplate(9, SearchComponent_div_9_Template, 8, 6, \"div\", 7);\n      i0.ɵɵtemplate(10, SearchComponent_div_10_Template, 7, 2, \"div\", 7);\n      i0.ɵɵtemplate(11, SearchComponent_div_11_Template, 7, 2, \"div\", 7);\n      i0.ɵɵtemplate(12, SearchComponent_div_12_Template, 6, 1, \"div\", 7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchText);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.artists);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.songs);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.playlists);\n    }\n  },\n  dependencies: [i4.NgForOf, i3.RouterLink, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","SearchComponent","constructor","spotifyService","http","router","ngOnInit","getAlbums","subscribe","data","albums","Object","values","search","searchSongs","searchText","response","songs","searchArtists","artists","searchAlbums","searchPlaylists","playlists","error","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\search\\search.component.html","C:\\IUT\\spotizer\\src\\app\\search\\search.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\r\n  <div class=\"container mx-auto p-4\">\r\n    <h1 class=\"text-3xl font-semibold text-green-500 mb-4\">Spotify Clone</h1>\r\n    <div class=\"flex items-center mb-5\">\r\n      <input\r\n        class=\"bg-gray-200 text-gray-800 p-2 rounded w-full focus:outline-none focus:ring-2 focus:ring-green-500 transition duration-300\"\r\n        type=\"text\" [(ngModel)]=\"searchText\" (input)=\"search()\"\r\n        placeholder=\"Recherchez des chansons, artistes, albums ou playlists\"/>\r\n      <button class=\"bg-green-500 hover:bg-green-600 text-white py-2 px-4 ml-2 rounded transition duration-300\"\r\n              (click)=\"search()\">Rechercher\r\n      </button>\r\n    </div>\r\n    <div class=\"grid grid-cols-3 gap-4\">\r\n      <div *ngFor=\"let album of albums\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Album</p>\r\n          <a [routerLink]=\"['/album', album.id]\">\r\n            <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\r\n            <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let artist of artists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <h5 class=\"text-lg font-semibold text-green-500\">\r\n            <p class=\"text-gray-400\">Artiste</p>\r\n            <a routerLink=\"/artist-details/{{ artist.id }}\">{{ artist.name }}</a>\r\n          </h5>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngFor=\"let song of songs\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Chanson</p>\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ song.title }}</h5>\r\n          <div *ngFor=\"let artist of song.artists\">\r\n            <p class=\"text-gray-400\">{{ artist.name }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let playlist of playlists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Playlist</p>\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ playlist.name }}</h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {HttpClient} from '@angular/common/http';\r\nimport {Component} from '@angular/core';\r\nimport {Playlist, SpotifyService} from \"../services/spotify.service\";\r\nimport {Router} from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent {\r\n  searchText: string = '';\r\n  searchQuery: string = 'title';\r\n  songs: any[] = [];\r\n  artists: any[] = [];\r\n  albums: any[] = [];\r\n  playlists: Playlist[] = [];\r\n  constructor(private spotifyService: SpotifyService, private http: HttpClient, private router: Router) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.spotifyService.getAlbums().subscribe((data: any) => {\r\n      this.albums = Object.values(data);\r\n    });\r\n  }\r\n\r\n  search() {\r\n    // Appel à la méthode de recherche de chansons\r\n    this.spotifyService.searchSongs(this.searchText).subscribe((response: any) => {\r\n      this.songs = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'artistes\r\n    this.spotifyService.searchArtists(this.searchText).subscribe((response: any) => {\r\n      this.artists = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'albums\r\n    this.spotifyService.searchAlbums(this.searchText).subscribe((response: any) => {\r\n      this.albums = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche de playlists\r\n    this.spotifyService.searchPlaylists(this.searchText).subscribe((playlists: any[]) => {\r\n        this.playlists = playlists;\r\n      },\r\n      (error) => {\r\n        console.log('Error searching playlists', error);\r\n      }\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/c0e5c6e93af8feead3f772f42852f58460116acefeff8389d33b2b9a88d9f959.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/c0e5c6e93af8feead3f772f42852f58460116acefeff8389d33b2b9a88d9f959.json b/.angular/cache/15.2.5/babel-webpack/c0e5c6e93af8feead3f772f42852f58460116acefeff8389d33b2b9a88d9f959.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/c0e5c6e93af8feead3f772f42852f58460116acefeff8389d33b2b9a88d9f959.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { from, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n    this.apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchPlaylists(query) {\n    return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(keyword: string): Observable<Playlist[]> {\r\n      const url = `${this.apiUrl}/playlists?q=${keyword}`;\r\n      return this.http.get<Playlist[]>(url);\r\n    }*/\n  getArtistAlbums(artistName, page) {\n    let params = new HttpParams().set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get(this.apiUrls, {\n      params\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","from","map","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","searchPlaylists","getArtistAlbums","artistName","page","params","set","toString","apiUrls","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {from, map, Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  private apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchAlbums(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n  searchPlaylists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n/*  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }*/\n\n  getArtistAlbums(artistName: string, page?: number): Observable<Album[]> {\n    let params = new HttpParams()\n      .set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get<Album[]>(this.apiUrls, { params });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/8c2c52c2c9e048ce1e1bfa19c091f71e522170bfc46740d339c79679164c9d19.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/8c2c52c2c9e048ce1e1bfa19c091f71e522170bfc46740d339c79679164c9d19.json b/.angular/cache/15.2.5/babel-webpack/8c2c52c2c9e048ce1e1bfa19c091f71e522170bfc46740d339c79679164c9d19.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/8c2c52c2c9e048ce1e1bfa19c091f71e522170bfc46740d339c79679164c9d19.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/spotify.service\";\nimport * as i2 from \"@angular/common\";\nfunction AppComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const playlist_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(playlist_r1.name);\n  }\n}\nexport class AppComponent {\n  constructor(playlistService) {\n    this.playlistService = playlistService;\n    this.playlists = [];\n  }\n  ngOnInit() {\n    this.playlistService.getAllPlaylists().subscribe(playlists => {\n      this.playlists = playlists;\n      console.log('Playlists', playlists);\n    }, error => {\n      console.log('Error fetching playlists', error);\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 4,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"All Playlists\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"ul\");\n      i0.ɵɵtemplate(3, AppComponent_li_3_Template, 2, 1, \"li\", 0);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.playlists);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IAMEA,0BAAuC;IAAAA,YAAmB;IAAAA,iBAAK;;;;IAAxBA,eAAmB;IAAnBA,sCAAmB;;;ACE5D,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,eAA+B;IAA/B,oBAAe,GAAfA,eAAe;IAFnC,cAAS,GAAU,EAAE;EAEiC;EAEtDC,QAAQ;IACN,IAAI,CAACD,eAAe,CAACE,eAAe,EAAE,CAACC,SAAS,CAC7CC,SAAgB,IAAI;MACnB,IAAI,CAACA,SAAS,GAAGA,SAAS;MAC1BC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,SAAS,CAAC;IACrC,CAAC,EACAG,KAAU,IAAI;MACbF,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEC,KAAK,CAAC;IAChD,CAAC,CACF;EACH;;AAfWT,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDJzBf,0BAAI;MAAAA,6BAAa;MAAAA,iBAAK;MACtBA,0BAAI;MACFA,2DAA+D;MACjEA,iBAAK;;;MADsBA,eAAY;MAAZA,uCAAY","names":["i0","AppComponent","constructor","playlistService","ngOnInit","getAllPlaylists","subscribe","playlists","console","log","error","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\app.component.html","C:\\IUT\\spotizer\\src\\app\\app.component.ts"],"sourcesContent":["<!--\r\n<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n-->\r\n<h1>All Playlists</h1>\r\n<ul>\r\n  <li *ngFor=\"let playlist of playlists\">{{ playlist.name }}</li>\r\n</ul>\r\n","import { Component } from '@angular/core';\r\nimport {SpotifyService} from \"./services/spotify.service\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  playlists: any[] = [];\r\n\r\n  constructor(private playlistService: SpotifyService) {}\r\n\r\n  ngOnInit() {\r\n    this.playlistService.getAllPlaylists().subscribe(\r\n      (playlists: any[]) => {\r\n        this.playlists = playlists;\r\n        console.log('Playlists', playlists);\r\n      },\r\n      (error: any) => {\r\n        console.log('Error fetching playlists', error);\r\n      }\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/df66a65e862fe965e2aa5ab24dbca6b1ebbe7d866becc62c39fe996db52a5ea2.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/df66a65e862fe965e2aa5ab24dbca6b1ebbe7d866becc62c39fe996db52a5ea2.json b/.angular/cache/15.2.5/babel-webpack/df66a65e862fe965e2aa5ab24dbca6b1ebbe7d866becc62c39fe996db52a5ea2.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/df66a65e862fe965e2aa5ab24dbca6b1ebbe7d866becc62c39fe996db52a5ea2.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor(playlistService) {\n    this.playlistService = playlistService;\n    this.playlists = [];\n  }\n  ngOnInit() {\n    this.playlistService.getAllPlaylists().subscribe(playlists => {\n      this.playlists = playlists;\n    }, error => {\n      console.log('Error fetching playlists', error);\n    });\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: `\n    <h1>All Playlists</h1>\n    <ul>\n      <li *ngFor=\"let playlist of playlists\">{{ playlist.name }}</li>\n    </ul>\n  `,\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAalC,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAGvBC,YAAoBC,eAA+B;IAA/B,oBAAe,GAAfA,eAAe;IAFnC,cAAS,GAAU,EAAE;EAEiC;EAEtDC,QAAQ;IACN,IAAI,CAACD,eAAe,CAACE,eAAe,EAAE,CAACC,SAAS,CAC7CC,SAAgB,IAAI;MACnB,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC5B,CAAC,EACAC,KAAU,IAAI;MACbC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,KAAK,CAAC;IAChD,CAAC,CACF;EACH;CACD;AAfYP,YAAY,eAVxBD,SAAS,CAAC;EACTW,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE;;;;;GAKZ;EACDC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,GACWZ,YAAY,CAexB;SAfYA,YAAY","names":["Component","AppComponent","constructor","playlistService","ngOnInit","getAllPlaylists","subscribe","playlists","error","console","log","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport {SpotifyService} from \"./services/spotify.service\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: `\r\n    <h1>All Playlists</h1>\r\n    <ul>\r\n      <li *ngFor=\"let playlist of playlists\">{{ playlist.name }}</li>\r\n    </ul>\r\n  `,\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  playlists: any[] = [];\r\n\r\n  constructor(private playlistService: SpotifyService) {}\r\n\r\n  ngOnInit() {\r\n    this.playlistService.getAllPlaylists().subscribe(\r\n      (playlists: any[]) => {\r\n        this.playlists = playlists;\r\n      },\r\n      (error: any) => {\r\n        console.log('Error fetching playlists', error);\r\n      }\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/0e51c7658172c5d3cd8ee0e0f22168744c00650294270911f5288d880c057d5c.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/0e51c7658172c5d3cd8ee0e0f22168744c00650294270911f5288d880c057d5c.json b/.angular/cache/15.2.5/babel-webpack/0e51c7658172c5d3cd8ee0e0f22168744c00650294270911f5288d880c057d5c.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/0e51c7658172c5d3cd8ee0e0f22168744c00650294270911f5288d880c057d5c.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { catchError, from, map, Observable, takeWhile } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n    this.apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(query: string): Observable<any> {\r\n      return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(\r\n        map((response: any) => {\r\n            if (Array.isArray(response)) {\r\n              return response;\r\n            } else {\r\n              return [response];\r\n            }\r\n          }\r\n        ));\r\n    }*/\n  searchPlaylists(query) {\n    let id = 1;\n    const playlists = [];\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        this.http.get(`${this.apiUrl}/playlists/${id}`).pipe(map(response => {\n          if (response.name.toLowerCase().includes(query.toLowerCase())) {\n            playlists.push(response);\n          }\n          id++;\n          if (response.id) {\n            // continue the loop\n            getPlaylist();\n          } else {\n            observer.next(playlists);\n            observer.complete();\n          }\n        }), catchError(error => {\n          // stop the loop and return the playlists that have been fetched so far\n          observer.next(playlists);\n          observer.complete();\n          return [];\n        }), takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n      getPlaylist();\n    });\n  }\n  getArtistAlbums(artistName, page) {\n    let params = new HttpParams().set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get(this.apiUrls, {\n      params\n    });\n  }\n  getAllPlaylists() {\n    let id = 1;\n    const playlists = [];\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        this.http.get(`${this.apiUrl}/playlists/${id}`).pipe(map(response => {\n          playlists.push(response);\n          id++;\n          if (response.id) {\n            getPlaylist();\n          } else {\n            observer.next(playlists);\n            observer.complete();\n          }\n        }), catchError(error => {\n          observer.next(playlists);\n          observer.complete();\n          return [];\n        }), takeWhile(() => id < 500)).subscribe();\n      };\n      getPlaylist();\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","catchError","from","map","Observable","takeWhile","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","searchPlaylists","playlists","observer","getPlaylist","name","toLowerCase","includes","push","next","complete","error","subscribe","getArtistAlbums","artistName","page","params","set","toString","apiUrls","getAllPlaylists","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {catchError, from, map, Observable, takeWhile} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  private apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchAlbums(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n/*  searchPlaylists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }*/\n  searchPlaylists(query: string): Observable<any> {\n    let id = 1;\n    const playlists: any[] = [];\n\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        this.http.get(`${this.apiUrl}/playlists/${id}`).pipe(\n          map((response: any) => {\n            if (response.name.toLowerCase().includes(query.toLowerCase())) {\n              playlists.push(response);\n            }\n            id++;\n            if (response.id) {\n              // continue the loop\n              getPlaylist();\n            } else {\n              observer.next(playlists);\n              observer.complete();\n            }\n          }),\n          catchError(error => {\n            // stop the loop and return the playlists that have been fetched so far\n            observer.next(playlists);\n            observer.complete();\n            return [];\n          }),\n          takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n\n      getPlaylist();\n    });\n  }\n\n  getArtistAlbums(artistName: string, page?: number): Observable<Album[]> {\n    let params = new HttpParams()\n      .set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get<Album[]>(this.apiUrls, { params });\n  }\n\n  getAllPlaylists(): Observable<any> {\n    let id = 1;\n    const playlists: any[] = [];\n\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        this.http.get(`${this.apiUrl}/playlists/${id}`).pipe(\n          map((response: any) => {\n            playlists.push(response);\n            id++;\n            if (response.id) {\n              getPlaylist();\n            } else {\n              observer.next(playlists);\n              observer.complete();\n            }\n          }),\n          catchError(error => {\n            observer.next(playlists);\n            observer.complete();\n            return [];\n          }),\n          takeWhile(() => id < 500)\n        ).subscribe();\n      };\n      getPlaylist();\n    });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/36897f9d021c7c4f1252aecf568b6d8771d86d72e41153554591ac9eef2a1280.json
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/36897f9d021c7c4f1252aecf568b6d8771d86d72e41153554591ac9eef2a1280.json b/.angular/cache/15.2.5/babel-webpack/36897f9d021c7c4f1252aecf568b6d8771d86d72e41153554591ac9eef2a1280.json
deleted file mode 100644
--- a/.angular/cache/15.2.5/babel-webpack/36897f9d021c7c4f1252aecf568b6d8771d86d72e41153554591ac9eef2a1280.json	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
+++ /dev/null	(revision 689492a37ee8f146f88c7b948a39d1c9592fb3db)
@@ -1,1 +0,0 @@
-{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { from, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n    this.apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    console.log('Search query:', query); // Ajout de l'instruction console.log\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(query: string): Observable<any> {\r\n      return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(\r\n        map((response: any) => {\r\n            if (Array.isArray(response)) {\r\n              return response;\r\n            } else {\r\n              return [response];\r\n            }\r\n          }\r\n        ));\r\n    }*/\n  searchPlaylists(keyword) {\n    const url = `${this.apiUrl}/playlists?${keyword}`;\n    return this.http.get(url);\n  }\n  getArtistAlbums(artistName, page) {\n    let params = new HttpParams().set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get(this.apiUrls, {\n      params\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAoBA,UAAU,QAAO,sBAAsB;AAC3D,SAAQC,IAAI,EAAEC,GAAG,QAAmB,MAAM;;;AAK1C,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,WAAM,GAAG,0DAA0D;IACnE,YAAO,GAAG,iEAAiE;EAGnF;EAEAC,SAAS;IACP,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,SAAS,CAAC;EAC/C;EAEAC,QAAQ,CAACC,EAAU;IACjB,OAAOT,IAAI,CACTU,KAAK,CAAC,GAAG,IAAI,CAACH,MAAM,WAAWE,EAAE,EAAE,CAAC,CACjCE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACrC;EACH;EACAC,OAAO,CAACL,EAAU;IAChB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,UAAUE,EAAE,EAAE,CAAC;EACpD;EAGAM,WAAW,CAACC,KAAa;IACvB,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,gBAAgBS,KAAK,EAAE,CAAC,CAACC,IAAI,CAC9DhB,GAAG,CAAEW,QAAa,IAAI;MACpB,IAAIM,KAAK,CAACC,OAAO,CAACP,QAAQ,CAAC,EAAE;QAC3B,OAAOA,QAAQ;OAChB,MAAM;QACL,OAAO,CAACA,QAAQ,CAAC;;IAErB,CAAC,CAAC,CACH;EACH;EAEAQ,aAAa,CAACJ,KAAa;IACzB,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,iBAAiBS,KAAK,EAAE,CAAC,CAACC,IAAI,CAC/DhB,GAAG,CAAEW,QAAa,IAAI;MACpB,IAAIM,KAAK,CAACC,OAAO,CAACP,QAAQ,CAAC,EAAE;QAC3B,OAAOA,QAAQ;OAChB,MAAM;QACL,OAAO,CAACA,QAAQ,CAAC;;IAErB,CAAC,CAAC,CACH;EACH;EAGAS,YAAY,CAACL,KAAa;IACxBM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEP,KAAK,CAAC,CAAC,CAAC;IACrC,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,iBAAiBS,KAAK,EAAE,CAAC,CAACC,IAAI,CAC/DhB,GAAG,CAAEW,QAAa,IAAI;MAClB,IAAIM,KAAK,CAACC,OAAO,CAACP,QAAQ,CAAC,EAAE;QAC3B,OAAOA,QAAQ;OAChB,MAAM;QACL,OAAO,CAACA,QAAQ,CAAC;;IAErB,CAAC,CACF,CAAC;EACN;EAEF;;;;;;;;;;;EAWEY,eAAe,CAACC,OAAe;IAC7B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACnB,MAAM,cAAckB,OAAO,EAAE;IACjD,OAAO,IAAI,CAACrB,IAAI,CAACE,GAAG,CAAaoB,GAAG,CAAC;EACvC;EAEAC,eAAe,CAACC,UAAkB,EAAEC,IAAa;IAC/C,IAAIC,MAAM,GAAG,IAAI/B,UAAU,EAAE,CAC1BgC,GAAG,CAAC,aAAa,EAAEH,UAAU,CAAC;IACjC,IAAIC,IAAI,EAAE;MACRC,MAAM,GAAGA,MAAM,CAACC,GAAG,CAAC,MAAM,EAAEF,IAAI,CAACG,QAAQ,EAAE,CAAC;;IAE9C,OAAO,IAAI,CAAC5B,IAAI,CAACE,GAAG,CAAU,IAAI,CAAC2B,OAAO,EAAE;MAAEH;IAAM,CAAE,CAAC;EACzD;;AApFW5B,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAgC,SAAdhC,cAAc;EAAAiC,YAFb;AAAM","names":["HttpParams","from","map","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","console","log","searchPlaylists","keyword","url","getArtistAlbums","artistName","page","params","set","toString","apiUrls","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {from, map, Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  private apiUrls = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api/albums';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n\n  searchAlbums(query: string): Observable<any> {\n    console.log('Search query:', query); // Ajout de l'instruction console.log\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n/*  searchPlaylists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/playlists?name=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }*/\n  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists?${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }\n\n  getArtistAlbums(artistName: string, page?: number): Observable<Album[]> {\n    let params = new HttpParams()\n      .set('artist.name', artistName);\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get<Album[]>(this.apiUrls, { params });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/a0bbe5a02a08574da424b8ccbc473ccadf311533984e72c68ab78058077194c6.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/a0bbe5a02a08574da424b8ccbc473ccadf311533984e72c68ab78058077194c6.json b/.angular/cache/15.2.5/babel-webpack/a0bbe5a02a08574da424b8ccbc473ccadf311533984e72c68ab78058077194c6.json
new file mode 100644
--- /dev/null	(date 1681067733116)
+++ b/.angular/cache/15.2.5/babel-webpack/a0bbe5a02a08574da424b8ccbc473ccadf311533984e72c68ab78058077194c6.json	(date 1681067733116)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { catchError, from, map, Observable, takeWhile } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(keyword: string): Observable<Playlist[]> {\r\n      const url = `${this.apiUrl}/playlists?q=${keyword}`;\r\n      return this.http.get<Playlist[]>(url);\r\n    }*/\n  getArtistAlbums(artistId, page) {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get(`${this.apiUrl}/albums`, {\n      params\n    });\n  }\n  getAllPlaylists(searchTerm) {\n    let id = 1;\n    const playlists = [];\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, {\n          params\n        }).pipe(map(response => {\n          if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n            playlists.push(response);\n          }\n          id++;\n          if (response.id) {\n            // continue the loop\n            getPlaylist();\n          } else {\n            observer.next(playlists);\n            observer.complete();\n          }\n        }), catchError(error => {\n          // stop the loop and return the playlists that have been fetched so far\n          observer.next(playlists);\n          observer.complete();\n          return [];\n        }), takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n      getPlaylist();\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAoBA,UAAU,QAAO,sBAAsB;AAC3D,SAAQC,UAAU,EAAEC,IAAI,EAAEC,GAAG,EAAEC,UAAU,EAAEC,SAAS,QAAO,MAAM;;;AAKjE,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,0DAA0D;EAG3E;EAEAC,SAAS;IACP,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,SAAS,CAAC;EAC/C;EAEAC,QAAQ,CAACC,EAAU;IACjB,OAAOX,IAAI,CACTY,KAAK,CAAC,GAAG,IAAI,CAACH,MAAM,WAAWE,EAAE,EAAE,CAAC,CACjCE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACrC;EACH;EACAC,OAAO,CAACL,EAAU;IAChB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,UAAUE,EAAE,EAAE,CAAC;EACpD;EAGAM,WAAW,CAACC,KAAa;IACvB,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,gBAAgBS,KAAK,EAAE,CAAC,CAACC,IAAI,CAC9DlB,GAAG,CAAEa,QAAa,IAAI;MACpB,IAAIM,KAAK,CAACC,OAAO,CAACP,QAAQ,CAAC,EAAE;QAC3B,OAAOA,QAAQ;OAChB,MAAM;QACL,OAAO,CAACA,QAAQ,CAAC;;IAErB,CAAC,CAAC,CACH;EACH;EAEAQ,aAAa,CAACJ,KAAa;IACzB,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,iBAAiBS,KAAK,EAAE,CAAC,CAACC,IAAI,CAC/DlB,GAAG,CAAEa,QAAa,IAAI;MACpB,IAAIM,KAAK,CAACC,OAAO,CAACP,QAAQ,CAAC,EAAE;QAC3B,OAAOA,QAAQ;OAChB,MAAM;QACL,OAAO,CAACA,QAAQ,CAAC;;IAErB,CAAC,CAAC,CACH;EACH;EAEAS,YAAY,CAACL,KAAa;IACxB,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,iBAAiBS,KAAK,EAAE,CAAC,CAACC,IAAI,CAC/DlB,GAAG,CAAEa,QAAa,IAAI;MAClB,IAAIM,KAAK,CAACC,OAAO,CAACP,QAAQ,CAAC,EAAE;QAC3B,OAAOA,QAAQ;OAChB,MAAM;QACL,OAAO,CAACA,QAAQ,CAAC;;IAErB,CAAC,CACF,CAAC;EACN;EAEF;;;;EAKEU,eAAe,CAACC,QAAgB,EAAEC,IAAa;IAC7C,IAAIC,MAAM,GAAG,IAAI7B,UAAU,EAAE,CAAC8B,GAAG,CAAC,UAAU,EAAEH,QAAQ,CAACI,QAAQ,EAAE,CAAC;IAClE,IAAIH,IAAI,EAAE;MACRC,MAAM,GAAGA,MAAM,CAACC,GAAG,CAAC,MAAM,EAAEF,IAAI,CAACG,QAAQ,EAAE,CAAC;;IAE9C,OAAO,IAAI,CAACvB,IAAI,CAACE,GAAG,CAAU,GAAG,IAAI,CAACC,MAAM,SAAS,EAAE;MAAEkB;IAAM,CAAE,CAAC;EACpE;EAEAG,eAAe,CAACC,UAAmB;IACjC,IAAIpB,EAAE,GAAG,CAAC;IACV,MAAMqB,SAAS,GAAU,EAAE;IAE3B,OAAO,IAAI9B,UAAU,CAAC+B,QAAQ,IAAG;MAC/B,MAAMC,WAAW,GAAG,MAAK;QACvB,IAAIP,MAAM,GAAG,IAAI7B,UAAU,EAAE;QAC7B,IAAIiC,UAAU,EAAE;UACdJ,MAAM,GAAGA,MAAM,CAACQ,MAAM,CAAC,GAAG,EAAEJ,UAAU,CAAC;;QAEzC,IAAI,CAACzB,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,cAAcE,EAAE,EAAE,EAAE;UAAEgB;QAAM,CAAE,CAAC,CAACR,IAAI,CAC9DlB,GAAG,CAAEa,QAAa,IAAI;UACpB,IAAI,CAACiB,UAAU,IAAIjB,QAAQ,CAACsB,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACP,UAAU,CAACM,WAAW,EAAE,CAAC,EAAE;YACjFL,SAAS,CAACO,IAAI,CAACzB,QAAQ,CAAC;;UAE1BH,EAAE,EAAE;UACJ,IAAIG,QAAQ,CAACH,EAAE,EAAE;YACf;YACAuB,WAAW,EAAE;WACd,MAAM;YACLD,QAAQ,CAACO,IAAI,CAACR,SAAS,CAAC;YACxBC,QAAQ,CAACQ,QAAQ,EAAE;;QAEvB,CAAC,CAAC,EACF1C,UAAU,CAAC2C,KAAK,IAAG;UACjB;UACAT,QAAQ,CAACO,IAAI,CAACR,SAAS,CAAC;UACxBC,QAAQ,CAACQ,QAAQ,EAAE;UACnB,OAAO,EAAE;QACX,CAAC,CAAC,EACFtC,SAAS,CAAC,MAAMQ,EAAE,GAAG,IAAI,CAAC,CAAC;QAAA,CAC5B,CAACgC,SAAS,EAAE;MACf,CAAC;MAEDT,WAAW,EAAE;IACf,CAAC,CAAC;EACJ;;AA3GW9B,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAwC,SAAdxC,cAAc;EAAAyC,YAFb;AAAM","names":["HttpParams","catchError","from","map","Observable","takeWhile","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","getArtistAlbums","artistId","page","params","set","toString","getAllPlaylists","searchTerm","playlists","observer","getPlaylist","append","name","toLowerCase","includes","push","next","complete","error","subscribe","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {catchError, from, map, Observable, takeWhile} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchAlbums(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n/*  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }*/\n\n  getArtistAlbums(artistId: number, page?: number): Observable<Album[]> {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get<Album[]>(`${this.apiUrl}/albums`, { params });\n  }\n\n  getAllPlaylists(searchTerm?: string): Observable<any> {\n    let id = 1;\n    const playlists: any[] = [];\n\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, { params }).pipe(\n          map((response: any) => {\n            if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n              playlists.push(response);\n            }\n            id++;\n            if (response.id) {\n              // continue the loop\n              getPlaylist();\n            } else {\n              observer.next(playlists);\n              observer.complete();\n            }\n          }),\n          catchError(error => {\n            // stop the loop and return the playlists that have been fetched so far\n            observer.next(playlists);\n            observer.complete();\n            return [];\n          }),\n          takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n\n      getPlaylist();\n    });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n  artist: Artist;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n\nexport interface Artist {\n  id: number;\n  name: string;\n  songs: Song[];\n  albums: Album[];\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/f92c4761a57bbc9d1970b8544a323947f9d5443837fffddb07971f793c3c28dd.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/f92c4761a57bbc9d1970b8544a323947f9d5443837fffddb07971f793c3c28dd.json b/.angular/cache/15.2.5/babel-webpack/f92c4761a57bbc9d1970b8544a323947f9d5443837fffddb07971f793c3c28dd.json
new file mode 100644
--- /dev/null	(date 1681067733041)
+++ b/.angular/cache/15.2.5/babel-webpack/f92c4761a57bbc9d1970b8544a323947f9d5443837fffddb07971f793c3c28dd.json	(date 1681067733041)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      this.albums = albums.filter(album => {\n        return album.artist.id === this.artistId;\n      });\n      console.log('Albums:', this.albums + ' ' + this.artistId);\n    });\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,KAAK,IAAG;QAClC,OAAOA,KAAK,CAACC,MAAM,CAACC,EAAE,KAAK,IAAI,CAACX,QAAQ;MAC1C,CAAC,CAAC;MACFY,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACN,MAAM,GAAG,GAAG,GAAG,IAAI,CAACP,QAAQ,CAAC;IAC3D,CAAC,CAAC;EACN;;AAfWL,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlCxB,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","filter","album","artist","id","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId)\n      .subscribe(albums => {\n        this.albums = albums.filter(album => {\n          return album.artist.id === this.artistId;\n        });\n        console.log('Albums:', this.albums + ' ' + this.artistId);\n      });\n  }\n\n  /*ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let artistId = parseInt(<string>params.get('id'));\n      this.apiService.getArtistDetails(artistId).subscribe(\n        (response: any) => {\n          this.artist = response;\n          this.albums = response.albums;\n          console.log('Albums:', this.albums);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    });\n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/e39c7988614d0b560ac2c46053d647cf3f6ddc54df399864c5221c274bdacd4d.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/e39c7988614d0b560ac2c46053d647cf3f6ddc54df399864c5221c274bdacd4d.json b/.angular/cache/15.2.5/babel-webpack/e39c7988614d0b560ac2c46053d647cf3f6ddc54df399864c5221c274bdacd4d.json
new file mode 100644
--- /dev/null	(date 1681067701886)
+++ b/.angular/cache/15.2.5/babel-webpack/e39c7988614d0b560ac2c46053d647cf3f6ddc54df399864c5221c274bdacd4d.json	(date 1681067701886)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { catchError, forkJoin, from, map, Observable, switchMap, takeWhile } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(keyword: string): Observable<Playlist[]> {\r\n      const url = `${this.apiUrl}/playlists?q=${keyword}`;\r\n      return this.http.get<Playlist[]>(url);\r\n    }*/\n  getArtistById(artistId) {\n    return this.http.get(`${this.apiUrl}/artists/${artistId}`);\n  }\n  getArtistAlbums(artistId, page) {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.getArtistById(artistId).pipe(switchMap(artist => {\n      // @ts-ignore\n      const albumRequests = artist.albums.map(album => fetch(album.url).then(response => response.arrayBuffer()));\n      return forkJoin(albumRequests).pipe(map(albumArrayBuffers => {\n        return albumArrayBuffers.map(albumBuffer => {\n          const albumJson = new TextDecoder().decode(albumBuffer);\n          return JSON.parse(albumJson);\n        });\n      }));\n    }));\n  }\n  getAllPlaylists(searchTerm) {\n    let id = 1;\n    const playlists = [];\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, {\n          params\n        }).pipe(map(response => {\n          if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n            playlists.push(response);\n          }\n          id++;\n          if (response.id) {\n            // continue the loop\n            getPlaylist();\n          } else {\n            observer.next(playlists);\n            observer.complete();\n          }\n        }), catchError(error => {\n          // stop the loop and return the playlists that have been fetched so far\n          observer.next(playlists);\n          observer.complete();\n          return [];\n        }), takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n      getPlaylist();\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","catchError","forkJoin","from","map","Observable","switchMap","takeWhile","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","getArtistById","artistId","getArtistAlbums","page","params","set","toString","artist","albumRequests","albums","album","url","arrayBuffer","albumArrayBuffers","albumBuffer","albumJson","TextDecoder","decode","JSON","parse","getAllPlaylists","searchTerm","playlists","observer","getPlaylist","append","name","toLowerCase","includes","push","next","complete","error","subscribe","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {catchError, forkJoin, from, map, Observable, switchMap, takeWhile} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchAlbums(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n/*  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }*/\n\n  getArtistById(artistId: number): Observable<Artist> {\n    return this.http.get<Artist>(`${this.apiUrl}/artists/${artistId}`);\n  }\n\n  getArtistAlbums(artistId: number, page?: number): Observable<Album[]> {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n\n    return this.getArtistById(artistId).pipe(\n      switchMap(artist => {\n        // @ts-ignore\n        const albumRequests = artist.albums.map(album => fetch(album.url).then(response => response.arrayBuffer()));\n        return forkJoin(albumRequests).pipe(\n          map(albumArrayBuffers => {\n            return albumArrayBuffers.map(albumBuffer => {\n              const albumJson = new TextDecoder().decode(albumBuffer);\n              return JSON.parse(albumJson) as Album;\n            });\n          })\n        );\n      })\n    );\n  }\n\n\n  getAllPlaylists(searchTerm?: string): Observable<any> {\n    let id = 1;\n    const playlists: any[] = [];\n\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, { params }).pipe(\n          map((response: any) => {\n            if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n              playlists.push(response);\n            }\n            id++;\n            if (response.id) {\n              // continue the loop\n              getPlaylist();\n            } else {\n              observer.next(playlists);\n              observer.complete();\n            }\n          }),\n          catchError(error => {\n            // stop the loop and return the playlists that have been fetched so far\n            observer.next(playlists);\n            observer.complete();\n            return [];\n          }),\n          takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n\n      getPlaylist();\n    });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n  artist: Artist;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n\nexport interface Artist {\n  id: number;\n  name: string;\n  songs: Song[];\n  albums: Album[];\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/d570e083613632cd08704359473b1404b67444c8d427b6035d3a5b3a1eddd6c3.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/d570e083613632cd08704359473b1404b67444c8d427b6035d3a5b3a1eddd6c3.json b/.angular/cache/15.2.5/babel-webpack/d570e083613632cd08704359473b1404b67444c8d427b6035d3a5b3a1eddd6c3.json
new file mode 100644
--- /dev/null	(date 1681067679821)
+++ b/.angular/cache/15.2.5/babel-webpack/d570e083613632cd08704359473b1404b67444c8d427b6035d3a5b3a1eddd6c3.json	(date 1681067679821)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { catchError, forkJoin, from, map, Observable, switchMap, takeWhile } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(keyword: string): Observable<Playlist[]> {\r\n      const url = `${this.apiUrl}/playlists?q=${keyword}`;\r\n      return this.http.get<Playlist[]>(url);\r\n    }*/\n  getArtistById(artistId) {\n    return this.http.get(`${this.apiUrl}/artists/${artistId}`);\n  }\n  getArtistAlbums(artistId, page) {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.getArtistById(artistId).pipe(switchMap(artist => {\n      // @ts-ignore\n      const albumRequests = artist.albums.map(albumUrl => this.http.get(albumUrl));\n      return forkJoin(albumRequests).pipe(map(albumArrayBuffers => {\n        return albumArrayBuffers.map(albumBuffer => {\n          const albumJson = new TextDecoder().decode(albumBuffer);\n          return JSON.parse(albumJson);\n        });\n      }));\n    }));\n  }\n  getAllPlaylists(searchTerm) {\n    let id = 1;\n    const playlists = [];\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, {\n          params\n        }).pipe(map(response => {\n          if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n            playlists.push(response);\n          }\n          id++;\n          if (response.id) {\n            // continue the loop\n            getPlaylist();\n          } else {\n            observer.next(playlists);\n            observer.complete();\n          }\n        }), catchError(error => {\n          // stop the loop and return the playlists that have been fetched so far\n          observer.next(playlists);\n          observer.complete();\n          return [];\n        }), takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n      getPlaylist();\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","catchError","forkJoin","from","map","Observable","switchMap","takeWhile","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","getArtistById","artistId","getArtistAlbums","page","params","set","toString","artist","albumRequests","albums","albumUrl","albumArrayBuffers","albumBuffer","albumJson","TextDecoder","decode","JSON","parse","getAllPlaylists","searchTerm","playlists","observer","getPlaylist","append","name","toLowerCase","includes","push","next","complete","error","subscribe","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {catchError, forkJoin, from, map, Observable, switchMap, takeWhile} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchAlbums(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n/*  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }*/\n\n  getArtistById(artistId: number): Observable<Artist> {\n    return this.http.get<Artist>(`${this.apiUrl}/artists/${artistId}`);\n  }\n\n  getArtistAlbums(artistId: number, page?: number): Observable<Album[]> {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n\n    return this.getArtistById(artistId).pipe(\n      switchMap(artist => {\n        // @ts-ignore\n        const albumRequests = artist.albums.map(albumUrl => this.http.get<ArrayBuffer>(albumUrl));\n        return forkJoin(albumRequests).pipe(\n          map(albumArrayBuffers => {\n            return albumArrayBuffers.map(albumBuffer => {\n              const albumJson = new TextDecoder().decode(albumBuffer);\n              return JSON.parse(albumJson) as Album;\n            });\n          })\n        );\n      })\n    );\n  }\n\n\n  getAllPlaylists(searchTerm?: string): Observable<any> {\n    let id = 1;\n    const playlists: any[] = [];\n\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, { params }).pipe(\n          map((response: any) => {\n            if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n              playlists.push(response);\n            }\n            id++;\n            if (response.id) {\n              // continue the loop\n              getPlaylist();\n            } else {\n              observer.next(playlists);\n              observer.complete();\n            }\n          }),\n          catchError(error => {\n            // stop the loop and return the playlists that have been fetched so far\n            observer.next(playlists);\n            observer.complete();\n            return [];\n          }),\n          takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n\n      getPlaylist();\n    });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n  artist: Artist;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n\nexport interface Artist {\n  id: number;\n  name: string;\n  songs: Song[];\n  albums: Album[];\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/f2e10f0b900543f9979846149e45dfe96ed74a1eeca06871a105cd72dfa22560.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/f2e10f0b900543f9979846149e45dfe96ed74a1eeca06871a105cd72dfa22560.json b/.angular/cache/15.2.5/babel-webpack/f2e10f0b900543f9979846149e45dfe96ed74a1eeca06871a105cd72dfa22560.json
new file mode 100644
--- /dev/null	(date 1681067613273)
+++ b/.angular/cache/15.2.5/babel-webpack/f2e10f0b900543f9979846149e45dfe96ed74a1eeca06871a105cd72dfa22560.json	(date 1681067613273)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { catchError, forkJoin, from, map, Observable, switchMap, takeWhile } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(keyword: string): Observable<Playlist[]> {\r\n      const url = `${this.apiUrl}/playlists?q=${keyword}`;\r\n      return this.http.get<Playlist[]>(url);\r\n    }*/\n  getArtistById(artistId) {\n    return this.http.get(`${this.apiUrl}/artists/${artistId}`);\n  }\n  getArtistAlbums(artistId, page) {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.getArtistById(artistId).pipe(switchMap(artist => {\n      const albumRequests = artist.albums.map(albumUrl => this.http.get(albumUrl));\n      return forkJoin(albumRequests).pipe(map(albumArrayBuffers => {\n        return albumArrayBuffers.map(albumBuffer => {\n          const albumJson = new TextDecoder().decode(albumBuffer);\n          return JSON.parse(albumJson);\n        });\n      }));\n    }));\n  }\n  getAllPlaylists(searchTerm) {\n    let id = 1;\n    const playlists = [];\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, {\n          params\n        }).pipe(map(response => {\n          if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n            playlists.push(response);\n          }\n          id++;\n          if (response.id) {\n            // continue the loop\n            getPlaylist();\n          } else {\n            observer.next(playlists);\n            observer.complete();\n          }\n        }), catchError(error => {\n          // stop the loop and return the playlists that have been fetched so far\n          observer.next(playlists);\n          observer.complete();\n          return [];\n        }), takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n      getPlaylist();\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","catchError","forkJoin","from","map","Observable","switchMap","takeWhile","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","getArtistById","artistId","getArtistAlbums","page","params","set","toString","artist","albumRequests","albums","albumUrl","albumArrayBuffers","albumBuffer","albumJson","TextDecoder","decode","JSON","parse","getAllPlaylists","searchTerm","playlists","observer","getPlaylist","append","name","toLowerCase","includes","push","next","complete","error","subscribe","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {catchError, forkJoin, from, map, Observable, switchMap, takeWhile} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchAlbums(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n/*  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }*/\n\n  getArtistById(artistId: number): Observable<Artist> {\n    return this.http.get<Artist>(`${this.apiUrl}/artists/${artistId}`);\n  }\n\n  getArtistAlbums(artistId: number, page?: number): Observable<Album[]> {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n\n    return this.getArtistById(artistId).pipe(\n      switchMap(artist => {\n        const albumRequests = artist.albums.map(albumUrl => this.http.get<ArrayBuffer>(albumUrl));\n        return forkJoin(albumRequests).pipe(\n          map(albumArrayBuffers => {\n            return albumArrayBuffers.map(albumBuffer => {\n              const albumJson = new TextDecoder().decode(albumBuffer);\n              return JSON.parse(albumJson) as Album;\n            });\n          })\n        );\n      })\n    );\n  }\n\n\n  getAllPlaylists(searchTerm?: string): Observable<any> {\n    let id = 1;\n    const playlists: any[] = [];\n\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, { params }).pipe(\n          map((response: any) => {\n            if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n              playlists.push(response);\n            }\n            id++;\n            if (response.id) {\n              // continue the loop\n              getPlaylist();\n            } else {\n              observer.next(playlists);\n              observer.complete();\n            }\n          }),\n          catchError(error => {\n            // stop the loop and return the playlists that have been fetched so far\n            observer.next(playlists);\n            observer.complete();\n            return [];\n          }),\n          takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n\n      getPlaylist();\n    });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n  artist: Artist;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n\nexport interface Artist {\n  id: number;\n  name: string;\n  songs: Song[];\n  albums: Album[];\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/6ed96078f230033a0c874723342136365d7c2f4cd1ab3b1890f33a718ef1b138.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/6ed96078f230033a0c874723342136365d7c2f4cd1ab3b1890f33a718ef1b138.json b/.angular/cache/15.2.5/babel-webpack/6ed96078f230033a0c874723342136365d7c2f4cd1ab3b1890f33a718ef1b138.json
new file mode 100644
--- /dev/null	(date 1681067557179)
+++ b/.angular/cache/15.2.5/babel-webpack/6ed96078f230033a0c874723342136365d7c2f4cd1ab3b1890f33a718ef1b138.json	(date 1681067557179)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { catchError, forkJoin, from, map, Observable, switchMap, takeWhile } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(keyword: string): Observable<Playlist[]> {\r\n      const url = `${this.apiUrl}/playlists?q=${keyword}`;\r\n      return this.http.get<Playlist[]>(url);\r\n    }*/\n  getArtistById(artistId) {\n    return this.http.get(`${this.apiUrl}/artists/${artistId}`);\n  }\n  getArtistAlbums(artistId, page) {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.getArtistById(artistId).pipe(switchMap(artist => {\n      const albumRequests = artist.albums.map(albumUrl => this.http.get(albumUrl));\n      return forkJoin(albumRequests);\n    }));\n  }\n  getAllPlaylists(searchTerm) {\n    let id = 1;\n    const playlists = [];\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, {\n          params\n        }).pipe(map(response => {\n          if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n            playlists.push(response);\n          }\n          id++;\n          if (response.id) {\n            // continue the loop\n            getPlaylist();\n          } else {\n            observer.next(playlists);\n            observer.complete();\n          }\n        }), catchError(error => {\n          // stop the loop and return the playlists that have been fetched so far\n          observer.next(playlists);\n          observer.complete();\n          return [];\n        }), takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n      getPlaylist();\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","catchError","forkJoin","from","map","Observable","switchMap","takeWhile","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","getArtistById","artistId","getArtistAlbums","page","params","set","toString","artist","albumRequests","albums","albumUrl","getAllPlaylists","searchTerm","playlists","observer","getPlaylist","append","name","toLowerCase","includes","push","next","complete","error","subscribe","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {catchError, forkJoin, from, map, Observable, switchMap, takeWhile} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchAlbums(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n/*  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }*/\n\n  getArtistById(artistId: number): Observable<Artist> {\n    return this.http.get<Artist>(`${this.apiUrl}/artists/${artistId}`);\n  }\n\n  getArtistAlbums(artistId: number, page?: number): Observable<Album[]> {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n\n    return this.getArtistById(artistId).pipe(\n      switchMap(artist => {\n        const albumRequests = artist.albums.map(albumUrl => this.http.get<Album>(albumUrl));\n        return forkJoin(albumRequests);\n      })\n    );\n  }\n\n\n  getAllPlaylists(searchTerm?: string): Observable<any> {\n    let id = 1;\n    const playlists: any[] = [];\n\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, { params }).pipe(\n          map((response: any) => {\n            if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n              playlists.push(response);\n            }\n            id++;\n            if (response.id) {\n              // continue the loop\n              getPlaylist();\n            } else {\n              observer.next(playlists);\n              observer.complete();\n            }\n          }),\n          catchError(error => {\n            // stop the loop and return the playlists that have been fetched so far\n            observer.next(playlists);\n            observer.complete();\n            return [];\n          }),\n          takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n\n      getPlaylist();\n    });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n  artist: Artist;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n\nexport interface Artist {\n  id: number;\n  name: string;\n  songs: Song[];\n  albums: Album[];\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/753d757a6f84c403f4fdc64441fc8ce6e718dce87a3391535d6036b5659f0cdd.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/753d757a6f84c403f4fdc64441fc8ce6e718dce87a3391535d6036b5659f0cdd.json b/.angular/cache/15.2.5/babel-webpack/753d757a6f84c403f4fdc64441fc8ce6e718dce87a3391535d6036b5659f0cdd.json
new file mode 100644
--- /dev/null	(date 1681067510677)
+++ b/.angular/cache/15.2.5/babel-webpack/753d757a6f84c403f4fdc64441fc8ce6e718dce87a3391535d6036b5659f0cdd.json	(date 1681067510677)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { catchError, forkJoin, from, map, Observable, switchMap, takeWhile } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(keyword: string): Observable<Playlist[]> {\r\n      const url = `${this.apiUrl}/playlists?q=${keyword}`;\r\n      return this.http.get<Playlist[]>(url);\r\n    }*/\n  getArtistById(artistId) {\n    return this.http.get(`${this.apiUrl}/artists/${artistId}`);\n  }\n  getArtistAlbums(artistId, page) {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    // @ts-ignore\n    return this.getArtistById(artistId).pipe(switchMap(artist => {\n      const albumRequests = artist.albums.map(albumUrl => this.http.get(albumUrl));\n      return forkJoin(albumRequests);\n    }));\n  }\n  getAllPlaylists(searchTerm) {\n    let id = 1;\n    const playlists = [];\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, {\n          params\n        }).pipe(map(response => {\n          if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n            playlists.push(response);\n          }\n          id++;\n          if (response.id) {\n            // continue the loop\n            getPlaylist();\n          } else {\n            observer.next(playlists);\n            observer.complete();\n          }\n        }), catchError(error => {\n          // stop the loop and return the playlists that have been fetched so far\n          observer.next(playlists);\n          observer.complete();\n          return [];\n        }), takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n      getPlaylist();\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","catchError","forkJoin","from","map","Observable","switchMap","takeWhile","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","getArtistById","artistId","getArtistAlbums","page","params","set","toString","artist","albumRequests","albums","albumUrl","getAllPlaylists","searchTerm","playlists","observer","getPlaylist","append","name","toLowerCase","includes","push","next","complete","error","subscribe","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {catchError, forkJoin, from, map, Observable, switchMap, takeWhile} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchAlbums(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n/*  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }*/\n\n  getArtistById(artistId: number): Observable<Artist> {\n    return this.http.get<Artist>(`${this.apiUrl}/artists/${artistId}`);\n  }\n\n  getArtistAlbums(artistId: number, page?: number): Observable<Album[]> {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    // @ts-ignore\n    return this.getArtistById(artistId).pipe(\n      switchMap(artist => {\n        const albumRequests = artist.albums.map(albumUrl => this.http.get<Album>(albumUrl));\n        return forkJoin(albumRequests);\n      })\n    );\n  }\n\n\n  getAllPlaylists(searchTerm?: string): Observable<any> {\n    let id = 1;\n    const playlists: any[] = [];\n\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, { params }).pipe(\n          map((response: any) => {\n            if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n              playlists.push(response);\n            }\n            id++;\n            if (response.id) {\n              // continue the loop\n              getPlaylist();\n            } else {\n              observer.next(playlists);\n              observer.complete();\n            }\n          }),\n          catchError(error => {\n            // stop the loop and return the playlists that have been fetched so far\n            observer.next(playlists);\n            observer.complete();\n            return [];\n          }),\n          takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n\n      getPlaylist();\n    });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n  artist: Artist;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n\nexport interface Artist {\n  id: number;\n  name: string;\n  songs: Song[];\n  albums: Album[];\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/88e8c038bc9d954ae91ab429ca37755baa06204aca14017d7006e0d6bbedc22f.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/88e8c038bc9d954ae91ab429ca37755baa06204aca14017d7006e0d6bbedc22f.json b/.angular/cache/15.2.5/babel-webpack/88e8c038bc9d954ae91ab429ca37755baa06204aca14017d7006e0d6bbedc22f.json
new file mode 100644
--- /dev/null	(date 1681067421033)
+++ b/.angular/cache/15.2.5/babel-webpack/88e8c038bc9d954ae91ab429ca37755baa06204aca14017d7006e0d6bbedc22f.json	(date 1681067421033)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      this.albums = albums;\n      console.log('Albums:', this.albums);\n      console.log(JSON.stringify(this.albums));\n    });\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACA,MAAM,GAAGA,MAAM;MACpBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACF,MAAM,CAAC;MACnCC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACJ,MAAM,CAAC,CAAC;IAE1C,CAAC,CAAC;EACN;;AAfWZ,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlCtB,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","console","log","JSON","stringify","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId)\n      .subscribe(albums => {\n        this.albums = albums;\n        console.log('Albums:', this.albums);\n        console.log(JSON.stringify(this.albums));\n\n      });\n  }\n\n\n  /*ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let artistId = parseInt(<string>params.get('id'));\n      this.apiService.getArtistDetails(artistId).subscribe(\n        (response: any) => {\n          this.artist = response;\n          this.albums = response.albums;\n          console.log('Albums:', this.albums);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    });\n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/74f1fd22e52450af0922646b20b9f53b71266b6f0bf6e4216dec6b140d18c687.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/74f1fd22e52450af0922646b20b9f53b71266b6f0bf6e4216dec6b140d18c687.json b/.angular/cache/15.2.5/babel-webpack/74f1fd22e52450af0922646b20b9f53b71266b6f0bf6e4216dec6b140d18c687.json
new file mode 100644
--- /dev/null	(date 1681067335185)
+++ b/.angular/cache/15.2.5/babel-webpack/74f1fd22e52450af0922646b20b9f53b71266b6f0bf6e4216dec6b140d18c687.json	(date 1681067335185)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { catchError, forkJoin, from, map, Observable, switchMap, takeWhile } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(keyword: string): Observable<Playlist[]> {\r\n      const url = `${this.apiUrl}/playlists?q=${keyword}`;\r\n      return this.http.get<Playlist[]>(url);\r\n    }*/\n  getArtistById(artistId) {\n    return this.http.get(`${this.apiUrl}/artists/${artistId}`);\n  }\n  getArtistAlbums(artistId, page) {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    // @ts-ignore\n    return this.getArtistById(artistId).pipe(switchMap(artist => {\n      // @ts-ignore\n      const albumRequests = artist.albums.map(albumUrl => this.http.get(albumUrl));\n      return forkJoin(albumRequests);\n    }));\n  }\n  getAllPlaylists(searchTerm) {\n    let id = 1;\n    const playlists = [];\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, {\n          params\n        }).pipe(map(response => {\n          if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n            playlists.push(response);\n          }\n          id++;\n          if (response.id) {\n            // continue the loop\n            getPlaylist();\n          } else {\n            observer.next(playlists);\n            observer.complete();\n          }\n        }), catchError(error => {\n          // stop the loop and return the playlists that have been fetched so far\n          observer.next(playlists);\n          observer.complete();\n          return [];\n        }), takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n      getPlaylist();\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","catchError","forkJoin","from","map","Observable","switchMap","takeWhile","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","getArtistById","artistId","getArtistAlbums","page","params","set","toString","artist","albumRequests","albums","albumUrl","getAllPlaylists","searchTerm","playlists","observer","getPlaylist","append","name","toLowerCase","includes","push","next","complete","error","subscribe","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {catchError, forkJoin, from, map, Observable, switchMap, takeWhile} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchAlbums(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n/*  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }*/\n\n  getArtistById(artistId: number): Observable<Artist> {\n    return this.http.get<Artist>(`${this.apiUrl}/artists/${artistId}`);\n  }\n\n  getArtistAlbums(artistId: number, page?: number): Observable<Album[]> {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n\n    // @ts-ignore\n    return this.getArtistById(artistId).pipe(\n      switchMap(artist => {\n        // @ts-ignore\n        const albumRequests = artist.albums.map(albumUrl => this.http.get<Album>(albumUrl));\n        return forkJoin(albumRequests);\n      })\n    );\n  }\n\n\n  getAllPlaylists(searchTerm?: string): Observable<any> {\n    let id = 1;\n    const playlists: any[] = [];\n\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, { params }).pipe(\n          map((response: any) => {\n            if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n              playlists.push(response);\n            }\n            id++;\n            if (response.id) {\n              // continue the loop\n              getPlaylist();\n            } else {\n              observer.next(playlists);\n              observer.complete();\n            }\n          }),\n          catchError(error => {\n            // stop the loop and return the playlists that have been fetched so far\n            observer.next(playlists);\n            observer.complete();\n            return [];\n          }),\n          takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n\n      getPlaylist();\n    });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n  artist: Artist;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n\nexport interface Artist {\n  id: number;\n  name: string;\n  songs: Song[];\n  albums: Album[];\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/0e249693974170aecd26cd81b091907c4bf248aa8b614d18d728f49729476b95.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/0e249693974170aecd26cd81b091907c4bf248aa8b614d18d728f49729476b95.json b/.angular/cache/15.2.5/babel-webpack/0e249693974170aecd26cd81b091907c4bf248aa8b614d18d728f49729476b95.json
new file mode 100644
--- /dev/null	(date 1681067153695)
+++ b/.angular/cache/15.2.5/babel-webpack/0e249693974170aecd26cd81b091907c4bf248aa8b614d18d728f49729476b95.json	(date 1681067153695)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { catchError, forkJoin, from, map, Observable, switchMap, takeWhile } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(keyword: string): Observable<Playlist[]> {\r\n      const url = `${this.apiUrl}/playlists?q=${keyword}`;\r\n      return this.http.get<Playlist[]>(url);\r\n    }*/\n  getArtistById(artistId) {\n    return this.http.get(`${this.apiUrl}/artists/${artistId}`);\n  }\n  getArtistAlbums(artistId, page) {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.getArtistById(artistId).pipe(switchMap(artist => {\n      const albumRequests = artist.albums.map(albumUrl => this.http.get(this.apiUrl + albumUrl));\n      return forkJoin(albumRequests);\n    }));\n  }\n  getAllPlaylists(searchTerm) {\n    let id = 1;\n    const playlists = [];\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, {\n          params\n        }).pipe(map(response => {\n          if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n            playlists.push(response);\n          }\n          id++;\n          if (response.id) {\n            // continue the loop\n            getPlaylist();\n          } else {\n            observer.next(playlists);\n            observer.complete();\n          }\n        }), catchError(error => {\n          // stop the loop and return the playlists that have been fetched so far\n          observer.next(playlists);\n          observer.complete();\n          return [];\n        }), takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n      getPlaylist();\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","catchError","forkJoin","from","map","Observable","switchMap","takeWhile","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","getArtistById","artistId","getArtistAlbums","page","params","set","toString","artist","albumRequests","albums","albumUrl","getAllPlaylists","searchTerm","playlists","observer","getPlaylist","append","name","toLowerCase","includes","push","next","complete","error","subscribe","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {catchError, forkJoin, from, map, Observable, switchMap, takeWhile} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchAlbums(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n/*  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }*/\n\n  getArtistById(artistId: number): Observable<Artist> {\n    return this.http.get<Artist>(`${this.apiUrl}/artists/${artistId}`);\n  }\n\n  getArtistAlbums(artistId: number, page?: number): Observable<Album[]> {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n\n    return this.getArtistById(artistId).pipe(\n      switchMap(artist => {\n        const albumRequests = artist.albums.map(albumUrl => this.http.get<Album>(this.apiUrl + albumUrl));\n        return forkJoin(albumRequests);\n      })\n    );\n  }\n\n\n  getAllPlaylists(searchTerm?: string): Observable<any> {\n    let id = 1;\n    const playlists: any[] = [];\n\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, { params }).pipe(\n          map((response: any) => {\n            if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n              playlists.push(response);\n            }\n            id++;\n            if (response.id) {\n              // continue the loop\n              getPlaylist();\n            } else {\n              observer.next(playlists);\n              observer.complete();\n            }\n          }),\n          catchError(error => {\n            // stop the loop and return the playlists that have been fetched so far\n            observer.next(playlists);\n            observer.complete();\n            return [];\n          }),\n          takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n\n      getPlaylist();\n    });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n  artist: Artist;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n\nexport interface Artist {\n  id: number;\n  name: string;\n  songs: Song[];\n  albums: Album[];\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: node_modules/__ngcc_entry_points__.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/__ngcc_entry_points__.json b/node_modules/__ngcc_entry_points__.json
new file mode 100644
--- /dev/null	(date 1681062468050)
+++ b/node_modules/__ngcc_entry_points__.json	(date 1681062468050)
@@ -0,0 +1,1 @@
+{"ngccVersion":"15.2.6","configFileHash":"6883213aec2e6448f60915f864b10646a78045af10f17ba40f81f18dd7c1b8e7","lockFileHash":"0531e7ac89481ce928a49c9599832eaac001a998e4bd6b11fc0aaf02fa70b528","entryPointPaths":[["@ampproject/remapping","@ampproject/remapping"],["@angular/animations","@angular/animations"],["@angular/animations","@angular/animations/browser"],["@angular/animations","@angular/animations/browser/testing"],["@angular/cli","@angular/cli"],["@angular/common","@angular/common"],["@angular/common","@angular/common/http"],["@angular/common","@angular/common/http/testing"],["@angular/common","@angular/common/testing"],["@angular/common","@angular/common/upgrade"],["@angular/compiler","@angular/compiler"],["@angular/compiler","@angular/compiler/testing"],["@angular/compiler-cli","@angular/compiler-cli"],["@angular/compiler-cli","@angular/compiler-cli/linker"],["@angular/compiler-cli","@angular/compiler-cli/linker/babel"],["@angular/compiler-cli","@angular/compiler-cli/ngcc"],["@angular/core","@angular/core"],["@angular/core","@angular/core/testing"],["@angular/forms","@angular/forms"],["@angular/platform-browser","@angular/platform-browser"],["@angular/platform-browser","@angular/platform-browser/animations"],["@angular/platform-browser","@angular/platform-browser/testing"],["@angular/platform-browser-dynamic","@angular/platform-browser-dynamic"],["@angular/platform-browser-dynamic","@angular/platform-browser-dynamic/testing"],["@angular/router","@angular/router"],["@angular/router","@angular/router/testing"],["@angular/router","@angular/router/upgrade"],["@angular/youtube-player","@angular/youtube-player"],["@angular-devkit/architect","@angular-devkit/architect"],["@angular-devkit/build-angular","@angular-devkit/build-angular"],["@angular-devkit/build-webpack","@angular-devkit/build-webpack"],["@angular-devkit/core","@angular-devkit/core"],["@angular-devkit/core","@angular-devkit/core/node"],["@angular-devkit/schematics","@angular-devkit/schematics"],["@angular-devkit/schematics","@angular-devkit/schematics/tasks"],["@angular-devkit/schematics","@angular-devkit/schematics/testing"],["@angular-devkit/schematics","@angular-devkit/schematics/tools"],["@assemblyscript/loader","@assemblyscript/loader"],["@babel/parser","@babel/parser"],["@babel/types","@babel/types"],["@discoveryjs/json-ext","@discoveryjs/json-ext"],["@jridgewell/gen-mapping","@jridgewell/gen-mapping"],["@jridgewell/resolve-uri","@jridgewell/resolve-uri"],["@jridgewell/set-array","@jridgewell/set-array"],["@jridgewell/source-map","@jridgewell/source-map"],["@jridgewell/sourcemap-codec","@jridgewell/sourcemap-codec"],["@jridgewell/trace-mapping","@jridgewell/trace-mapping"],["@leichtgewicht/ip-codec","@leichtgewicht/ip-codec"],["@ngtools/webpack","@ngtools/webpack"],["@nodelib/fs.scandir","@nodelib/fs.scandir"],["@nodelib/fs.stat","@nodelib/fs.stat"],["@nodelib/fs.walk","@nodelib/fs.walk"],["@sigstore/protobuf-specs","@sigstore/protobuf-specs"],["@socket.io/component-emitter","@socket.io/component-emitter"],["@tailwindcss/forms","@tailwindcss/forms"],["@tootallnate/once","@tootallnate/once"],["@tufjs/models","@tufjs/models"],["@types/body-parser","@types/body-parser"],["@types/bonjour","@types/bonjour"],["@types/connect","@types/connect"],["@types/connect-history-api-fallback","@types/connect-history-api-fallback"],["@types/cookie","@types/cookie"],["@types/cors","@types/cors"],["@types/eslint","@types/eslint"],["@types/eslint","@types/eslint/rules"],["@types/eslint-scope","@types/eslint-scope"],["@types/estree","@types/estree"],["@types/express","@types/express"],["@types/express-serve-static-core","@types/express-serve-static-core"],["@types/http-proxy","@types/http-proxy"],["@types/jasmine","@types/jasmine"],["@types/json-schema","@types/json-schema"],["@types/mime","@types/mime"],["@types/node","@types/node"],["@types/parse-json","@types/parse-json"],["@types/qs","@types/qs"],["@types/range-parser","@types/range-parser"],["@types/retry","@types/retry"],["@types/serve-index","@types/serve-index"],["@types/serve-static","@types/serve-static"],["@types/sockjs","@types/sockjs"],["@types/ws","@types/ws"],["@types/youtube","@types/youtube"],["@xtuc/long","@xtuc/long"],["abab","abab"],["acorn","acorn"],["agent-base","agent-base"],["agentkeepalive","agentkeepalive"],["ajv","ajv"],["ajv-formats","ajv-formats"],["ajv-keywords","ajv-keywords"],["ansi-colors","ansi-colors"],["any-promise","any-promise"],["arg","arg"],["array-flatten","array-flatten"],["autoprefixer","autoprefixer"],["base64-js","base64-js"],["big.js","big.js"],["bonjour-service","bonjour-service"],["browserslist","browserslist"],["buffer","buffer"],["chalk","chalk"],["chokidar","chokidar"],["chrome-trace-event","chrome-trace-event"],["cliui","cliui"],["colorette","colorette"],["commander","commander"],["copy-anything","copy-anything"],["copy-webpack-plugin","copy-webpack-plugin"],["cosmiconfig","cosmiconfig"],["critters","critters"],["css-select","css-select"],["css-what","css-what"],["dependency-graph","dependency-graph"],["dom-serializer","dom-serializer"],["domelementtype","domelementtype"],["domhandler","domhandler"],["domutils","domutils"],["emoji-regex","emoji-regex"],["engine.io","engine.io"],["engine.io-parser","engine.io-parser"],["enhanced-resolve","enhanced-resolve"],["entities","entities"],["es-module-lexer","es-module-lexer"],["esbuild","esbuild"],["esbuild-wasm","esbuild-wasm"],["escalade","escalade"],["eventemitter-asyncresource","eventemitter-asyncresource"],["eventemitter3","eventemitter3"],["external-editor","external-editor"],["fast-deep-equal","fast-deep-equal"],["fast-glob","fast-glob"],["fast-json-stable-stringify","fast-json-stable-stringify"],["faye-websocket","faye-websocket"],["flatted","flatted"],["fraction.js","fraction.js"],["gauge","gauge"],["get-caller-file","get-caller-file"],["get-package-type","get-package-type"],["has","has"],["hdr-histogram-js","hdr-histogram-js"],["html-entities","html-entities"],["http-parser-js","http-parser-js"],["http-proxy-agent","http-proxy-agent"],["http-proxy-middleware","http-proxy-middleware"],["https-proxy-agent","https-proxy-agent"],["human-signals","human-signals"],["iconv-lite","iconv-lite"],["ieee754","ieee754"],["immutable","immutable"],["ipaddr.js","ipaddr.js"],["is-plain-object","is-plain-object"],["is-what","is-what"],["isbinaryfile","isbinaryfile"],["isobject","isobject"],["jest-worker","jest-worker"],["jiti","jiti"],["json-schema-traverse","json-schema-traverse"],["json5","json5"],["jsonc-parser","jsonc-parser"],["klona","klona"],["klona","klona/full"],["klona","klona/json"],["klona","klona/lite"],["license-webpack-plugin","license-webpack-plugin"],["lilconfig","lilconfig"],["lines-and-columns","lines-and-columns"],["log4js","log4js"],["magic-string","magic-string"],["memfs","memfs"],["mini-css-extract-plugin","mini-css-extract-plugin"],["mini-svg-data-uri","mini-svg-data-uri"],["minipass","minipass"],["nanoid","nanoid"],["nanoid","nanoid/async"],["nanoid","nanoid/non-secure"],["nanoid","nanoid/url-alphabet"],["npm-pick-manifest","npm-pick-manifest"],["npm-registry-fetch","npm-registry-fetch"],["nth-check","nth-check"],["parse5-html-rewriting-stream","parse5-html-rewriting-stream"],["parse5-sax-parser","parse5-sax-parser"],["path-scurry","path-scurry"],["picocolors","picocolors"],["pirates","pirates"],["piscina","piscina"],["piscina","piscina/dist"],["postcss","postcss"],["postcss-load-config","postcss-load-config"],["postcss-selector-parser","postcss-selector-parser"],["postcss-value-parser","postcss-value-parser"],["queue-microtask","queue-microtask"],["readdirp","readdirp"],["reflect-metadata","reflect-metadata"],["regex-parser","regex-parser"],["regjsparser","regjsparser"],["rfdc","rfdc"],["rxjs","rxjs"],["rxjs","rxjs/ajax"],["rxjs","rxjs/fetch"],["rxjs","rxjs/operators"],["rxjs","rxjs/testing"],["rxjs","rxjs/webSocket"],["safe-buffer","safe-buffer"],["sass","sass"],["schema-utils","schema-utils"],["selfsigned","selfsigned"],["setprototypeof","setprototypeof"],["sigstore","sigstore"],["smart-buffer","smart-buffer"],["socket.io","socket.io"],["socket.io-adapter","socket.io-adapter"],["socket.io-parser","socket.io-parser"],["socks","socks"],["socks-proxy-agent","socks-proxy-agent"],["source-map","source-map"],["source-map-js","source-map-js"],["spdy","spdy"],["spdy-transport","spdy-transport"],["sucrase","sucrase"],["symbol-observable","symbol-observable"],["tailwindcss","tailwindcss"],["tapable","tapable"],["terser","terser"],["terser","terser/bin"],["terser-webpack-plugin","terser-webpack-plugin"],["tree-kill","tree-kill"],["ts-interface-checker","ts-interface-checker"],["tslib","tslib"],["tuf-js","tuf-js"],["type-fest","type-fest"],["typed-assert","typed-assert"],["typescript","typescript"],["update-browserslist-db","update-browserslist-db"],["uri-js","uri-js"],["validate-npm-package-name","validate-npm-package-name"],["webpack","webpack"],["webpack-dev-middleware","webpack-dev-middleware"],["webpack-dev-server","webpack-dev-server"],["webpack-merge","webpack-merge"],["webpack-subresource-integrity","webpack-subresource-integrity"],["websocket-driver","websocket-driver"],["y18n","y18n"],["yaml","yaml"],["yargs","yargs"],["yargs-parser","yargs-parser"],["zone.js","zone.js"]]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/bd7c96ead948737674555a3d9eb8f4cbbc6a625359adf1bb3d60f4b10cc35b7a.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/bd7c96ead948737674555a3d9eb8f4cbbc6a625359adf1bb3d60f4b10cc35b7a.json b/.angular/cache/15.2.5/babel-webpack/bd7c96ead948737674555a3d9eb8f4cbbc6a625359adf1bb3d60f4b10cc35b7a.json
new file mode 100644
--- /dev/null	(date 1681067055151)
+++ b/.angular/cache/15.2.5/babel-webpack/bd7c96ead948737674555a3d9eb8f4cbbc6a625359adf1bb3d60f4b10cc35b7a.json	(date 1681067055151)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { catchError, forkJoin, from, map, Observable, switchMap, takeWhile } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(keyword: string): Observable<Playlist[]> {\r\n      const url = `${this.apiUrl}/playlists?q=${keyword}`;\r\n      return this.http.get<Playlist[]>(url);\r\n    }*/\n  getArtistById(artistId) {\n    return this.http.get(`${this.apiUrl}/artists/${artistId}`);\n  }\n  getArtistAlbums(artistId, page) {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.getArtistById(artistId).pipe(switchMap(artist => {\n      const albumRequests = artist.albums.map(albumUrl => this.http.get(this.apiUrl));\n      return forkJoin(albumRequests);\n    }));\n  }\n  getAllPlaylists(searchTerm) {\n    let id = 1;\n    const playlists = [];\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, {\n          params\n        }).pipe(map(response => {\n          if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n            playlists.push(response);\n          }\n          id++;\n          if (response.id) {\n            // continue the loop\n            getPlaylist();\n          } else {\n            observer.next(playlists);\n            observer.complete();\n          }\n        }), catchError(error => {\n          // stop the loop and return the playlists that have been fetched so far\n          observer.next(playlists);\n          observer.complete();\n          return [];\n        }), takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n      getPlaylist();\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","catchError","forkJoin","from","map","Observable","switchMap","takeWhile","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","getArtistById","artistId","getArtistAlbums","page","params","set","toString","artist","albumRequests","albums","albumUrl","getAllPlaylists","searchTerm","playlists","observer","getPlaylist","append","name","toLowerCase","includes","push","next","complete","error","subscribe","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {catchError, forkJoin, from, map, Observable, switchMap, takeWhile} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchAlbums(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n/*  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }*/\n\n  getArtistById(artistId: number): Observable<Artist> {\n    return this.http.get<Artist>(`${this.apiUrl}/artists/${artistId}`);\n  }\n\n  getArtistAlbums(artistId: number, page?: number): Observable<Album[]> {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n\n    return this.getArtistById(artistId).pipe(\n      switchMap(artist => {\n        const albumRequests = artist.albums.map(albumUrl => this.http.get<Album>(this.apiUrl));\n        return forkJoin(albumRequests);\n      })\n    );\n  }\n\n\n  getAllPlaylists(searchTerm?: string): Observable<any> {\n    let id = 1;\n    const playlists: any[] = [];\n\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, { params }).pipe(\n          map((response: any) => {\n            if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n              playlists.push(response);\n            }\n            id++;\n            if (response.id) {\n              // continue the loop\n              getPlaylist();\n            } else {\n              observer.next(playlists);\n              observer.complete();\n            }\n          }),\n          catchError(error => {\n            // stop the loop and return the playlists that have been fetched so far\n            observer.next(playlists);\n            observer.complete();\n            return [];\n          }),\n          takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n\n      getPlaylist();\n    });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n  artist: Artist;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n\nexport interface Artist {\n  id: number;\n  name: string;\n  songs: Song[];\n  albums: Album[];\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/c0f1f056293d7f9d1303ab4a0958cb946ca14cc89d45c88a82d702e1f491e84d.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/c0f1f056293d7f9d1303ab4a0958cb946ca14cc89d45c88a82d702e1f491e84d.json b/.angular/cache/15.2.5/babel-webpack/c0f1f056293d7f9d1303ab4a0958cb946ca14cc89d45c88a82d702e1f491e84d.json
new file mode 100644
--- /dev/null	(date 1681066937334)
+++ b/.angular/cache/15.2.5/babel-webpack/c0f1f056293d7f9d1303ab4a0958cb946ca14cc89d45c88a82d702e1f491e84d.json	(date 1681066937334)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      this.albums = albums;\n      console.log('Albums:', this.albums);\n    });\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACA,MAAM,GAAGA,MAAM;MACpBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACF,MAAM,CAAC;IACrC,CAAC,CAAC;EACN;;AAbWZ,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlCpB,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId)\n      .subscribe(albums => {\n        this.albums = albums;\n        console.log('Albums:', this.albums);\n      });\n  }\n\n\n  /*ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let artistId = parseInt(<string>params.get('id'));\n      this.apiService.getArtistDetails(artistId).subscribe(\n        (response: any) => {\n          this.artist = response;\n          this.albums = response.albums;\n          console.log('Albums:', this.albums);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    });\n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/3c08f5cfb2b1e05b7679b11f0eaa80a0fda2cf3b787395dded00701b1613a8c3.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/3c08f5cfb2b1e05b7679b11f0eaa80a0fda2cf3b787395dded00701b1613a8c3.json b/.angular/cache/15.2.5/babel-webpack/3c08f5cfb2b1e05b7679b11f0eaa80a0fda2cf3b787395dded00701b1613a8c3.json
new file mode 100644
--- /dev/null	(date 1681066937466)
+++ b/.angular/cache/15.2.5/babel-webpack/3c08f5cfb2b1e05b7679b11f0eaa80a0fda2cf3b787395dded00701b1613a8c3.json	(date 1681066937466)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { catchError, forkJoin, from, map, Observable, switchMap, takeWhile } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(keyword: string): Observable<Playlist[]> {\r\n      const url = `${this.apiUrl}/playlists?q=${keyword}`;\r\n      return this.http.get<Playlist[]>(url);\r\n    }*/\n  getArtistById(artistId) {\n    return this.http.get(`${this.apiUrl}/artists/${artistId}`);\n  }\n  getArtistAlbums(artistId, page) {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.getArtistById(artistId).pipe(switchMap(artist => {\n      const albumRequests = artist.albums.map(albumUrl => this.http.get(this.apiUrl));\n      return forkJoin(albumRequests);\n    }));\n  }\n  getAllPlaylists(searchTerm) {\n    let id = 1;\n    const playlists = [];\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, {\n          params\n        }).pipe(map(response => {\n          if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n            playlists.push(response);\n          }\n          id++;\n          if (response.id) {\n            // continue the loop\n            getPlaylist();\n          } else {\n            observer.next(playlists);\n            observer.complete();\n          }\n        }), catchError(error => {\n          // stop the loop and return the playlists that have been fetched so far\n          observer.next(playlists);\n          observer.complete();\n          return [];\n        }), takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n      getPlaylist();\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAoBA,UAAU,QAAO,sBAAsB;AAC3D,SAAQC,UAAU,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,GAAG,EAAEC,UAAU,EAAEC,SAAS,EAAEC,SAAS,QAAO,MAAM;;;AAKtF,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,0DAA0D;EAG3E;EAEAC,SAAS;IACP,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,SAAS,CAAC;EAC/C;EAEAC,QAAQ,CAACC,EAAU;IACjB,OAAOZ,IAAI,CACTa,KAAK,CAAC,GAAG,IAAI,CAACH,MAAM,WAAWE,EAAE,EAAE,CAAC,CACjCE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACrC;EACH;EACAC,OAAO,CAACL,EAAU;IAChB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,UAAUE,EAAE,EAAE,CAAC;EACpD;EAGAM,WAAW,CAACC,KAAa;IACvB,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,gBAAgBS,KAAK,EAAE,CAAC,CAACC,IAAI,CAC9DnB,GAAG,CAAEc,QAAa,IAAI;MACpB,IAAIM,KAAK,CAACC,OAAO,CAACP,QAAQ,CAAC,EAAE;QAC3B,OAAOA,QAAQ;OAChB,MAAM;QACL,OAAO,CAACA,QAAQ,CAAC;;IAErB,CAAC,CAAC,CACH;EACH;EAEAQ,aAAa,CAACJ,KAAa;IACzB,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,iBAAiBS,KAAK,EAAE,CAAC,CAACC,IAAI,CAC/DnB,GAAG,CAAEc,QAAa,IAAI;MACpB,IAAIM,KAAK,CAACC,OAAO,CAACP,QAAQ,CAAC,EAAE;QAC3B,OAAOA,QAAQ;OAChB,MAAM;QACL,OAAO,CAACA,QAAQ,CAAC;;IAErB,CAAC,CAAC,CACH;EACH;EAEAS,YAAY,CAACL,KAAa;IACxB,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,iBAAiBS,KAAK,EAAE,CAAC,CAACC,IAAI,CAC/DnB,GAAG,CAAEc,QAAa,IAAI;MAClB,IAAIM,KAAK,CAACC,OAAO,CAACP,QAAQ,CAAC,EAAE;QAC3B,OAAOA,QAAQ;OAChB,MAAM;QACL,OAAO,CAACA,QAAQ,CAAC;;IAErB,CAAC,CACF,CAAC;EACN;EAEF;;;;EAKEU,aAAa,CAACC,QAAgB;IAC5B,OAAO,IAAI,CAACnB,IAAI,CAACE,GAAG,CAAS,GAAG,IAAI,CAACC,MAAM,YAAYgB,QAAQ,EAAE,CAAC;EACpE;EAEAC,eAAe,CAACD,QAAgB,EAAEE,IAAa;IAC7C,IAAIC,MAAM,GAAG,IAAIhC,UAAU,EAAE,CAACiC,GAAG,CAAC,UAAU,EAAEJ,QAAQ,CAACK,QAAQ,EAAE,CAAC;IAClE,IAAIH,IAAI,EAAE;MACRC,MAAM,GAAGA,MAAM,CAACC,GAAG,CAAC,MAAM,EAAEF,IAAI,CAACG,QAAQ,EAAE,CAAC;;IAG9C,OAAO,IAAI,CAACN,aAAa,CAACC,QAAQ,CAAC,CAACN,IAAI,CACtCjB,SAAS,CAAC6B,MAAM,IAAG;MACjB,MAAMC,aAAa,GAAGD,MAAM,CAACE,MAAM,CAACjC,GAAG,CAACkC,QAAQ,IAAI,IAAI,CAAC5B,IAAI,CAACE,GAAG,CAAQ,IAAI,CAACC,MAAM,CAAC,CAAC;MACtF,OAAOX,QAAQ,CAACkC,aAAa,CAAC;IAChC,CAAC,CAAC,CACH;EACH;EAGAG,eAAe,CAACC,UAAmB;IACjC,IAAIzB,EAAE,GAAG,CAAC;IACV,MAAM0B,SAAS,GAAU,EAAE;IAE3B,OAAO,IAAIpC,UAAU,CAACqC,QAAQ,IAAG;MAC/B,MAAMC,WAAW,GAAG,MAAK;QACvB,IAAIX,MAAM,GAAG,IAAIhC,UAAU,EAAE;QAC7B,IAAIwC,UAAU,EAAE;UACdR,MAAM,GAAGA,MAAM,CAACY,MAAM,CAAC,GAAG,EAAEJ,UAAU,CAAC;;QAEzC,IAAI,CAAC9B,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,cAAcE,EAAE,EAAE,EAAE;UAAEiB;QAAM,CAAE,CAAC,CAACT,IAAI,CAC9DnB,GAAG,CAAEc,QAAa,IAAI;UACpB,IAAI,CAACsB,UAAU,IAAItB,QAAQ,CAAC2B,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACP,UAAU,CAACM,WAAW,EAAE,CAAC,EAAE;YACjFL,SAAS,CAACO,IAAI,CAAC9B,QAAQ,CAAC;;UAE1BH,EAAE,EAAE;UACJ,IAAIG,QAAQ,CAACH,EAAE,EAAE;YACf;YACA4B,WAAW,EAAE;WACd,MAAM;YACLD,QAAQ,CAACO,IAAI,CAACR,SAAS,CAAC;YACxBC,QAAQ,CAACQ,QAAQ,EAAE;;QAEvB,CAAC,CAAC,EACFjD,UAAU,CAACkD,KAAK,IAAG;UACjB;UACAT,QAAQ,CAACO,IAAI,CAACR,SAAS,CAAC;UACxBC,QAAQ,CAACQ,QAAQ,EAAE;UACnB,OAAO,EAAE;QACX,CAAC,CAAC,EACF3C,SAAS,CAAC,MAAMQ,EAAE,GAAG,IAAI,CAAC,CAAC;QAAA,CAC5B,CAACqC,SAAS,EAAE;MACf,CAAC;MAEDT,WAAW,EAAE;IACf,CAAC,CAAC;EACJ;;AAtHWnC,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAA6C,SAAd7C,cAAc;EAAA8C,YAFb;AAAM","names":["HttpParams","catchError","forkJoin","from","map","Observable","switchMap","takeWhile","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","getArtistById","artistId","getArtistAlbums","page","params","set","toString","artist","albumRequests","albums","albumUrl","getAllPlaylists","searchTerm","playlists","observer","getPlaylist","append","name","toLowerCase","includes","push","next","complete","error","subscribe","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {catchError, forkJoin, from, map, Observable, switchMap, takeWhile} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchAlbums(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n/*  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }*/\n\n  getArtistById(artistId: number): Observable<Artist> {\n    return this.http.get<Artist>(`${this.apiUrl}/artists/${artistId}`);\n  }\n\n  getArtistAlbums(artistId: number, page?: number): Observable<Album[]> {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    \n    return this.getArtistById(artistId).pipe(\n      switchMap(artist => {\n        const albumRequests = artist.albums.map(albumUrl => this.http.get<Album>(this.apiUrl));\n        return forkJoin(albumRequests);\n      })\n    );\n  }\n\n\n  getAllPlaylists(searchTerm?: string): Observable<any> {\n    let id = 1;\n    const playlists: any[] = [];\n\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, { params }).pipe(\n          map((response: any) => {\n            if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n              playlists.push(response);\n            }\n            id++;\n            if (response.id) {\n              // continue the loop\n              getPlaylist();\n            } else {\n              observer.next(playlists);\n              observer.complete();\n            }\n          }),\n          catchError(error => {\n            // stop the loop and return the playlists that have been fetched so far\n            observer.next(playlists);\n            observer.complete();\n            return [];\n          }),\n          takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n\n      getPlaylist();\n    });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n  artist: Artist;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n\nexport interface Artist {\n  id: number;\n  name: string;\n  songs: Song[];\n  albums: Album[];\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/d2b60a8e289ed8db98f1b938ce6dcffce06e91add4703ee5150f62963498af8b.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/d2b60a8e289ed8db98f1b938ce6dcffce06e91add4703ee5150f62963498af8b.json b/.angular/cache/15.2.5/babel-webpack/d2b60a8e289ed8db98f1b938ce6dcffce06e91add4703ee5150f62963498af8b.json
new file mode 100644
--- /dev/null	(date 1681066920463)
+++ b/.angular/cache/15.2.5/babel-webpack/d2b60a8e289ed8db98f1b938ce6dcffce06e91add4703ee5150f62963498af8b.json	(date 1681066920463)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = function (a1) {\n  return [\"/album\", a1];\n};\nfunction SearchComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Album\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"a\", 10);\n    i0.ɵɵelement(5, \"img\", 11);\n    i0.ɵɵelementStart(6, \"h5\", 12);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const album_r4 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, album_r4.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r4.title);\n    i0.ɵɵproperty(\"src\", album_r4.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r4.title);\n  }\n}\nfunction SearchComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"h5\", 12)(3, \"p\", 9);\n    i0.ɵɵtext(4, \"Artiste\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"a\", 10);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const artist_r5 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/artist-details/\", artist_r5.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(artist_r5.name);\n  }\n}\nfunction SearchComponent_div_11_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const artist_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(artist_r8.name);\n  }\n}\nfunction SearchComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Chanson\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h5\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, SearchComponent_div_11_div_6_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const song_r6 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(song_r6.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", song_r6.artists);\n  }\n}\nfunction SearchComponent_div_12_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const song_r11 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(song_r11.title);\n  }\n}\nfunction SearchComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3, \"Playlist\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h5\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, SearchComponent_div_12_div_6_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const playlist_r9 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(playlist_r9.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", playlist_r9.songs);\n  }\n}\nexport class SearchComponent {\n  constructor(spotifyService, http, router) {\n    this.spotifyService = spotifyService;\n    this.http = http;\n    this.router = router;\n    this.searchText = '';\n    this.songs = [];\n    this.artists = [];\n    this.albums = [];\n    this.playlists = [];\n  }\n  ngOnInit() {\n    this.spotifyService.getAlbums().subscribe(data => {\n      this.albums = Object.values(data);\n    });\n  }\n  search() {\n    // Appel à la méthode de recherche de chansons\n    this.spotifyService.searchSongs(this.searchText).subscribe(response => {\n      this.songs = response;\n    });\n    // Appel à la méthode de recherche d'artistes\n    this.spotifyService.searchArtists(this.searchText).subscribe(response => {\n      this.artists = response;\n    });\n    // Appel à la méthode de recherche d'albums\n    this.spotifyService.searchAlbums(this.searchText).subscribe(response => {\n      this.albums = response;\n    });\n    // Appel à la méthode de recherche de playlists\n    this.spotifyService.getAllPlaylists(this.searchText).subscribe(playlists => {\n      this.playlists = playlists;\n    }, error => {\n      console.log('Error searching playlists');\n    });\n  }\n}\nSearchComponent.ɵfac = function SearchComponent_Factory(t) {\n  return new (t || SearchComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchComponent,\n  selectors: [[\"app-search\"]],\n  decls: 13,\n  vars: 5,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-3xl\", \"font-semibold\", \"text-green-500\", \"mb-4\"], [1, \"flex\", \"items-center\", \"mb-5\"], [\"type\", \"text\", \"placeholder\", \"Recherchez des chansons, artistes, albums ou playlists\", 1, \"bg-gray-200\", \"text-gray-800\", \"p-2\", \"rounded\", \"w-full\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-green-500\", \"transition\", \"duration-300\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [1, \"bg-green-500\", \"hover:bg-green-600\", \"text-white\", \"py-2\", \"px-4\", \"ml-2\", \"rounded\", \"transition\", \"duration-300\", 3, \"click\"], [1, \"grid\", \"grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"text-gray-400\"], [3, \"routerLink\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function SearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Spotify Clone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function SearchComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.searchText = $event;\n      })(\"input\", function SearchComponent_Template_input_input_5_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function SearchComponent_Template_button_click_6_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵtext(7, \"Rechercher \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵtemplate(9, SearchComponent_div_9_Template, 8, 6, \"div\", 7);\n      i0.ɵɵtemplate(10, SearchComponent_div_10_Template, 7, 2, \"div\", 7);\n      i0.ɵɵtemplate(11, SearchComponent_div_11_Template, 7, 2, \"div\", 7);\n      i0.ɵɵtemplate(12, SearchComponent_div_12_Template, 7, 2, \"div\", 7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchText);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.artists);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.songs);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.playlists);\n    }\n  },\n  dependencies: [i4.NgForOf, i3.RouterLink, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;IAaMA,2BAAkC;IAELA,qBAAK;IAAAA,iBAAI;IAClCA,6BAAuC;IACrCA,0BAA4E;IAC5EA,8BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IAFtEA,eAAmC;IAAnCA,oEAAmC;IACgBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;;;IAIxEA,2BAAoC;IAGLA,uBAAO;IAAAA,iBAAI;IACpCA,6BAAgD;IAAAA,YAAiB;IAAAA,iBAAI;;;;IAAlEA,eAA4C;IAA5CA,6EAA4C;IAACA,eAAiB;IAAjBA,oCAAiB;;;;;IASnEA,2BAAyC;IACdA,YAAiB;IAAAA,iBAAI;;;;IAArBA,eAAiB;IAAjBA,oCAAiB;;;;;IALhDA,2BAAgC;IAEHA,uBAAO;IAAAA,iBAAI;IACpCA,8BAAiD;IAAAA,YAAgB;IAAAA,iBAAK;IACtEA,uEAEM;IACRA,iBAAM;;;;IAJ6CA,eAAgB;IAAhBA,mCAAgB;IACzCA,eAAe;IAAfA,yCAAe;;;;;IASvCA,2BAAyC;IACdA,YAAgB;IAAAA,iBAAI;;;;IAApBA,eAAgB;IAAhBA,oCAAgB;;;;;IAL/CA,2BAAwC;IAEXA,wBAAQ;IAAAA,iBAAI;IACrCA,8BAAiD;IAAAA,YAAmB;IAAAA,iBAAK;IACzEA,uEAEM;IACRA,iBAAM;;;;IAJ6CA,eAAmB;IAAnBA,sCAAmB;IAC9CA,eAAiB;IAAjBA,2CAAiB;;;ACjCjD,OAAM,MAAOC,eAAe;EAM1BC,YAAoBC,cAA8B,EAAUC,IAAgB,EAAUC,MAAc;IAAhF,mBAAc,GAAdF,cAAc;IAA0B,SAAI,GAAJC,IAAI;IAAsB,WAAM,GAANC,MAAM;IAL5F,eAAU,GAAW,EAAE;IACvB,UAAK,GAAU,EAAE;IACjB,YAAO,GAAU,EAAE;IACnB,WAAM,GAAU,EAAE;IAClB,cAAS,GAAe,EAAE;EAE1B;EAGAC,QAAQ;IACN,IAAI,CAACH,cAAc,CAACI,SAAS,EAAE,CAACC,SAAS,CAAEC,IAAS,IAAI;MACtD,IAAI,CAACC,MAAM,GAAGC,MAAM,CAACC,MAAM,CAACH,IAAI,CAAC;IACnC,CAAC,CAAC;EACJ;EAEAI,MAAM;IACJ;IACA,IAAI,CAACV,cAAc,CAACW,WAAW,CAAC,IAAI,CAACC,UAAU,CAAC,CAACP,SAAS,CAAEQ,QAAa,IAAI;MAC3E,IAAI,CAACC,KAAK,GAAGD,QAAQ;IACvB,CAAC,CAAC;IAEF;IACA,IAAI,CAACb,cAAc,CAACe,aAAa,CAAC,IAAI,CAACH,UAAU,CAAC,CAACP,SAAS,CAAEQ,QAAa,IAAI;MAC7E,IAAI,CAACG,OAAO,GAAGH,QAAQ;IACzB,CAAC,CAAC;IAEF;IACA,IAAI,CAACb,cAAc,CAACiB,YAAY,CAAC,IAAI,CAACL,UAAU,CAAC,CAACP,SAAS,CAAEQ,QAAa,IAAI;MAC5E,IAAI,CAACN,MAAM,GAAGM,QAAQ;IACxB,CAAC,CAAC;IAEF;IACA,IAAI,CAACb,cAAc,CAACkB,eAAe,CAAC,IAAI,CAACN,UAAU,CAAC,CAACP,SAAS,CAAEc,SAAgB,IAAI;MAChF,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC5B,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IAC1C,CAAC,CACF;EACH;;AAxCWxB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDX5B9B,8BAAsE;MAEXA,6BAAa;MAAAA,iBAAK;MACzEA,8BAAoC;MAGpBA;QAAA;MAAA,EAAwB;QAAA,OAAU+B,YAAQ;MAAA,EAAlB;MAFtC/B,iBAGwE;MACxEA,iCAC2B;MAAnBA;QAAA,OAAS+B,YAAQ;MAAA,EAAC;MAAC/B,2BAC3B;MAAAA,iBAAS;MAEXA,8BAAoC;MAClCA,gEAQM;MACNA,kEAOM;MAENA,kEAQM;MACNA,kEAQM;MACRA,iBAAM;;;MA3CUA,eAAwB;MAAxBA,wCAAwB;MAOfA,eAAS;MAATA,oCAAS;MASRA,eAAU;MAAVA,qCAAU;MASZA,eAAQ;MAARA,mCAAQ;MASJA,eAAY;MAAZA,uCAAY","names":["i0","SearchComponent","constructor","spotifyService","http","router","ngOnInit","getAlbums","subscribe","data","albums","Object","values","search","searchSongs","searchText","response","songs","searchArtists","artists","searchAlbums","getAllPlaylists","playlists","error","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\search\\search.component.html","C:\\IUT\\spotizer\\src\\app\\search\\search.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\r\n  <div class=\"container mx-auto p-4\">\r\n    <h1 class=\"text-3xl font-semibold text-green-500 mb-4\">Spotify Clone</h1>\r\n    <div class=\"flex items-center mb-5\">\r\n      <input\r\n        class=\"bg-gray-200 text-gray-800 p-2 rounded w-full focus:outline-none focus:ring-2 focus:ring-green-500 transition duration-300\"\r\n        type=\"text\" [(ngModel)]=\"searchText\" (input)=\"search()\"\r\n        placeholder=\"Recherchez des chansons, artistes, albums ou playlists\"/>\r\n      <button class=\"bg-green-500 hover:bg-green-600 text-white py-2 px-4 ml-2 rounded transition duration-300\"\r\n              (click)=\"search()\">Rechercher\r\n      </button>\r\n    </div>\r\n    <div class=\"grid grid-cols-3 gap-4\">\r\n      <div *ngFor=\"let album of albums\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Album</p>\r\n          <a [routerLink]=\"['/album', album.id]\">\r\n            <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\r\n            <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let artist of artists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <h5 class=\"text-lg font-semibold text-green-500\">\r\n            <p class=\"text-gray-400\">Artiste</p>\r\n            <a routerLink=\"/artist-details/{{ artist.id }}\">{{ artist.name }}</a>\r\n          </h5>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngFor=\"let song of songs\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Chanson</p>\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ song.title }}</h5>\r\n          <div *ngFor=\"let artist of song.artists\">\r\n            <p class=\"text-gray-400\">{{ artist.name }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let playlist of playlists\">\r\n        <div class=\"bg-gray-800 p-4 rounded\">\r\n          <p class=\"text-gray-400\">Playlist</p>\r\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ playlist.name }}</h5>\r\n          <div *ngFor=\"let song of playlist.songs\">\r\n            <p class=\"text-gray-400\">{{ song.title }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {HttpClient} from '@angular/common/http';\r\nimport {Component} from '@angular/core';\r\nimport {Playlist, SpotifyService} from \"../services/spotify.service\";\r\nimport {Router} from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent {\r\n  searchText: string = '';\r\n  songs: any[] = [];\r\n  artists: any[] = [];\r\n  albums: any[] = [];\r\n  playlists: Playlist[] = [];\r\n  constructor(private spotifyService: SpotifyService, private http: HttpClient, private router: Router) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.spotifyService.getAlbums().subscribe((data: any) => {\r\n      this.albums = Object.values(data);\r\n    });\r\n  }\r\n\r\n  search() {\r\n    // Appel à la méthode de recherche de chansons\r\n    this.spotifyService.searchSongs(this.searchText).subscribe((response: any) => {\r\n      this.songs = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'artistes\r\n    this.spotifyService.searchArtists(this.searchText).subscribe((response: any) => {\r\n      this.artists = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche d'albums\r\n    this.spotifyService.searchAlbums(this.searchText).subscribe((response: any) => {\r\n      this.albums = response;\r\n    });\r\n\r\n    // Appel à la méthode de recherche de playlists\r\n    this.spotifyService.getAllPlaylists(this.searchText).subscribe((playlists: any[]) => {\r\n        this.playlists = playlists;\r\n      },\r\n      (error) => {\r\n        console.log('Error searching playlists');\r\n      }\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/7515790b5a15161823c106f232a84d94f48a44a4c73d3952dfaf9484af680b68.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/7515790b5a15161823c106f232a84d94f48a44a4c73d3952dfaf9484af680b68.json b/.angular/cache/15.2.5/babel-webpack/7515790b5a15161823c106f232a84d94f48a44a4c73d3952dfaf9484af680b68.json
new file mode 100644
--- /dev/null	(date 1681118719090)
+++ b/.angular/cache/15.2.5/babel-webpack/7515790b5a15161823c106f232a84d94f48a44a4c73d3952dfaf9484af680b68.json	(date 1681118719090)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      this.albums = albums.filter(album => album.artist.id === this.artistId);\n      console.log('Albums:', this.albums);\n    });\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,MAAM,CAACC,EAAE,KAAK,IAAI,CAACX,QAAQ,CAAC;MACvEY,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACN,MAAM,CAAC;IACrC,CAAC,CAAC;EACN;;AAbWZ,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlCxB,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","filter","album","artist","id","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId)\n      .subscribe(albums => {\n        this.albums = albums.filter(album => album.artist.id === this.artistId);\n        console.log('Albums:', this.albums);\n      });\n  }\n  /*ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let artistId = parseInt(<string>params.get('id'));\n      this.apiService.getArtistDetails(artistId).subscribe(\n        (response: any) => {\n          this.artist = response;\n          this.albums = response.albums;\n          console.log('Albums:', this.albums);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    });\n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/c1138d8415d26a03647403b75d59acbde77f8f5a69a784a57fda4958959d9275.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/c1138d8415d26a03647403b75d59acbde77f8f5a69a784a57fda4958959d9275.json b/.angular/cache/15.2.5/babel-webpack/c1138d8415d26a03647403b75d59acbde77f8f5a69a784a57fda4958959d9275.json
new file mode 100644
--- /dev/null	(date 1681066920603)
+++ b/.angular/cache/15.2.5/babel-webpack/c1138d8415d26a03647403b75d59acbde77f8f5a69a784a57fda4958959d9275.json	(date 1681066920603)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { catchError, forkJoin, from, map, Observable, switchMap, takeWhile } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(keyword: string): Observable<Playlist[]> {\r\n      const url = `${this.apiUrl}/playlists?q=${keyword}`;\r\n      return this.http.get<Playlist[]>(url);\r\n    }*/\n  getArtistById(artistId) {\n    return this.http.get(`${this.apiUrl}/artists/${artistId}`);\n  }\n  getArtistAlbums(artistId, page) {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    // @ts-ignore\n    return this.getArtistById(artistId).pipe(switchMap(artist => {\n      const albumRequests = artist.albums.map(albumUrl => this.http.get(this.apiUrl));\n      return forkJoin(albumRequests);\n    }));\n  }\n  getAllPlaylists(searchTerm) {\n    let id = 1;\n    const playlists = [];\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, {\n          params\n        }).pipe(map(response => {\n          if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n            playlists.push(response);\n          }\n          id++;\n          if (response.id) {\n            // continue the loop\n            getPlaylist();\n          } else {\n            observer.next(playlists);\n            observer.complete();\n          }\n        }), catchError(error => {\n          // stop the loop and return the playlists that have been fetched so far\n          observer.next(playlists);\n          observer.complete();\n          return [];\n        }), takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n      getPlaylist();\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","catchError","forkJoin","from","map","Observable","switchMap","takeWhile","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","getArtistById","artistId","getArtistAlbums","page","params","set","toString","artist","albumRequests","albums","albumUrl","getAllPlaylists","searchTerm","playlists","observer","getPlaylist","append","name","toLowerCase","includes","push","next","complete","error","subscribe","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {catchError, forkJoin, from, map, Observable, switchMap, takeWhile} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchAlbums(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n/*  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }*/\n\n  getArtistById(artistId: number): Observable<Artist> {\n    return this.http.get<Artist>(`${this.apiUrl}/artists/${artistId}`);\n  }\n\n  getArtistAlbums(artistId: number, page?: number): Observable<Album[]> {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    // @ts-ignore\n    return this.getArtistById(artistId).pipe(\n      switchMap(artist => {\n        const albumRequests = artist.albums.map(albumUrl => this.http.get<Album>(this.apiUrl));\n        return forkJoin(albumRequests);\n      })\n    );\n  }\n\n\n  getAllPlaylists(searchTerm?: string): Observable<any> {\n    let id = 1;\n    const playlists: any[] = [];\n\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, { params }).pipe(\n          map((response: any) => {\n            if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n              playlists.push(response);\n            }\n            id++;\n            if (response.id) {\n              // continue the loop\n              getPlaylist();\n            } else {\n              observer.next(playlists);\n              observer.complete();\n            }\n          }),\n          catchError(error => {\n            // stop the loop and return the playlists that have been fetched so far\n            observer.next(playlists);\n            observer.complete();\n            return [];\n          }),\n          takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n\n      getPlaylist();\n    });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n  artist: Artist;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n\nexport interface Artist {\n  id: number;\n  name: string;\n  songs: Song[];\n  albums: Album[];\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/ffa59e305ff5787caebe7fe5663953c6671d4e7963a7cfd075a48130eb446d93.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/ffa59e305ff5787caebe7fe5663953c6671d4e7963a7cfd075a48130eb446d93.json b/.angular/cache/15.2.5/babel-webpack/ffa59e305ff5787caebe7fe5663953c6671d4e7963a7cfd075a48130eb446d93.json
new file mode 100644
--- /dev/null	(date 1681066648531)
+++ b/.angular/cache/15.2.5/babel-webpack/ffa59e305ff5787caebe7fe5663953c6671d4e7963a7cfd075a48130eb446d93.json	(date 1681066648531)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      this.albums = albums.filter(album => {\n        return album.artist.id.toString() === this.artistId.toString();\n      });\n      console.log('Albums:', this.albums);\n    });\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,KAAK,IAAG;QAClC,OAAOA,KAAK,CAACC,MAAM,CAACC,EAAE,CAACC,QAAQ,EAAE,KAAK,IAAI,CAACZ,QAAQ,CAACY,QAAQ,EAAE;MAChE,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACP,MAAM,CAAC;IACrC,CAAC,CAAC;EACN;;AAfWZ,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlCzB,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","filter","album","artist","id","toString","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId)\n      .subscribe(albums => {\n        this.albums = albums.filter(album => {\n          return album.artist.id.toString() === this.artistId.toString();\n        });\n        console.log('Albums:', this.albums);\n      });\n  }\n\n  /*ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let artistId = parseInt(<string>params.get('id'));\n      this.apiService.getArtistDetails(artistId).subscribe(\n        (response: any) => {\n          this.artist = response;\n          this.albums = response.albums;\n          console.log('Albums:', this.albums);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    });\n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/43a305efca742f63a934cc4b085dfa4e41205df289bd94daaabb48bb8f007957.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/43a305efca742f63a934cc4b085dfa4e41205df289bd94daaabb48bb8f007957.json b/.angular/cache/15.2.5/babel-webpack/43a305efca742f63a934cc4b085dfa4e41205df289bd94daaabb48bb8f007957.json
new file mode 100644
--- /dev/null	(date 1681066567218)
+++ b/.angular/cache/15.2.5/babel-webpack/43a305efca742f63a934cc4b085dfa4e41205df289bd94daaabb48bb8f007957.json	(date 1681066567218)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      this.albums = albums.filter(album => {\n        return album.artist.some(artist => artist.id === this.artistId);\n      });\n      console.log('Albums:', this.albums);\n    });\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,KAAK,IAAG;QAClC,OAAOA,KAAK,CAACC,MAAM,CAACC,IAAI,CAACD,MAAM,IAAIA,MAAM,CAACE,EAAE,KAAK,IAAI,CAACZ,QAAQ,CAAC;MACjE,CAAC,CAAC;MACFa,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACP,MAAM,CAAC;IACrC,CAAC,CAAC;EACN;;AAfWZ,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlCzB,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","filter","album","artist","some","id","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId)\n      .subscribe(albums => {\n        this.albums = albums.filter(album => {\n          return album.artist.some(artist => artist.id === this.artistId);\n        });\n        console.log('Albums:', this.albums);\n      });\n  }\n\n  /*ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let artistId = parseInt(<string>params.get('id'));\n      this.apiService.getArtistDetails(artistId).subscribe(\n        (response: any) => {\n          this.artist = response;\n          this.albums = response.albums;\n          console.log('Albums:', this.albums);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    });\n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/7fcc387d1761ce3edf9d8af53293b34f393c105b34ce308cf3229cc06313c1f7.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/7fcc387d1761ce3edf9d8af53293b34f393c105b34ce308cf3229cc06313c1f7.json b/.angular/cache/15.2.5/babel-webpack/7fcc387d1761ce3edf9d8af53293b34f393c105b34ce308cf3229cc06313c1f7.json
new file mode 100644
--- /dev/null	(date 1681066526519)
+++ b/.angular/cache/15.2.5/babel-webpack/7fcc387d1761ce3edf9d8af53293b34f393c105b34ce308cf3229cc06313c1f7.json	(date 1681066526519)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      this.albums = albums.filter(album => {\n        return album.artists.some(artist => artist.id === this.artistId);\n      });\n      console.log('Albums:', this.albums + ' ' + this.artistId);\n    });\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,KAAK,IAAG;QAClC,OAAOA,KAAK,CAACC,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,EAAE,KAAK,IAAI,CAACb,QAAQ,CAAC;MAClE,CAAC,CAAC;MACFc,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACR,MAAM,GAAG,GAAG,GAAG,IAAI,CAACP,QAAQ,CAAC;IAC3D,CAAC,CAAC;EACN;;AAfWL,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlC1B,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","filter","album","artists","some","artist","id","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId)\n      .subscribe(albums => {\n        this.albums = albums.filter(album => {\n          return album.artists.some(artist => artist.id === this.artistId);\n        });\n        console.log('Albums:', this.albums + ' ' + this.artistId);\n      });\n  }\n\n\n  /*ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let artistId = parseInt(<string>params.get('id'));\n      this.apiService.getArtistDetails(artistId).subscribe(\n        (response: any) => {\n          this.artist = response;\n          this.albums = response.albums;\n          console.log('Albums:', this.albums);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    });\n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/27f49b3a9b3c94ba4427aa21ffb17da7cd34fd843dbf4cf467a1975a38933025.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/27f49b3a9b3c94ba4427aa21ffb17da7cd34fd843dbf4cf467a1975a38933025.json b/.angular/cache/15.2.5/babel-webpack/27f49b3a9b3c94ba4427aa21ffb17da7cd34fd843dbf4cf467a1975a38933025.json
new file mode 100644
--- /dev/null	(date 1681117230409)
+++ b/.angular/cache/15.2.5/babel-webpack/27f49b3a9b3c94ba4427aa21ffb17da7cd34fd843dbf4cf467a1975a38933025.json	(date 1681117230409)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      this.albums = albums.filter(album => album.artist.id === this.artistId);\n      console.log('Albums:', this.albums);\n    });\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,MAAM,CAACC,EAAE,KAAK,IAAI,CAACX,QAAQ,CAAC;MACvEY,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACN,MAAM,CAAC;IACrC,CAAC,CAAC;EACN;;AAbWZ,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlCxB,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","filter","album","artist","id","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId)\n      .subscribe(albums => {\n        this.albums = albums.filter(album => album.artist.id === this.artistId);\n        console.log('Albums:', this.albums);\n      });\n  }\n\n\n\n\n\n\n  /*ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let artistId = parseInt(<string>params.get('id'));\n      this.apiService.getArtistDetails(artistId).subscribe(\n        (response: any) => {\n          this.artist = response;\n          this.albums = response.albums;\n          console.log('Albums:', this.albums);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    });\n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/f6947c88f569decda0378d7e5f90015cef507b5147d78ea719172bebf4b2c683.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/f6947c88f569decda0378d7e5f90015cef507b5147d78ea719172bebf4b2c683.json b/.angular/cache/15.2.5/babel-webpack/f6947c88f569decda0378d7e5f90015cef507b5147d78ea719172bebf4b2c683.json
new file mode 100644
--- /dev/null	(date 1681117121545)
+++ b/.angular/cache/15.2.5/babel-webpack/f6947c88f569decda0378d7e5f90015cef507b5147d78ea719172bebf4b2c683.json	(date 1681117121545)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      this.albums = albums.filter(album => {\n        // @ts-ignore\n        return album.artist.id === this.artistId || album.artist.id === this.getArtistIdFromAlbumUrl(album.id);\n      });\n      console.log('Albums:', this.albums);\n    });\n  }\n  getArtistIdFromAlbumUrl(url) {\n    const match = url.match(/\\/artists\\/(\\d+)/);\n    if (match) {\n      const artistId = parseInt(match[1], 10);\n      return artistId ?? 0;\n    }\n    return 0;\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,KAAK,IAAG;QAClC;QACA,OAAOA,KAAK,CAACC,MAAM,CAACC,EAAE,KAAK,IAAI,CAACX,QAAQ,IAAIS,KAAK,CAACC,MAAM,CAACC,EAAE,KAAK,IAAI,CAACC,uBAAuB,CAACH,KAAK,CAACE,EAAE,CAAC;MACxG,CAAC,CAAC;MACFE,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACP,MAAM,CAAC;IACrC,CAAC,CAAC;EACN;EAEAK,uBAAuB,CAACG,GAAW;IACjC,MAAMC,KAAK,GAAGD,GAAG,CAACC,KAAK,CAAC,kBAAkB,CAAC;IAC3C,IAAIA,KAAK,EAAE;MACT,MAAMhB,QAAQ,GAAGiB,QAAQ,CAACD,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;MACvC,OAAOhB,QAAQ,IAAI,CAAC;;IAEtB,OAAO,CAAC;EACV;;AAzBWL,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlC5B,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","filter","album","artist","id","getArtistIdFromAlbumUrl","console","log","url","match","parseInt","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId)\n      .subscribe(albums => {\n        this.albums = albums.filter(album => {\n          // @ts-ignore\n          return album.artist.id === this.artistId || album.artist.id === this.getArtistIdFromAlbumUrl(album.id);\n        });\n        console.log('Albums:', this.albums);\n      });\n  }\n\n  getArtistIdFromAlbumUrl(url: string): number {\n    const match = url.match(/\\/artists\\/(\\d+)/);\n    if (match) {\n      const artistId = parseInt(match[1], 10);\n      return artistId ?? 0;\n    }\n    return 0;\n  }\n\n\n\n\n\n\n\n  /*ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let artistId = parseInt(<string>params.get('id'));\n      this.apiService.getArtistDetails(artistId).subscribe(\n        (response: any) => {\n          this.artist = response;\n          this.albums = response.albums;\n          console.log('Albums:', this.albums);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    });\n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/9c744b011827b247d85d297eacbf6aaae0599bc9bea5fdddbbadfb3bfd798e07.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/9c744b011827b247d85d297eacbf6aaae0599bc9bea5fdddbbadfb3bfd798e07.json b/.angular/cache/15.2.5/babel-webpack/9c744b011827b247d85d297eacbf6aaae0599bc9bea5fdddbbadfb3bfd798e07.json
new file mode 100644
--- /dev/null	(date 1681066522223)
+++ b/.angular/cache/15.2.5/babel-webpack/9c744b011827b247d85d297eacbf6aaae0599bc9bea5fdddbbadfb3bfd798e07.json	(date 1681066522223)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      this.albums = albums.filter(album => {\n        return album.artist.some(artist => artist.id === this.artistId);\n      });\n      console.log('Albums:', this.albums + ' ' + this.artistId);\n    });\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,KAAK,IAAG;QAClC,OAAOA,KAAK,CAACC,MAAM,CAACC,IAAI,CAACD,MAAM,IAAIA,MAAM,CAACE,EAAE,KAAK,IAAI,CAACZ,QAAQ,CAAC;MACjE,CAAC,CAAC;MACFa,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACP,MAAM,GAAG,GAAG,GAAG,IAAI,CAACP,QAAQ,CAAC;IAC3D,CAAC,CAAC;EACN;;AAfWL,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlCzB,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","filter","album","artist","some","id","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId)\n      .subscribe(albums => {\n        this.albums = albums.filter(album => {\n          return album.artist.some(artist => artist.id === this.artistId);\n        });\n        console.log('Albums:', this.albums + ' ' + this.artistId);\n      });\n  }\n\n\n  /*ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let artistId = parseInt(<string>params.get('id'));\n      this.apiService.getArtistDetails(artistId).subscribe(\n        (response: any) => {\n          this.artist = response;\n          this.albums = response.albums;\n          console.log('Albums:', this.albums);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    });\n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/0267e638e584495413b5d989991253b71e877869ffcdde803c1698e3b47eb0e2.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/0267e638e584495413b5d989991253b71e877869ffcdde803c1698e3b47eb0e2.json b/.angular/cache/15.2.5/babel-webpack/0267e638e584495413b5d989991253b71e877869ffcdde803c1698e3b47eb0e2.json
new file mode 100644
--- /dev/null	(date 1681117096520)
+++ b/.angular/cache/15.2.5/babel-webpack/0267e638e584495413b5d989991253b71e877869ffcdde803c1698e3b47eb0e2.json	(date 1681117096520)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      this.albums = albums.filter(album => {\n        return album.artist.id === this.artistId || album.artist.id === this.getArtistIdFromAlbumUrl(album.id.toString());\n      });\n      console.log('Albums:', this.albums);\n    });\n  }\n  getArtistIdFromAlbumUrl(url) {\n    const match = url.match(/\\/artists\\/(\\d+)/);\n    if (match) {\n      const artistId = parseInt(match[1], 10);\n      return artistId ?? 0;\n    }\n    return 0;\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,KAAK,IAAG;QAClC,OAAOA,KAAK,CAACC,MAAM,CAACC,EAAE,KAAK,IAAI,CAACX,QAAQ,IAAIS,KAAK,CAACC,MAAM,CAACC,EAAE,KAAK,IAAI,CAACC,uBAAuB,CAACH,KAAK,CAACE,EAAE,CAACE,QAAQ,EAAE,CAAC;MACnH,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACR,MAAM,CAAC;IACrC,CAAC,CAAC;EACN;EAEAK,uBAAuB,CAACI,GAAW;IACjC,MAAMC,KAAK,GAAGD,GAAG,CAACC,KAAK,CAAC,kBAAkB,CAAC;IAC3C,IAAIA,KAAK,EAAE;MACT,MAAMjB,QAAQ,GAAGkB,QAAQ,CAACD,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;MACvC,OAAOjB,QAAQ,IAAI,CAAC;;IAEtB,OAAO,CAAC;EACV;;AAxBWL,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlC7B,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","filter","album","artist","id","getArtistIdFromAlbumUrl","toString","console","log","url","match","parseInt","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId)\n      .subscribe(albums => {\n        this.albums = albums.filter(album => {\n          return album.artist.id === this.artistId || album.artist.id === this.getArtistIdFromAlbumUrl(album.id.toString());\n        });\n        console.log('Albums:', this.albums);\n      });\n  }\n\n  getArtistIdFromAlbumUrl(url: string): number {\n    const match = url.match(/\\/artists\\/(\\d+)/);\n    if (match) {\n      const artistId = parseInt(match[1], 10);\n      return artistId ?? 0;\n    }\n    return 0;\n  }\n\n\n\n\n\n\n\n  /*ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let artistId = parseInt(<string>params.get('id'));\n      this.apiService.getArtistDetails(artistId).subscribe(\n        (response: any) => {\n          this.artist = response;\n          this.albums = response.albums;\n          console.log('Albums:', this.albums);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    });\n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/973789343394af093109366afa364b4a7c0617cc4c4b58db5cf9c3231f9722be.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/973789343394af093109366afa364b4a7c0617cc4c4b58db5cf9c3231f9722be.json b/.angular/cache/15.2.5/babel-webpack/973789343394af093109366afa364b4a7c0617cc4c4b58db5cf9c3231f9722be.json
new file mode 100644
--- /dev/null	(date 1681117013304)
+++ b/.angular/cache/15.2.5/babel-webpack/973789343394af093109366afa364b4a7c0617cc4c4b58db5cf9c3231f9722be.json	(date 1681117013304)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      this.albums = albums.filter(album => {\n        return album.artist.id === this.artistId || album.artist.id === this.getArtistIdFromAlbumUrl(album.url);\n      });\n      console.log('Albums:', this.albums);\n    });\n  }\n  getArtistIdFromAlbumUrl(url) {\n    const regex = /\\/artists\\/(\\d+)/;\n    const match = url.match(regex);\n    return match ? parseInt(match[1], 10) : null;\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,KAAK,IAAG;QAClC,OAAOA,KAAK,CAACC,MAAM,CAACC,EAAE,KAAK,IAAI,CAACX,QAAQ,IAAIS,KAAK,CAACC,MAAM,CAACC,EAAE,KAAK,IAAI,CAACC,uBAAuB,CAACH,KAAK,CAACI,GAAG,CAAC;MACzG,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACR,MAAM,CAAC;IACrC,CAAC,CAAC;EACN;EAEAK,uBAAuB,CAACC,GAAW;IACjC,MAAMG,KAAK,GAAG,kBAAkB;IAChC,MAAMC,KAAK,GAAGJ,GAAG,CAACI,KAAK,CAACD,KAAK,CAAC;IAC9B,OAAOC,KAAK,GAAGC,QAAQ,CAACD,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI;EAC9C;;AArBWtB,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlC7B,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","filter","album","artist","id","getArtistIdFromAlbumUrl","url","console","log","regex","match","parseInt","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId)\n      .subscribe(albums => {\n        this.albums = albums.filter(album => {\n          return album.artist.id === this.artistId || album.artist.id === this.getArtistIdFromAlbumUrl(album.url);\n        });\n        console.log('Albums:', this.albums);\n      });\n  }\n\n  getArtistIdFromAlbumUrl(url: string): number {\n    const regex = /\\/artists\\/(\\d+)/;\n    const match = url.match(regex);\n    return match ? parseInt(match[1], 10) : null;\n  }\n\n\n\n\n\n\n  /*ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let artistId = parseInt(<string>params.get('id'));\n      this.apiService.getArtistDetails(artistId).subscribe(\n        (response: any) => {\n          this.artist = response;\n          this.albums = response.albums;\n          console.log('Albums:', this.albums);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    });\n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/5e8f80fbf94f9e6c3d075feb8751ff2039cbb7a64a87f91cafba24056016bc4d.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/5e8f80fbf94f9e6c3d075feb8751ff2039cbb7a64a87f91cafba24056016bc4d.json b/.angular/cache/15.2.5/babel-webpack/5e8f80fbf94f9e6c3d075feb8751ff2039cbb7a64a87f91cafba24056016bc4d.json
new file mode 100644
--- /dev/null	(date 1681116960917)
+++ b/.angular/cache/15.2.5/babel-webpack/5e8f80fbf94f9e6c3d075feb8751ff2039cbb7a64a87f91cafba24056016bc4d.json	(date 1681116960917)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      this.albums = albums.filter(album => {\n        return album.artist.id === this.artistId || album.artist.id === this.getArtistIdFromAlbumUrl(album.url);\n      });\n      console.log('Albums:', this.albums);\n    });\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,KAAK,IAAG;QAClC,OAAOA,KAAK,CAACC,MAAM,CAACC,EAAE,KAAK,IAAI,CAACX,QAAQ,IAAIS,KAAK,CAACC,MAAM,CAACC,EAAE,KAAK,IAAI,CAACC,uBAAuB,CAACH,KAAK,CAACI,GAAG,CAAC;MACzG,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACR,MAAM,CAAC;IACrC,CAAC,CAAC;EACN;;AAfWZ,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlC1B,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","filter","album","artist","id","getArtistIdFromAlbumUrl","url","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId)\n      .subscribe(albums => {\n        this.albums = albums.filter(album => {\n          return album.artist.id === this.artistId || album.artist.id === this.getArtistIdFromAlbumUrl(album.url);\n        });\n        console.log('Albums:', this.albums);\n      });\n  }\n\n\n\n\n\n  /*ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let artistId = parseInt(<string>params.get('id'));\n      this.apiService.getArtistDetails(artistId).subscribe(\n        (response: any) => {\n          this.artist = response;\n          this.albums = response.albums;\n          console.log('Albums:', this.albums);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    });\n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/950d387f5b6bb4011f4775b9bf8b50d2f49ff94946e1394b6fd3d7f0a22a452b.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/950d387f5b6bb4011f4775b9bf8b50d2f49ff94946e1394b6fd3d7f0a22a452b.json b/.angular/cache/15.2.5/babel-webpack/950d387f5b6bb4011f4775b9bf8b50d2f49ff94946e1394b6fd3d7f0a22a452b.json
new file mode 100644
--- /dev/null	(date 1681116778513)
+++ b/.angular/cache/15.2.5/babel-webpack/950d387f5b6bb4011f4775b9bf8b50d2f49ff94946e1394b6fd3d7f0a22a452b.json	(date 1681116778513)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      this.albums = albums.filter(album => {\n        return album.artist && album.artist.length && album.artist[0].id === this.artistId;\n      });\n      console.log('Albums:', this.albums);\n    });\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,KAAK,IAAG;QAClC,OAAOA,KAAK,CAACC,MAAM,IAAID,KAAK,CAACC,MAAM,CAACC,MAAM,IAAIF,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACE,EAAE,KAAK,IAAI,CAACZ,QAAQ;MACpF,CAAC,CAAC;MACFa,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACP,MAAM,CAAC;IACrC,CAAC,CAAC;EACN;;AAfWZ,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlCzB,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","filter","album","artist","length","id","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId)\n      .subscribe(albums => {\n        this.albums = albums.filter(album => {\n          return album.artist && album.artist.length && album.artist[0].id === this.artistId;\n        });\n        console.log('Albums:', this.albums);\n      });\n  }\n\n\n\n\n\n  /*ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let artistId = parseInt(<string>params.get('id'));\n      this.apiService.getArtistDetails(artistId).subscribe(\n        (response: any) => {\n          this.artist = response;\n          this.albums = response.albums;\n          console.log('Albums:', this.albums);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    });\n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/8f35428edb6b831dbdf2638b3a019f4a6460cee4657bd707e1329584551b8e39.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/8f35428edb6b831dbdf2638b3a019f4a6460cee4657bd707e1329584551b8e39.json b/.angular/cache/15.2.5/babel-webpack/8f35428edb6b831dbdf2638b3a019f4a6460cee4657bd707e1329584551b8e39.json
new file mode 100644
--- /dev/null	(date 1681066062530)
+++ b/.angular/cache/15.2.5/babel-webpack/8f35428edb6b831dbdf2638b3a019f4a6460cee4657bd707e1329584551b8e39.json	(date 1681066062530)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      this.albums = albums.filter(album => {\n        return album.artist.id === this.artistId;\n      });\n      console.log('Albums:', this.albums);\n    });\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,KAAK,IAAG;QAClC,OAAOA,KAAK,CAACC,MAAM,CAACC,EAAE,KAAK,IAAI,CAACX,QAAQ;MAC1C,CAAC,CAAC;MACFY,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACN,MAAM,CAAC;IACrC,CAAC,CAAC;EACN;;AAfWZ,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlCxB,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","filter","album","artist","id","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId)\n      .subscribe(albums => {\n        this.albums = albums.filter(album => {\n          return album.artist.id === this.artistId;\n        });\n        console.log('Albums:', this.albums);\n      });\n  }\n\n  /*ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let artistId = parseInt(<string>params.get('id'));\n      this.apiService.getArtistDetails(artistId).subscribe(\n        (response: any) => {\n          this.artist = response;\n          this.albums = response.albums;\n          console.log('Albums:', this.albums);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    });\n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/9c2ffb50a66fab45e4012b00b687d0115edcab4732960bab1dc146af02a4bc7e.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/9c2ffb50a66fab45e4012b00b687d0115edcab4732960bab1dc146af02a4bc7e.json b/.angular/cache/15.2.5/babel-webpack/9c2ffb50a66fab45e4012b00b687d0115edcab4732960bab1dc146af02a4bc7e.json
new file mode 100644
--- /dev/null	(date 1681116742226)
+++ b/.angular/cache/15.2.5/babel-webpack/9c2ffb50a66fab45e4012b00b687d0115edcab4732960bab1dc146af02a4bc7e.json	(date 1681116742226)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      this.albums = albums.filter(album => {\n        return album.artist[0].id === this.artistId;\n      });\n      console.log('Albums:', this.albums);\n    });\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,KAAK,IAAG;QAClC,OAAOA,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,EAAE,KAAK,IAAI,CAACX,QAAQ;MAC7C,CAAC,CAAC;MACFY,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACN,MAAM,CAAC;IACrC,CAAC,CAAC;EACN;;AAfWZ,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlCxB,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","filter","album","artist","id","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId)\n      .subscribe(albums => {\n        this.albums = albums.filter(album => {\n          return album.artist[0].id === this.artistId;\n        });\n        console.log('Albums:', this.albums);\n      });\n  }\n\n\n\n\n  /*ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let artistId = parseInt(<string>params.get('id'));\n      this.apiService.getArtistDetails(artistId).subscribe(\n        (response: any) => {\n          this.artist = response;\n          this.albums = response.albums;\n          console.log('Albums:', this.albums);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    });\n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/4c25a15babc54addec381beb79256f650f10ea88a5cb78b48afc93e815115e96.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/4c25a15babc54addec381beb79256f650f10ea88a5cb78b48afc93e815115e96.json b/.angular/cache/15.2.5/babel-webpack/4c25a15babc54addec381beb79256f650f10ea88a5cb78b48afc93e815115e96.json
new file mode 100644
--- /dev/null	(date 1681116712924)
+++ b/.angular/cache/15.2.5/babel-webpack/4c25a15babc54addec381beb79256f650f10ea88a5cb78b48afc93e815115e96.json	(date 1681116712924)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { catchError, from, map, Observable, takeWhile } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(keyword: string): Observable<Playlist[]> {\r\n      const url = `${this.apiUrl}/playlists?q=${keyword}`;\r\n      return this.http.get<Playlist[]>(url);\r\n    }*/\n  getArtistAlbums(artistId, page) {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get(`${this.apiUrl}/albums`, {\n      params\n    });\n  }\n  getAllPlaylists(searchTerm) {\n    let id = 1;\n    const playlists = [];\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, {\n          params\n        }).pipe(map(response => {\n          if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n            playlists.push(response);\n          }\n          id++;\n          if (response.id) {\n            // continue the loop\n            getPlaylist();\n          } else {\n            observer.next(playlists);\n            observer.complete();\n          }\n        }), catchError(error => {\n          // stop the loop and return the playlists that have been fetched so far\n          observer.next(playlists);\n          observer.complete();\n          return [];\n        }), takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n      getPlaylist();\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","catchError","from","map","Observable","takeWhile","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","getArtistAlbums","artistId","page","params","set","toString","getAllPlaylists","searchTerm","playlists","observer","getPlaylist","append","name","toLowerCase","includes","push","next","complete","error","subscribe","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {catchError, from, map, Observable, takeWhile} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchAlbums(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n/*  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }*/\n\n  getArtistAlbums(artistId: number, page?: number): Observable<Album[]> {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get<Album[]>(`${this.apiUrl}/albums`, { params });\n  }\n\n  getAllPlaylists(searchTerm?: string): Observable<any> {\n    let id = 1;\n    const playlists: any[] = [];\n\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, { params }).pipe(\n          map((response: any) => {\n            if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n              playlists.push(response);\n            }\n            id++;\n            if (response.id) {\n              // continue the loop\n              getPlaylist();\n            } else {\n              observer.next(playlists);\n              observer.complete();\n            }\n          }),\n          catchError(error => {\n            // stop the loop and return the playlists that have been fetched so far\n            observer.next(playlists);\n            observer.complete();\n            return [];\n          }),\n          takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n\n      getPlaylist();\n    });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n  artist: Artist[];\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n\nexport interface Artist {\n  id: number;\n  name: string;\n  songs: Song[];\n  albums: Album[];\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/9cc7e0516f8fd0915c67b0a4f1316c86b02727a4f88fbc77031dbcd82ae60d92.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/9cc7e0516f8fd0915c67b0a4f1316c86b02727a4f88fbc77031dbcd82ae60d92.json b/.angular/cache/15.2.5/babel-webpack/9cc7e0516f8fd0915c67b0a4f1316c86b02727a4f88fbc77031dbcd82ae60d92.json
new file mode 100644
--- /dev/null	(date 1681116653780)
+++ b/.angular/cache/15.2.5/babel-webpack/9cc7e0516f8fd0915c67b0a4f1316c86b02727a4f88fbc77031dbcd82ae60d92.json	(date 1681116653780)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      this.albums = albums.filter(album => {\n        return album.artist.id === this.artistId;\n      });\n      console.log('Albums:', this.albums);\n    });\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,KAAK,IAAG;QAClC,OAAOA,KAAK,CAACC,MAAM,CAACC,EAAE,KAAK,IAAI,CAACX,QAAQ;MAC1C,CAAC,CAAC;MACFY,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACN,MAAM,CAAC;IACrC,CAAC,CAAC;EACN;;AAfWZ,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlCxB,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","filter","album","artist","id","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId)\n      .subscribe(albums => {\n        this.albums = albums.filter(album => {\n          return album.artist.id === this.artistId;\n        });\n        console.log('Albums:', this.albums);\n      });\n  }\n\n\n\n  /*ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let artistId = parseInt(<string>params.get('id'));\n      this.apiService.getArtistDetails(artistId).subscribe(\n        (response: any) => {\n          this.artist = response;\n          this.albums = response.albums;\n          console.log('Albums:', this.albums);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    });\n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/d5c0eb996e80b62256bed3b2e28e2620d014ca2a712a608e888d2d1422543176.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/d5c0eb996e80b62256bed3b2e28e2620d014ca2a712a608e888d2d1422543176.json b/.angular/cache/15.2.5/babel-webpack/d5c0eb996e80b62256bed3b2e28e2620d014ca2a712a608e888d2d1422543176.json
new file mode 100644
--- /dev/null	(date 1681116514702)
+++ b/.angular/cache/15.2.5/babel-webpack/d5c0eb996e80b62256bed3b2e28e2620d014ca2a712a608e888d2d1422543176.json	(date 1681116514702)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      this.albums = albums.filter(album => {\n        return album.artist.id === this.artistId;\n      });\n      console.log('Albums:', this.albums);\n      // Vérifier si l'id de l'artiste dans l'album est identique à celui dans l'URL\n      const albumArtistId = this.albums[0].artist.id;\n      if (albumArtistId !== this.artistId) {\n        console.error(`L'id de l'artiste dans l'album (${albumArtistId}) est différent de l'id dans l'URL (${this.artistId})`);\n      }\n    });\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,KAAK,IAAG;QAClC,OAAOA,KAAK,CAACC,MAAM,CAACC,EAAE,KAAK,IAAI,CAACX,QAAQ;MAC1C,CAAC,CAAC;MACFY,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACN,MAAM,CAAC;MAEnC;MACA,MAAMO,aAAa,GAAG,IAAI,CAACP,MAAM,CAAC,CAAC,CAAC,CAACG,MAAM,CAACC,EAAE;MAC9C,IAAIG,aAAa,KAAK,IAAI,CAACd,QAAQ,EAAE;QACnCY,OAAO,CAACG,KAAK,CAAC,mCAAmCD,aAAa,uCAAuC,IAAI,CAACd,QAAQ,GAAG,CAAC;;IAE1H,CAAC,CAAC;EACN;;AArBWL,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlC1B,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","filter","album","artist","id","console","log","albumArtistId","error","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId)\n      .subscribe(albums => {\n        this.albums = albums.filter(album => {\n          return album.artist.id === this.artistId;\n        });\n        console.log('Albums:', this.albums);\n\n        // Vérifier si l'id de l'artiste dans l'album est identique à celui dans l'URL\n        const albumArtistId = this.albums[0].artist.id;\n        if (albumArtistId !== this.artistId) {\n          console.error(`L'id de l'artiste dans l'album (${albumArtistId}) est différent de l'id dans l'URL (${this.artistId})`);\n        }\n      });\n  }\n\n\n  /*ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let artistId = parseInt(<string>params.get('id'));\n      this.apiService.getArtistDetails(artistId).subscribe(\n        (response: any) => {\n          this.artist = response;\n          this.albums = response.albums;\n          console.log('Albums:', this.albums);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    });\n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/7744686951e55e88892809f41b336783937f9b16fbeb219fff9ef8fa32fc1dd6.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/7744686951e55e88892809f41b336783937f9b16fbeb219fff9ef8fa32fc1dd6.json b/.angular/cache/15.2.5/babel-webpack/7744686951e55e88892809f41b336783937f9b16fbeb219fff9ef8fa32fc1dd6.json
new file mode 100644
--- /dev/null	(date 1681115415908)
+++ b/.angular/cache/15.2.5/babel-webpack/7744686951e55e88892809f41b336783937f9b16fbeb219fff9ef8fa32fc1dd6.json	(date 1681115415908)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      this.albums = albums.filter(album => {\n        return album.id.toString().includes(this.artistId.toString());\n      });\n      console.log('Albums:', this.albums);\n    });\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,KAAK,IAAG;QAClC,OAAOA,KAAK,CAACC,EAAE,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACZ,QAAQ,CAACW,QAAQ,EAAE,CAAC;MAC/D,CAAC,CAAC;MACFE,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACP,MAAM,CAAC;IACrC,CAAC,CAAC;EACN;;AAfWZ,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlCzB,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","filter","album","id","toString","includes","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId)\n      .subscribe(albums => {\n        this.albums = albums.filter(album => {\n          return album.id.toString().includes(this.artistId.toString());\n        });\n        console.log('Albums:', this.albums);\n      });\n  }\n\n  /*ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let artistId = parseInt(<string>params.get('id'));\n      this.apiService.getArtistDetails(artistId).subscribe(\n        (response: any) => {\n          this.artist = response;\n          this.albums = response.albums;\n          console.log('Albums:', this.albums);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    });\n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/ffc582ea83d68b5e28ea255aa65659ffd6d9ba9aef2601a78ecf8d52973d8317.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/ffc582ea83d68b5e28ea255aa65659ffd6d9ba9aef2601a78ecf8d52973d8317.json b/.angular/cache/15.2.5/babel-webpack/ffc582ea83d68b5e28ea255aa65659ffd6d9ba9aef2601a78ecf8d52973d8317.json
new file mode 100644
--- /dev/null	(date 1681116275076)
+++ b/.angular/cache/15.2.5/babel-webpack/ffc582ea83d68b5e28ea255aa65659ffd6d9ba9aef2601a78ecf8d52973d8317.json	(date 1681116275076)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      this.albums = albums.filter(album => {\n        return album.id.toString().includes('/api/artists/' + this.artistId);\n      });\n      console.log('Albums:', this.albums);\n    });\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,KAAK,IAAG;QAClC,OAAOA,KAAK,CAACC,EAAE,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,eAAe,GAAG,IAAI,CAACZ,QAAQ,CAAC;MACtE,CAAC,CAAC;MACFa,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACP,MAAM,CAAC;IACrC,CAAC,CAAC;EACN;;AAfWZ,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlCzB,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","filter","album","id","toString","includes","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId)\n      .subscribe(albums => {\n        this.albums = albums.filter(album => {\n          return album.id.toString().includes('/api/artists/' + this.artistId);\n        });\n        console.log('Albums:', this.albums);\n      });\n  }\n\n  /*ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let artistId = parseInt(<string>params.get('id'));\n      this.apiService.getArtistDetails(artistId).subscribe(\n        (response: any) => {\n          this.artist = response;\n          this.albums = response.albums;\n          console.log('Albums:', this.albums);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    });\n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/8742a23e49e93ae54dec14dd61f4ea88e892962352de1926ab2d345f286c71c6.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/8742a23e49e93ae54dec14dd61f4ea88e892962352de1926ab2d345f286c71c6.json b/.angular/cache/15.2.5/babel-webpack/8742a23e49e93ae54dec14dd61f4ea88e892962352de1926ab2d345f286c71c6.json
new file mode 100644
--- /dev/null	(date 1681116189228)
+++ b/.angular/cache/15.2.5/babel-webpack/8742a23e49e93ae54dec14dd61f4ea88e892962352de1926ab2d345f286c71c6.json	(date 1681116189228)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      this.albums = albums.filter(album => {\n        return album.artist.id === this.artistId;\n      });\n    });\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,KAAK,IAAG;QAClC,OAAOA,KAAK,CAACC,MAAM,CAACC,EAAE,KAAK,IAAI,CAACX,QAAQ;MAC1C,CAAC,CAAC;IACJ,CAAC,CAAC;EACN;;AAdWL,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlCtB,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","filter","album","artist","id","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId)\n      .subscribe(albums => {\n        this.albums = albums.filter(album => {\n          return album.artist.id === this.artistId;\n        });\n      });\n  }\n\n  /*ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let artistId = parseInt(<string>params.get('id'));\n      this.apiService.getArtistDetails(artistId).subscribe(\n        (response: any) => {\n          this.artist = response;\n          this.albums = response.albums;\n          console.log('Albums:', this.albums);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    });\n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/2e873c3e76069a52af9906e5ea48f5ba79991af11683e831f4f68edf3f023593.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/2e873c3e76069a52af9906e5ea48f5ba79991af11683e831f4f68edf3f023593.json b/.angular/cache/15.2.5/babel-webpack/2e873c3e76069a52af9906e5ea48f5ba79991af11683e831f4f68edf3f023593.json
new file mode 100644
--- /dev/null	(date 1681116033791)
+++ b/.angular/cache/15.2.5/babel-webpack/2e873c3e76069a52af9906e5ea48f5ba79991af11683e831f4f68edf3f023593.json	(date 1681116033791)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      this.albums = albums.filter(album => {\n        return album.id.toString().includes('/api/artists/' + this.artistId);\n      });\n      console.log('Albums:', this.albums);\n    });\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,KAAK,IAAG;QAClC,OAAOA,KAAK,CAACC,EAAE,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,eAAe,GAAG,IAAI,CAACZ,QAAQ,CAAC;MACtE,CAAC,CAAC;MACFa,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACP,MAAM,CAAC;IACrC,CAAC,CAAC;EACN;;AAfWZ,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlCzB,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","filter","album","id","toString","includes","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId)\n      .subscribe(albums => {\n        this.albums = albums.filter(album => {\n          return album.id.toString().includes('/api/artists/' + this.artistId);\n        });\n        console.log('Albums:', this.albums);\n      });\n  }\n\n\n  /*ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let artistId = parseInt(<string>params.get('id'));\n      this.apiService.getArtistDetails(artistId).subscribe(\n        (response: any) => {\n          this.artist = response;\n          this.albums = response.albums;\n          console.log('Albums:', this.albums);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    });\n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/3d59f0049ee49bf9b7555834914dcd87a176cdde71951298d7d9622caabee74f.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/3d59f0049ee49bf9b7555834914dcd87a176cdde71951298d7d9622caabee74f.json b/.angular/cache/15.2.5/babel-webpack/3d59f0049ee49bf9b7555834914dcd87a176cdde71951298d7d9622caabee74f.json
new file mode 100644
--- /dev/null	(date 1681115976295)
+++ b/.angular/cache/15.2.5/babel-webpack/3d59f0049ee49bf9b7555834914dcd87a176cdde71951298d7d9622caabee74f.json	(date 1681115976295)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      this.albums = albums.filter(album => {\n        return album.artist?.id === this.artistId;\n      });\n      console.log('Albums:', this.albums);\n    });\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,KAAK,IAAG;QAClC,OAAOA,KAAK,CAACC,MAAM,EAAEC,EAAE,KAAK,IAAI,CAACX,QAAQ;MAC3C,CAAC,CAAC;MACFY,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACN,MAAM,CAAC;IACrC,CAAC,CAAC;EACN;;AAfWZ,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlCxB,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","filter","album","artist","id","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId)\n      .subscribe(albums => {\n        this.albums = albums.filter(album => {\n          return album.artist?.id === this.artistId;\n        });\n        console.log('Albums:', this.albums);\n      });\n  }\n\n\n  /*ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let artistId = parseInt(<string>params.get('id'));\n      this.apiService.getArtistDetails(artistId).subscribe(\n        (response: any) => {\n          this.artist = response;\n          this.albums = response.albums;\n          console.log('Albums:', this.albums);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    });\n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/0f6a0c8f8c791c46abe70f6c01b03968845966e768425b04db9efcc692be3569.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/0f6a0c8f8c791c46abe70f6c01b03968845966e768425b04db9efcc692be3569.json b/.angular/cache/15.2.5/babel-webpack/0f6a0c8f8c791c46abe70f6c01b03968845966e768425b04db9efcc692be3569.json
new file mode 100644
--- /dev/null	(date 1681115909086)
+++ b/.angular/cache/15.2.5/babel-webpack/0f6a0c8f8c791c46abe70f6c01b03968845966e768425b04db9efcc692be3569.json	(date 1681115909086)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      albums.forEach(album => {\n        if (album.artist.id === this.artistId) {\n          this.albums.push(album);\n        }\n      });\n      console.log('Albums:', this.albums + ' ' + this.artistId);\n    });\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClBA,MAAM,CAACC,OAAO,CAACC,KAAK,IAAG;QACrB,IAAIA,KAAK,CAACC,MAAM,CAACC,EAAE,KAAK,IAAI,CAACX,QAAQ,EAAE;UACrC,IAAI,CAACO,MAAM,CAACK,IAAI,CAACH,KAAK,CAAC;;MAE3B,CAAC,CAAC;MACFI,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACP,MAAM,GAAG,GAAG,GAAG,IAAI,CAACP,QAAQ,CAAC;IAC3D,CAAC,CAAC;EACN;;AAjBWL,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlCzB,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","forEach","album","artist","id","push","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId)\n      .subscribe(albums => {\n        albums.forEach(album => {\n          if (album.artist.id === this.artistId) {\n            this.albums.push(album);\n          }\n        });\n        console.log('Albums:', this.albums + ' ' + this.artistId);\n      });\n  }\n\n    /*ngOnInit() {\n      this.route.paramMap.subscribe(params => {\n        let artistId = parseInt(<string>params.get('id'));\n        this.apiService.getArtistDetails(artistId).subscribe(\n          (response: any) => {\n            this.artist = response;\n            this.albums = response.albums;\n            console.log('Albums:', this.albums);\n          },\n          error => {\n            console.log(error);\n          }\n        );\n      });\n    }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/af4006a6c1502f919ca5cbf409e2fe1163f7607b302abdb461306f4f6469dd97.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/af4006a6c1502f919ca5cbf409e2fe1163f7607b302abdb461306f4f6469dd97.json b/.angular/cache/15.2.5/babel-webpack/af4006a6c1502f919ca5cbf409e2fe1163f7607b302abdb461306f4f6469dd97.json
new file mode 100644
--- /dev/null	(date 1681115910538)
+++ b/.angular/cache/15.2.5/babel-webpack/af4006a6c1502f919ca5cbf409e2fe1163f7607b302abdb461306f4f6469dd97.json	(date 1681115910538)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { catchError, from, map, Observable, switchMap, takeWhile } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  getArtist(id) {\n    return this.http.get(`${this.apiUrl}/artists/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(keyword: string): Observable<Playlist[]> {\r\n      const url = `${this.apiUrl}/playlists?q=${keyword}`;\r\n      return this.http.get<Playlist[]>(url);\r\n    }*/\n  getArtistAlbums(artistId, page) {\n    const artistUrl = `${this.apiUrl}/artists/${artistId}`;\n    const albumUrl = `${this.apiUrl}/albums`;\n    let params = new HttpParams();\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get(artistUrl).pipe(switchMap(artist => {\n      params = params.set('artistId', artist.id.toString());\n      return this.http.get(albumUrl, {\n        params\n      });\n    }));\n  }\n  getAllPlaylists(searchTerm) {\n    let id = 1;\n    const playlists = [];\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, {\n          params\n        }).pipe(map(response => {\n          if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n            playlists.push(response);\n          }\n          id++;\n          if (response.id) {\n            // continue the loop\n            getPlaylist();\n          } else {\n            observer.next(playlists);\n            observer.complete();\n          }\n        }), catchError(error => {\n          // stop the loop and return the playlists that have been fetched so far\n          observer.next(playlists);\n          observer.complete();\n          return [];\n        }), takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n      getPlaylist();\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","catchError","from","map","Observable","switchMap","takeWhile","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","getArtist","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","getArtistAlbums","artistId","page","artistUrl","albumUrl","params","set","toString","artist","getAllPlaylists","searchTerm","playlists","observer","getPlaylist","append","name","toLowerCase","includes","push","next","complete","error","subscribe","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {catchError, from, map, Observable, switchMap, takeWhile} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  getArtist(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists/${id}`);\n  }\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchAlbums(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n/*  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }*/\n\n  getArtistAlbums(artistId: number, page?: number): Observable<Album[]> {\n    const artistUrl = `${this.apiUrl}/artists/${artistId}`;\n    const albumUrl = `${this.apiUrl}/albums`;\n\n    let params = new HttpParams();\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n\n    return this.http.get<Artist>(artistUrl).pipe(\n      switchMap(artist => {\n        params = params.set('artistId', artist.id.toString());\n        return this.http.get<Album[]>(albumUrl, { params });\n      })\n    );\n  }\n\n\n\n\n  getAllPlaylists(searchTerm?: string): Observable<any> {\n    let id = 1;\n    const playlists: any[] = [];\n\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, { params }).pipe(\n          map((response: any) => {\n            if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n              playlists.push(response);\n            }\n            id++;\n            if (response.id) {\n              // continue the loop\n              getPlaylist();\n            } else {\n              observer.next(playlists);\n              observer.complete();\n            }\n          }),\n          catchError(error => {\n            // stop the loop and return the playlists that have been fetched so far\n            observer.next(playlists);\n            observer.complete();\n            return [];\n          }),\n          takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n\n      getPlaylist();\n    });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n  artist: Artist;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n\nexport interface Artist {\n  id: number;\n  name: string;\n  songs: Song[];\n  albums: Album[];\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/d67508d3f2c86a22b08bf955ef3fd641be7c86216c6875f234c94440526ca6b5.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/d67508d3f2c86a22b08bf955ef3fd641be7c86216c6875f234c94440526ca6b5.json b/.angular/cache/15.2.5/babel-webpack/d67508d3f2c86a22b08bf955ef3fd641be7c86216c6875f234c94440526ca6b5.json
new file mode 100644
--- /dev/null	(date 1681115852853)
+++ b/.angular/cache/15.2.5/babel-webpack/d67508d3f2c86a22b08bf955ef3fd641be7c86216c6875f234c94440526ca6b5.json	(date 1681115852853)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      albums.forEach(album => {\n        if (album.artist.id === this.artistId) {\n          this.albums.push(album);\n        }\n      });\n      console.log('Albums:', this.albums + ' ' + this.artistId);\n    });\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACE5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClBA,MAAM,CAACC,OAAO,CAACC,KAAK,IAAG;QACrB,IAAIA,KAAK,CAACC,MAAM,CAACC,EAAE,KAAK,IAAI,CAACX,QAAQ,EAAE;UACrC,IAAI,CAACO,MAAM,CAACK,IAAI,CAACH,KAAK,CAAC;;MAE3B,CAAC,CAAC;MACFI,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACP,MAAM,GAAG,GAAG,GAAG,IAAI,CAACP,QAAQ,CAAC;IAC3D,CAAC,CAAC;EACN;;AAjBWL,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlCzB,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","forEach","album","artist","id","push","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId)\n      .subscribe(albums => {\n        albums.forEach(album => {\n          if (album.artist.id === this.artistId) {\n            this.albums.push(album);\n          }\n        });\n        console.log('Albums:', this.albums + ' ' + this.artistId);\n      });\n  } \n\n    /*ngOnInit() {\n      this.route.paramMap.subscribe(params => {\n        let artistId = parseInt(<string>params.get('id'));\n        this.apiService.getArtistDetails(artistId).subscribe(\n          (response: any) => {\n            this.artist = response;\n            this.albums = response.albums;\n            console.log('Albums:', this.albums);\n          },\n          error => {\n            console.log(error);\n          }\n        );\n      });\n    }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/60eb8a13917cef7460f2913819a188545bfae06be5bee0551fd7a3ed6b73c37a.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/60eb8a13917cef7460f2913819a188545bfae06be5bee0551fd7a3ed6b73c37a.json b/.angular/cache/15.2.5/babel-webpack/60eb8a13917cef7460f2913819a188545bfae06be5bee0551fd7a3ed6b73c37a.json
new file mode 100644
--- /dev/null	(date 1681115727521)
+++ b/.angular/cache/15.2.5/babel-webpack/60eb8a13917cef7460f2913819a188545bfae06be5bee0551fd7a3ed6b73c37a.json	(date 1681115727521)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { catchError, from, map, Observable, takeWhile } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  getArtist(id) {\n    return this.http.get(`${this.apiUrl}/artists/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(keyword: string): Observable<Playlist[]> {\r\n      const url = `${this.apiUrl}/playlists?q=${keyword}`;\r\n      return this.http.get<Playlist[]>(url);\r\n    }*/\n  getArtistAlbums(artistId, page) {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get(`${this.apiUrl}/albums`, {\n      params\n    });\n  }\n  getAllPlaylists(searchTerm) {\n    let id = 1;\n    const playlists = [];\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, {\n          params\n        }).pipe(map(response => {\n          if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n            playlists.push(response);\n          }\n          id++;\n          if (response.id) {\n            // continue the loop\n            getPlaylist();\n          } else {\n            observer.next(playlists);\n            observer.complete();\n          }\n        }), catchError(error => {\n          // stop the loop and return the playlists that have been fetched so far\n          observer.next(playlists);\n          observer.complete();\n          return [];\n        }), takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n      getPlaylist();\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","catchError","from","map","Observable","takeWhile","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","getArtist","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","getArtistAlbums","artistId","page","params","set","toString","getAllPlaylists","searchTerm","playlists","observer","getPlaylist","append","name","toLowerCase","includes","push","next","complete","error","subscribe","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {catchError, from, map, Observable, takeWhile} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  getArtist(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists/${id}`);\n  }\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchAlbums(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n/*  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }*/\n\n  getArtistAlbums(artistId: number, page?: number): Observable<Album[]> {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get<Album[]>(`${this.apiUrl}/albums`, { params });\n  }\n\n\n\n  getAllPlaylists(searchTerm?: string): Observable<any> {\n    let id = 1;\n    const playlists: any[] = [];\n\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, { params }).pipe(\n          map((response: any) => {\n            if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n              playlists.push(response);\n            }\n            id++;\n            if (response.id) {\n              // continue the loop\n              getPlaylist();\n            } else {\n              observer.next(playlists);\n              observer.complete();\n            }\n          }),\n          catchError(error => {\n            // stop the loop and return the playlists that have been fetched so far\n            observer.next(playlists);\n            observer.complete();\n            return [];\n          }),\n          takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n\n      getPlaylist();\n    });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n  artist: Artist;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n\nexport interface Artist {\n  id: number;\n  name: string;\n  songs: Song[];\n  albums: Album[];\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/2c837620236a64c42b91b736945cd921cb4bf4f98cffa84783b8b175da29bbc1.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/2c837620236a64c42b91b736945cd921cb4bf4f98cffa84783b8b175da29bbc1.json b/.angular/cache/15.2.5/babel-webpack/2c837620236a64c42b91b736945cd921cb4bf4f98cffa84783b8b175da29bbc1.json
new file mode 100644
--- /dev/null	(date 1681115678064)
+++ b/.angular/cache/15.2.5/babel-webpack/2c837620236a64c42b91b736945cd921cb4bf4f98cffa84783b8b175da29bbc1.json	(date 1681115678064)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId).subscribe(albums => {\n      this.albums = albums;\n      console.log('Albums:', this.albums);\n    });\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ACG5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,eAAe,CAAC,IAAI,CAACL,QAAQ,CAAC,CAC7CM,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACA,MAAM,GAAGA,MAAM;MACpBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACF,MAAM,CAAC;IACrC,CAAC,CAAC;EACN;;AAbWZ,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVlCpB,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtistAlbums","subscribe","albums","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts"],"sourcesContent":["<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\nimport {forkJoin} from \"rxjs\";\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtistAlbums(this.artistId)\n      .subscribe(albums => {\n        this.albums = albums;\n        console.log('Albums:', this.albums);\n      });\n  }\n\n\n  /*ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let artistId = parseInt(<string>params.get('id'));\n      this.apiService.getArtistDetails(artistId).subscribe(\n        (response: any) => {\n          this.artist = response;\n          this.albums = response.albums;\n          console.log('Albums:', this.albums);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    });\n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/c6684fa085b4a9c98a46944e636c66be19ec274e5d8ea04d780a88c3577d15d1.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/c6684fa085b4a9c98a46944e636c66be19ec274e5d8ea04d780a88c3577d15d1.json b/.angular/cache/15.2.5/babel-webpack/c6684fa085b4a9c98a46944e636c66be19ec274e5d8ea04d780a88c3577d15d1.json
new file mode 100644
--- /dev/null	(date 1681115668473)
+++ b/.angular/cache/15.2.5/babel-webpack/c6684fa085b4a9c98a46944e636c66be19ec274e5d8ea04d780a88c3577d15d1.json	(date 1681115668473)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { catchError, from, map, Observable, takeWhile } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  getArtist(id) {\n    return this.http.get(`${this.apiUrl}/artists/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(keyword: string): Observable<Playlist[]> {\r\n      const url = `${this.apiUrl}/playlists?q=${keyword}`;\r\n      return this.http.get<Playlist[]>(url);\r\n    }*/\n  getArtistAlbums(artistId, page) {\n    let params = new HttpParams().set('artist', artistId.toString()); // utiliser l'ID de l'artiste dans la requête\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get(`${this.apiUrl}/albums`, {\n      params\n    });\n  }\n  getAllPlaylists(searchTerm) {\n    let id = 1;\n    const playlists = [];\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, {\n          params\n        }).pipe(map(response => {\n          if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n            playlists.push(response);\n          }\n          id++;\n          if (response.id) {\n            // continue the loop\n            getPlaylist();\n          } else {\n            observer.next(playlists);\n            observer.complete();\n          }\n        }), catchError(error => {\n          // stop the loop and return the playlists that have been fetched so far\n          observer.next(playlists);\n          observer.complete();\n          return [];\n        }), takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n      getPlaylist();\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","catchError","from","map","Observable","takeWhile","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","getArtist","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","getArtistAlbums","artistId","page","params","set","toString","getAllPlaylists","searchTerm","playlists","observer","getPlaylist","append","name","toLowerCase","includes","push","next","complete","error","subscribe","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {catchError, from, map, Observable, takeWhile} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  getArtist(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists/${id}`);\n  }\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchAlbums(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n/*  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }*/\n\n  getArtistAlbums(artistId: number, page?: number): Observable<Album[]> {\n    let params = new HttpParams().set('artist', artistId.toString()); // utiliser l'ID de l'artiste dans la requête\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get<Album[]>(`${this.apiUrl}/albums`, { params });\n  }\n\n\n  getAllPlaylists(searchTerm?: string): Observable<any> {\n    let id = 1;\n    const playlists: any[] = [];\n\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, { params }).pipe(\n          map((response: any) => {\n            if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n              playlists.push(response);\n            }\n            id++;\n            if (response.id) {\n              // continue the loop\n              getPlaylist();\n            } else {\n              observer.next(playlists);\n              observer.complete();\n            }\n          }),\n          catchError(error => {\n            // stop the loop and return the playlists that have been fetched so far\n            observer.next(playlists);\n            observer.complete();\n            return [];\n          }),\n          takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n\n      getPlaylist();\n    });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n  artist: Artist;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n\nexport interface Artist {\n  id: number;\n  name: string;\n  songs: Song[];\n  albums: Album[];\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/437471605ea12dad2d5e8b0d80717b1a05fce3ce187ac1fd5085eb6d5a66fe6e.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/437471605ea12dad2d5e8b0d80717b1a05fce3ce187ac1fd5085eb6d5a66fe6e.json b/.angular/cache/15.2.5/babel-webpack/437471605ea12dad2d5e8b0d80717b1a05fce3ce187ac1fd5085eb6d5a66fe6e.json
new file mode 100644
--- /dev/null	(date 1681115631087)
+++ b/.angular/cache/15.2.5/babel-webpack/437471605ea12dad2d5e8b0d80717b1a05fce3ce187ac1fd5085eb6d5a66fe6e.json	(date 1681115631087)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { catchError, from, map, Observable, takeWhile } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SpotifyService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n  }\n  getAlbums() {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n  getAlbum(id) {\n    return from(fetch(`${this.apiUrl}/albums/${id}`).then(response => response.json()));\n  }\n  getSong(id) {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  getArtist(id) {\n    return this.http.get(`${this.apiUrl}/artists/${id}`);\n  }\n  searchSongs(query) {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  searchAlbums(query) {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response;\n      } else {\n        return [response];\n      }\n    }));\n  }\n  /*  searchPlaylists(keyword: string): Observable<Playlist[]> {\r\n      const url = `${this.apiUrl}/playlists?q=${keyword}`;\r\n      return this.http.get<Playlist[]>(url);\r\n    }*/\n  getArtistAlbums(artistId, page) {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get(`${this.apiUrl}/albums`, {\n      params\n    });\n  }\n  getAllPlaylists(searchTerm) {\n    let id = 1;\n    const playlists = [];\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, {\n          params\n        }).pipe(map(response => {\n          if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n            playlists.push(response);\n          }\n          id++;\n          if (response.id) {\n            // continue the loop\n            getPlaylist();\n          } else {\n            observer.next(playlists);\n            observer.complete();\n          }\n        }), catchError(error => {\n          // stop the loop and return the playlists that have been fetched so far\n          observer.next(playlists);\n          observer.complete();\n          return [];\n        }), takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n      getPlaylist();\n    });\n  }\n}\nSpotifyService.ɵfac = function SpotifyService_Factory(t) {\n  return new (t || SpotifyService)(i0.ɵɵinject(i1.HttpClient));\n};\nSpotifyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpotifyService,\n  factory: SpotifyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpParams","catchError","from","map","Observable","takeWhile","SpotifyService","constructor","http","getAlbums","get","apiUrl","getAlbum","id","fetch","then","response","json","getSong","getArtist","searchSongs","query","pipe","Array","isArray","searchArtists","searchAlbums","getArtistAlbums","artistId","page","params","set","toString","getAllPlaylists","searchTerm","playlists","observer","getPlaylist","append","name","toLowerCase","includes","push","next","complete","error","subscribe","factory","providedIn"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\services\\spotify.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {catchError, from, map, Observable, takeWhile} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n\n  private apiUrl = 'https://mmi.unilim.fr/~morap01/L250/public/index.php/api';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAlbums(): Observable<Object> {\n    return this.http.get(`${this.apiUrl}/albums`);\n  }\n\n  getAlbum(id: number): Observable<any> {\n    return from(\n      fetch(`${this.apiUrl}/albums/${id}`)\n        .then(response => response.json())\n    );\n  }\n  getSong(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs/${id}`);\n  }\n  getArtist(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists/${id}`);\n  }\n\n  searchSongs(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/songs?title=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchArtists(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/artists?name=${query}`).pipe(\n      map((response: any) => {\n        if (Array.isArray(response)) {\n          return response;\n        } else {\n          return [response];\n        }\n      })\n    );\n  }\n\n  searchAlbums(query: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/albums?title=${query}`).pipe(\n      map((response: any) => {\n          if (Array.isArray(response)) {\n            return response;\n          } else {\n            return [response];\n          }\n        }\n      ));\n  }\n\n/*  searchPlaylists(keyword: string): Observable<Playlist[]> {\n    const url = `${this.apiUrl}/playlists?q=${keyword}`;\n    return this.http.get<Playlist[]>(url);\n  }*/\n\n  getArtistAlbums(artistId: number, page?: number): Observable<Album[]> {\n    let params = new HttpParams().set('artistId', artistId.toString());\n    if (page) {\n      params = params.set('page', page.toString());\n    }\n    return this.http.get<Album[]>(`${this.apiUrl}/albums`, { params });\n  }\n\n  getAllPlaylists(searchTerm?: string): Observable<any> {\n    let id = 1;\n    const playlists: any[] = [];\n\n    return new Observable(observer => {\n      const getPlaylist = () => {\n        let params = new HttpParams();\n        if (searchTerm) {\n          params = params.append('q', searchTerm);\n        }\n        this.http.get(`${this.apiUrl}/playlists/${id}`, { params }).pipe(\n          map((response: any) => {\n            if (!searchTerm || response.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n              playlists.push(response);\n            }\n            id++;\n            if (response.id) {\n              // continue the loop\n              getPlaylist();\n            } else {\n              observer.next(playlists);\n              observer.complete();\n            }\n          }),\n          catchError(error => {\n            // stop the loop and return the playlists that have been fetched so far\n            observer.next(playlists);\n            observer.complete();\n            return [];\n          }),\n          takeWhile(() => id < 1000) // limit the loop to a maximum of 1000 iterations\n        ).subscribe();\n      };\n\n      getPlaylist();\n    });\n  }\n}\n\nexport interface Album {\n  id: number;\n  title: string;\n  image: string;\n  artist: Artist;\n}\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\nexport interface Song {\n  id: number;\n  title: string;\n  length: number;\n  youtube : string;\n}\n\nexport interface Artist {\n  id: number;\n  name: string;\n  songs: Song[];\n  albums: Album[];\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
Index: .angular/cache/15.2.5/babel-webpack/f044cc151c8b459abaee27134a74a40610d964501a50797072c084882e3466a8.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.angular/cache/15.2.5/babel-webpack/f044cc151c8b459abaee27134a74a40610d964501a50797072c084882e3466a8.json b/.angular/cache/15.2.5/babel-webpack/f044cc151c8b459abaee27134a74a40610d964501a50797072c084882e3466a8.json
new file mode 100644
--- /dev/null	(date 1681115600704)
+++ b/.angular/cache/15.2.5/babel-webpack/f044cc151c8b459abaee27134a74a40610d964501a50797072c084882e3466a8.json	(date 1681115600704)
@@ -0,0 +1,1 @@
+{"ast":null,"code":"import { forkJoin } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ArtistAlbumsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"h5\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", album_r1.title);\n    i0.ɵɵproperty(\"src\", album_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r1.title);\n  }\n}\nexport class ArtistAlbumsComponent {\n  constructor(albumService, route) {\n    this.albumService = albumService;\n    this.route = route;\n    this.artistId = 0;\n    this.albums = [];\n  }\n  ngOnInit() {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtist(this.artistId).subscribe(artist => {\n      // Récupérer les URL des albums de l'artiste\n      const albumUrls = artist.albums;\n      // Récupérer les détails de chaque album\n      const albumRequests = albumUrls.map(url => this.albumService.getAlbumByUrl(url));\n      forkJoin(albumRequests).subscribe(albums => {\n        // Filtrer les albums de l'artiste\n        // @ts-ignore\n        this.albums = albums.filter(album => album.artist.id === this.artistId);\n        console.log('Albums:', this.albums);\n      });\n    });\n  }\n}\nArtistAlbumsComponent.ɵfac = function ArtistAlbumsComponent_Factory(t) {\n  return new (t || ArtistAlbumsComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nArtistAlbumsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArtistAlbumsComponent,\n  selectors: [[\"app-artist-albums\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"min-h-screen\", \"bg-gradient-to-br\", \"from-gray-900\", \"to-gray-800\"], [1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-4xl\", \"font-bold\", \"text-white\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"p-4\", \"rounded\"], [1, \"w-full\", \"h-auto\", \"mb-4\", 3, \"src\", \"alt\"], [1, \"text-lg\", \"font-semibold\", \"text-green-500\"]],\n  template: function ArtistAlbumsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Albums\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtemplate(5, ArtistAlbumsComponent_div_5_Template, 5, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAAQA,QAAQ,QAAO,MAAM;;;;;;;ICCvBC,2BAAkC;IAE9BA,yBAA4E;IAC5EA,6BAAiD;IAAAA,YAAiB;IAAAA,iBAAK;;;;IADnBA,eAAuB;IAAvBA,+CAAuB;IAAtEA,sDAAmB;IACyBA,eAAiB;IAAjBA,oCAAiB;;;ADG5E,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAA4B,EAAUC,KAAqB;IAA3D,iBAAY,GAAZD,YAAY;IAA0B,UAAK,GAALC,KAAK;IAH/D,aAAQ,GAAW,CAAC;IACpB,WAAM,GAAY,EAAE;EAE8D;EAElFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9D,IAAI,CAACP,YAAY,CAACQ,SAAS,CAAC,IAAI,CAACL,QAAQ,CAAC,CAACM,SAAS,CAAEC,MAAwB,IAAI;MAChF;MACA,MAAMC,SAAS,GAAGD,MAAM,CAACE,MAAM;MAC/B;MACA,MAAMC,aAAa,GAAGF,SAAS,CAACG,GAAG,CAAEC,GAAQ,IAAK,IAAI,CAACf,YAAY,CAACgB,aAAa,CAACD,GAAG,CAAC,CAAC;MACvFnB,QAAQ,CAACiB,aAAa,CAAC,CAACJ,SAAS,CAACG,MAAM,IAAG;QACzC;QACA;QACA,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACK,MAAM,CAAEC,KAAmC,IAAKA,KAAK,CAACR,MAAM,CAACS,EAAE,KAAK,IAAI,CAAChB,QAAQ,CAAC;QACvGiB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACT,MAAM,CAAC;MACrC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;;AApBWd,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVlC7B,8BAAsE;MAExBA,sBAAM;MAAAA,iBAAK;MACrDA,8BAAkE;MAChEA,sEAKM;MACRA,iBAAM;;;MANmBA,eAAS;MAATA,oCAAS","names":["forkJoin","i0","ArtistAlbumsComponent","constructor","albumService","route","ngOnInit","artistId","Number","snapshot","paramMap","get","getArtist","subscribe","artist","albumUrls","albums","albumRequests","map","url","getAlbumByUrl","filter","album","id","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.ts","C:\\IUT\\spotizer\\src\\app\\artist-albums\\artist-albums.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Album, SpotifyService} from '../services/spotify.service';\nimport {forkJoin} from \"rxjs\";\n\n@Component({\n  selector: 'app-artist-albums',\n  templateUrl: './artist-albums.component.html',\n  styleUrls: ['./artist-albums.component.css']\n})\nexport class ArtistAlbumsComponent implements OnInit {\n  artistId: number = 0;\n  albums: Album[] = [];\n\n  constructor(private albumService: SpotifyService, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.artistId = Number(this.route.snapshot.paramMap.get('id'));\n    this.albumService.getArtist(this.artistId).subscribe((artist: { albums: any; }) => {\n      // Récupérer les URL des albums de l'artiste\n      const albumUrls = artist.albums;\n      // Récupérer les détails de chaque album\n      const albumRequests = albumUrls.map((url: any) => this.albumService.getAlbumByUrl(url));\n      forkJoin(albumRequests).subscribe(albums => {\n        // Filtrer les albums de l'artiste\n        // @ts-ignore\n        this.albums = albums.filter((album: { artist: { id: number; }; }) => album.artist.id === this.artistId);\n        console.log('Albums:', this.albums);\n      });\n    });\n  }\n\n  /*ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let artistId = parseInt(<string>params.get('id'));\n      this.apiService.getArtistDetails(artistId).subscribe(\n        (response: any) => {\n          this.artist = response;\n          this.albums = response.albums;\n          console.log('Albums:', this.albums);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    });\n  }*/\n}\n","<div class=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800\">\n  <div class=\"container mx-auto p-4\">\n    <h1 class=\"text-4xl font-bold text-white\">Albums</h1>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <div *ngFor=\"let album of albums\">\n        <div class=\"bg-gray-800 p-4 rounded\">\n          <img [src]=\"album.image\" class=\"w-full h-auto mb-4\" alt=\"{{ album.title }}\">\n          <h5 class=\"text-lg font-semibold text-green-500\">{{ album.title }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
\ No newline at end of file
diff --git a/node_modules/.cli-ngcc/c8d13dc37da6d66e54d3adfa51c1b351fcbbbe547f111ba49871806377495414.lock b/node_modules/.cli-ngcc/c8d13dc37da6d66e54d3adfa51c1b351fcbbbe547f111ba49871806377495414.lock
new file mode 100644
